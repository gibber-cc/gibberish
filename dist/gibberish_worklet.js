const global = typeof window === 'undefined' ? {} : window;
        let Gibberish = null,
            Clock = null,
            time  = 0,
            sin   = null,
            sinr  = null,
            sinn  = null,
            cos   = null,
            cosr  = null,
            cosn  = null,
            abs   = null,
            random= null,
            floor = null,
            ceil  = null,
            round = null,
            min   = null,
            max   = null,
            g     = null

        let initialized = false;
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Gibberish = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
let ugen = require( '../ugen.js' )

let analyzer = Object.create( ugen )

Object.assign( analyzer, {
  __type__: 'analyzer',
  priority:0
})

module.exports = analyzer

},{"../ugen.js":72}],2:[function(require,module,exports){
module.exports = function( Gibberish ) {
  const { In, Out, SSD } = require( './singlesampledelay.js'  )( Gibberish )

  const analyzers = {
    SSD,
    SSD_In: In,
    SSD_Out: Out, 
    Follow: require( './follow.dsp.js'  )( Gibberish )
  }
  analyzers.Follow_out = analyzers.Follow.out
  analyzers.Follow_in  = analyzers.Follow.in
  
  analyzers.export = target => {
    for( let key in analyzers ) {
      if( key !== 'export' ) {
        target[ key ] = analyzers[ key ]
      }
    }
  }

  return analyzers

}

},{"./follow.dsp.js":3,"./singlesampledelay.js":4}],3:[function(require,module,exports){
const g = require( 'genish.js' ),
      analyzer = require( './analyzer.js' ),
      ugen = require( '../ugen.js' )

const genish = g

module.exports = function( Gibberish ) {

  const Follow = function( __props ){
    const props = Object.assign( {}, Follow.defaults, __props )

    let isStereo = typeof props.input.isStereo !== 'undefined' ? props.input.isStereo : false

    let out = props 

    /* if we are in the main thread,
     * only send a command to make a Follow instance
     * to the processor thread and include the id #
     * of the input ugen.
     */

    //console.log( 'isStereo:', Gibberish.mode, isStereo, props.input )
    if( Gibberish.mode === 'worklet' ) {
      // send obj to be made in processor thread
      props.input = { id: props.input.id }
      props.isStereo = isStereo

      // creates clashes in processor thread unless
      // we skip a number here... nice
      Gibberish.utilities.getUID()

      props.overrideid = Gibberish.utilities.getUID()

      // XXX seems like this id gets overridden somewhere
      // hence .overrideid
      props.id = props.overrideid

      Gibberish.worklet.port.postMessage({
        address:'add',

        properties:JSON.stringify( props ),

        name:['analysis','Follow']
      })

      Gibberish.worklet.ugens.set( props.overrideid, out )

      let mult = props.multiplier

      Object.defineProperty( out, 'multiplier', {
        get() { return mult },
        set(v){
          mult = v
          Gibberish.worklet.port.postMessage({ 
            address:'set', 
            object:props.overrideid,
            name:'multiplier',
            value:mult
          })
        }
      })

      let offset = props.offset
      Object.defineProperty( out, 'offset', {
        get() { return offset },
        set(v){
          offset = v
          Gibberish.worklet.port.postMessage({ 
            address:'set', 
            object:props.overrideid,
            name:'offset',
            value:offset
          })
        }
      })
    }else{
      //isStereo = props.isStereo

      const buffer = g.data( props.bufferSize, 1 )
      const input  = g.in( 'input' )
      const multiplier = g.in( 'multiplier' )
      const offset     = g.in( 'offset' )
      
      const follow_out = Object.create( analyzer )
      follow_out.id = props.id = __props.overrideid

      let avg = g.data( 1,1, { meta:true } ) // output; make available outside jsdsp block
      const idx = avg.memory.values.idx
  
      const callback = function( memory ) {
        return avg[0]
      }

      const out = {
        callback,
        input:props.input,
        isStereo,
        dirty:true,
        inputNames:[ 'input', 'memory' ],
        inputs:[ props.input ],
        id: Gibberish.utilities.getUID(),

        __properties__: { input:props.input },
      }

      // nonsense to make our custom function work
      out.callback.ugenName = out.ugenName = `follow_out_${follow_out.id}`
      out.id = __props.overrideid

      // begin input tracker
      const follow_in = Object.create( ugen )

      if( isStereo === true ) {
        if( props.outputStereo === false ) {
          { 
            "use jsdsp"
            // phase to write to follow buffer
            const bufferPhaseOut = g.accum( 1,0,{ max:props.bufferSize, min:0 })

            // hold running sum
            const sum = g.data( 1, 1, { meta:true })

            const mono = props.abs === true ? g.abs( input[0] + input[1] ) : input[0] + input[1]

            sum[0] = sum[0] + mono - g.peek( buffer, bufferPhaseOut, { mode:'simple' })

            g.poke( buffer, g.abs( mono ), bufferPhaseOut )

            avg = (sum[0] / props.bufferSize) * multiplier + offset
          }
        }else{
          const bufferL = buffer
          const bufferR = g.data( props.bufferSize, 1 )

          { 
            "use jsdsp"
            // phase to write to follow buffer
            const bufferPhaseOut = g.accum( 1,0,{ max:props.bufferSize, min:0 })

            // hold running sum
            const sumL = g.data( 1, 1, { meta:true })
            const sumR = g.data( 1, 1, { meta:true })

            const left = props.abs === true  ? g.abs( input[0] ) : input[0]
            const right = props.abs === true ? g.abs( input[1] ) : input[1]

            sumL[0] = sumL[0] + left - g.peek( bufferL, bufferPhaseOut, { mode:'simple' })
            sumR[0] = sumR[0] + right- g.peek( bufferR, bufferPhaseOut, { mode:'simple' })

            g.poke( bufferL, g.abs( left  ), bufferPhaseOut )
            g.poke( bufferR, g.abs( right ), bufferPhaseOut )

            avg = [
              (sumL[0] / props.bufferSize) * multiplier + offset,
              (sumR[0] / props.bufferSize) * multiplier + offset,
            ]
          }
        }
      }else{
        {
          "use jsdsp"
          // phase to write to follow buffer
          const bufferPhaseOut = g.accum( 1,0,{ max:props.bufferSize, min:0 })

          // hold running sum
          const sum = g.data( 1, 1, { meta:true })

          const __input = props.abs === true ? g.abs( input ) : input

          sum[0] = sum[0] + __input - g.peek( buffer, bufferPhaseOut, { mode:'simple' })
          
          g.poke( buffer, g.abs( input ), bufferPhaseOut )

          avg = (sum[0] / props.bufferSize) * multiplier + offset
        }
      }
      Gibberish.utilities.getUID()

      props.isStereo = false
      const record = Gibberish.factory( 
        follow_in,
        avg, 
        ['analysis', 'follow_in'], 
        props
      )

      // nonsense to make our custom function work
      record.callback.ugenName = record.ugenName = `follow_in_${follow_out.id}`

      if( Gibberish.analyzers.indexOf( record ) === -1 ) Gibberish.analyzers.push( record )

      Gibberish.dirty( Gibberish.analyzers )

      Gibberish.ugens.set( __props.overrideid, record )

      out.record = record
    }

    return out

  }
 
  Follow.defaults = {
    input:0,
    bufferSize:1024,
    multiplier:1,
    abs: true,
    outputStereo:false,
    offset:0
  }

  return Follow

}

},{"../ugen.js":72,"./analyzer.js":1,"genish.js":114}],4:[function(require,module,exports){
const g = require( 'genish.js' ),
      analyzer = require( './analyzer.js' ),
      proxy    = require( '../workletProxy.js' ),
      ugen     = require( '../ugen.js' )

module.exports = function( Gibberish ) {
 
// an SSD ugen is in effect two-in-one,
// one for input and one for output.  
  
const SSD = inputProps => {
  const ssd = Object.create( analyzer )

  const props = Object.assign({}, SSD.defaults, inputProps )
  const isStereo = props.isStereo 
  const input    = g.in( 'input' )
  const historyL = g.history(0)
  const historyR = g.history(0)

  ssd.out = Out( [historyL,historyR], props )
  ssd.in  =  In( [historyL,historyR], props )

  ssd.listen = ssd.in.listen

  return ssd 
}

const Out = ( histories,props ) => {
  let history
  // if we don't find our history ugen in the processor thread,
  // just go ahead and make a new one, they're cheap...
  if( Gibberish.mode === 'processor' ) {
    const id = Array.isArray( histories ) ? histories[0].id : histories.id
    history = Gibberish.ugens.get( id )
    if( history === undefined ) {
      history = g.history( 0 )
      Gibberish.ugens.set( id, history )
    }
    if( props === undefined ) props = { id }
  }else{
    history = histories[0]
  }

  return Gibberish.factory( Object.create( ugen ), history.out, ['analysis','SSD_Out'], props, null )
}

const In = histories => {
  const input = g.in( 'input' )
  let historyL, historyR
  
  if( Gibberish.mode === 'processor' ) {
    // for some reason the proessor id is always one off from the main thread id
    historyL = Gibberish.ugens.get( histories.id - 1 )
    historyR = Gibberish.ugens.get( histories.id )
  }else{
    historyL = histories[0]
    historyR = histories[1]
  }

  // deliberate let
  let ssdin = Object.create( ugen )
  
  ssdin.listen = function( input ) {
    ssdin.input = input
    // changing the input must trigger codegen
    Gibberish.dirty( Gibberish.analyzers ) 

    let isStereo = input.isStereo
    if( input.isStereo === undefined && input.isop === true ) {
      isStereo = input.inputs[0].isStereo === true || input.inputs[1].isStereo === true 
    }
    if( isStereo === true && Gibberish.mode === 'processor' ) {
      const idx = historyL.graph.memory.value.idx     
      ssdin.callback = function( input, memory ) {
        memory[ idx ] = input[ 0 ]
        memory[ idx + 1 ] = input[ 1 ]
        return 0     
      }

      // when each ugen callback is passed to the master callback function
      // it needs to have a ugenName property; we'll just copy this over
      ssdin.callback.ugenName = ssdin.ugenName
    }
  }

  ssdin = Gibberish.factory( ssdin, input, ['analysis','SSD_In'], { 'input':0 } )

  // overwrite the callback function in the processor thread...
  if( Gibberish.mode === 'processor' ) {
    const idx = historyL.graph.memory.value.idx
    
    ssdin.callback = function( input, memory ) {
      memory[ idx ] = input
      return 0     
    }

    // when each ugen callback is passed to the master callback function
    // it needs to have a ugenName property; we'll just copy this over
    ssdin.callback.ugenName = ssdin.ugenName
  }

  ssdin.type = 'analysis'
  Gibberish.analyzers.push( ssdin )

  return ssdin
}

SSD.defaults = {
  input:0,
  isStereo:false
}

return { In, Out, SSD }

}

},{"../ugen.js":72,"../workletProxy.js":74,"./analyzer.js":1,"genish.js":114}],5:[function(require,module,exports){
const ugen = require( '../ugen.js' ),
      g = require( 'genish.js' )

module.exports = function( Gibberish ) {

  const AD = function( argumentProps ) {
    const ad = Object.create( ugen ),
          attack  = g.in( 'attack' ),
          decay   = g.in( 'decay' )

    const props = Object.assign( {}, AD.defaults, argumentProps )

    const graph = g.ad( attack, decay, { shape:props.shape, alpha:props.alpha })

    ad.trigger = graph.trigger
    
    const __out = Gibberish.factory( ad, graph, ['envelopes','AD'], props )

    return __out
  }

  AD.defaults = { attack:44100, decay:44100, shape:'exponential', alpha:5 } 

  return AD

}

},{"../ugen.js":72,"genish.js":114}],6:[function(require,module,exports){
const ugen = require( '../ugen.js' ),
      g = require( 'genish.js' )

module.exports = function( Gibberish ) {

  const ADSR = function( argumentProps ) {
    const adsr  = Object.create( ugen ),
          attack  = g.in( 'attack' ),
          decay   = g.in( 'decay' ),
          sustain = g.in( 'sustain' ),
          release = g.in( 'release' ),
          sustainLevel = g.in( 'sustainLevel' )

    const props = Object.assign( {}, ADSR.defaults, argumentProps )

    Object.assign( adsr, props )

    const graph = g.adsr( 
      attack, decay, sustain, sustainLevel, release, 
      { triggerRelease: props.triggerRelease, shape:props.shape, alpha:props.alpha } 
    )

    adsr.trigger = graph.trigger
    adsr.advance = graph.release

    const __out = Gibberish.factory( adsr, graph, ['envelopes','ADSR'], props )

    return __out 
  }

  ADSR.defaults = { 
    attack:22050, 
    decay:22050, 
    sustain:44100, 
    sustainLevel:.6, 
    release: 44100, 
    triggerRelease:false,
    shape:'exponential',
    alpha:5 
  } 

  return ADSR
}

},{"../ugen.js":72,"genish.js":114}],7:[function(require,module,exports){
const g = require( 'genish.js' )

module.exports = function( Gibberish ) {

  const Envelopes = {
    AD     : require( './ad.js' )( Gibberish ),
    ADSR   : require( './adsr.js' )( Gibberish ),
    Ramp   : require( './ramp.js' )( Gibberish ),

    export : target => {
      for( let key in Envelopes ) {
        if( key !== 'export' && key !== 'factory' ) {
          target[ key ] = Envelopes[ key ]
        }
      }
    },

    factory( useADSR, shape, attack, decay, sustain, sustainLevel, release, triggerRelease=false ) {
      let env

      // deliberate use of single = to accomodate both 1 and true
      if( useADSR != true ) {
        env = g.ad( attack, decay, { shape }) 
      }else {
        env = g.adsr( attack, decay, sustain, sustainLevel, release, { shape, triggerRelease })
        env.advance = env.release
      }

      return env
    }
  } 

  return Envelopes
}

},{"./ad.js":5,"./adsr.js":6,"./ramp.js":8,"genish.js":114}],8:[function(require,module,exports){
const ugen = require( '../ugen.js' ),
      g = require( 'genish.js' )

module.exports = function( Gibberish ) {

  const Ramp = function( argumentProps ) {
    const ramp   = Object.create( ugen ),
          length = g.in( 'length' ),
          from   = g.in( 'from' ),
          to     = g.in( 'to' )

    const props = Object.assign({}, Ramp.defaults, argumentProps )

    const reset = g.bang()

    const phase = g.accum( g.div( 1, length ), reset, { shouldWrap:props.shouldLoop, shouldClamp:true }),
          diff = g.sub( to, from ),
          graph = g.add( from, g.mul( phase, diff ) )
        
    ramp.trigger = reset.trigger

    const out = Gibberish.factory( ramp, graph, ['envelopes','ramp'], props )


    return out
  }

  Ramp.defaults = { from:0, to:1, length:g.gen.samplerate, shouldLoop:false }

  return Ramp

}

},{"../ugen.js":72,"genish.js":114}],9:[function(require,module,exports){
/**
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

// originally from:
// https://github.com/GoogleChromeLabs/audioworklet-polyfill
// I am modifying it to accept variable buffer sizes
// and to get rid of some strange global initialization that seems required to use it
// with browserify. Also, I added changes to fix a bug in Safari for the AudioWorkletProcessor
// property not having a prototype (see:https://github.com/GoogleChromeLabs/audioworklet-polyfill/pull/25)
// TODO: Why is there an iframe involved? (realm.js)

const Realm = require( './realm.js' )

const AWPF = function( self = window, bufferSize = 4096 ) {
  const PARAMS = []
  let nextPort

  if (typeof AudioWorkletNode !== 'function' || !("audioWorklet" in AudioContext.prototype)) {
    self.AudioWorkletNode = function AudioWorkletNode (context, name, options) {
      const processor = getProcessorsForContext(context)[name];
      const outputChannels = options && options.outputChannelCount ? options.outputChannelCount[0] : 2;
      const scriptProcessor = context.createScriptProcessor( bufferSize, 2, outputChannels);

      scriptProcessor.parameters = new Map();
      if (processor.properties) {
        for (let i = 0; i < processor.properties.length; i++) {
          const prop = processor.properties[i];
          const node = context.createGain().gain;
          node.value = prop.defaultValue;
          // @TODO there's no good way to construct the proxy AudioParam here
          scriptProcessor.parameters.set(prop.name, node);
        }
      }

      const mc = new MessageChannel();
      nextPort = mc.port2;
      const inst = new processor.Processor(options || {});
      nextPort = null;

      scriptProcessor.port = mc.port1;
      scriptProcessor.processor = processor;
      scriptProcessor.instance = inst;
      scriptProcessor.onaudioprocess = onAudioProcess;
      return scriptProcessor;
    };

    Object.defineProperty((self.AudioContext || self.webkitAudioContext).prototype, 'audioWorklet', {
      get () {
        return this.$$audioWorklet || (this.$$audioWorklet = new self.AudioWorklet(this));
      }
    });

    /* XXX - ADDED TO OVERCOME PROBLEM IN SAFARI WHERE AUDIOWORKLETPROCESSOR PROTOTYPE IS NOT AN OBJECT */
    const AudioWorkletProcessor = function() {
      this.port = nextPort
    }
    AudioWorkletProcessor.prototype = {}

    self.AudioWorklet = class AudioWorklet {
      constructor (audioContext) {
        this.$$context = audioContext;
      }

      addModule (url, options) {
        return fetch(url).then(r => {
          if (!r.ok) throw Error(r.status);
          return r.text();
        }).then( code => {
          const context = {
            sampleRate: this.$$context.sampleRate,
            currentTime: this.$$context.currentTime,
            AudioWorkletProcessor,
            registerProcessor: (name, Processor) => {
              const processors = getProcessorsForContext(this.$$context);
              processors[name] = {
                realm,
                context,
                Processor,
                properties: Processor.parameterDescriptors || []
              };
            }
          };

          context.self = context;
          const realm = new Realm(context, document.documentElement);
          realm.exec(((options && options.transpile) || String)(code));
          return null;
        });
      }
    };
  }

  function onAudioProcess (e) {
    const parameters = {};
    let index = -1;
    this.parameters.forEach((value, key) => {
      const arr = PARAMS[++index] || (PARAMS[index] = new Float32Array(this.bufferSize));
      // @TODO proper values here if possible
      arr.fill(value.value);
      parameters[key] = arr;
    });
    this.processor.realm.exec(
      'self.sampleRate=sampleRate=' + this.context.sampleRate + ';' +
      'self.currentTime=currentTime=' + this.context.currentTime
    );
    const inputs = channelToArray(e.inputBuffer);
    const outputs = channelToArray(e.outputBuffer);
    this.instance.process([inputs], [outputs], parameters);
  }

  function channelToArray (ch) {
    const out = [];
    for (let i = 0; i < ch.numberOfChannels; i++) {
      out[i] = ch.getChannelData(i);
    }
    return out;
  }

  function getProcessorsForContext (audioContext) {
    return audioContext.$$processors || (audioContext.$$processors = {});
  }
}

module.exports = AWPF

},{"./realm.js":12}],10:[function(require,module,exports){
"use strict";var cn=Object.defineProperty;var ln=(u,n,e)=>n in u?cn(u,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):u[n]=e;var mr=(u,n,e)=>(ln(u,typeof n!="symbol"?n+"":n,e),e);Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});function _mergeNamespaces(u,n){for(var e=0;e<n.length;e++){const r=n[e];if(typeof r!="string"&&!Array.isArray(r)){for(const a in r)if(a!=="default"&&!(a in u)){const s=Object.getOwnPropertyDescriptor(r,a);s&&Object.defineProperty(u,a,s.get?s:{enumerable:!0,get:()=>r[a]})}}}return Object.freeze(Object.defineProperty(u,Symbol.toStringTag,{value:"Module"}))}function peg$subclass(u,n){function e(){this.constructor=u}e.prototype=n.prototype,u.prototype=new e}function peg$SyntaxError(u,n,e,r){var a=Error.call(this,u);return Object.setPrototypeOf&&Object.setPrototypeOf(a,peg$SyntaxError.prototype),a.expected=n,a.found=e,a.location=r,a.name="SyntaxError",a}peg$subclass(peg$SyntaxError,Error);function peg$padEnd(u,n,e){return e=e||" ",u.length>n?u:(n-=u.length,e+=e.repeat(n),u+e.slice(0,n))}peg$SyntaxError.prototype.format=function(u){var n="Error: "+this.message;if(this.location){var e=null,r;for(r=0;r<u.length;r++)if(u[r].source===this.location.source){e=u[r].text.split(/\r\n|\n|\r/g);break}var a=this.location.start,s=this.location.source+":"+a.line+":"+a.column;if(e){var o=this.location.end,c=peg$padEnd("",a.line.toString().length," "),l=e[a.line-1],m=a.line===o.line?o.column:l.length+1,E=m-a.column||1;n+=`
 --> `+s+`
`+c+` |
`+a.line+" | "+l+`
`+c+" | "+peg$padEnd("",a.column-1," ")+peg$padEnd("",E,"^")}else n+=`
 at `+s}return n};peg$SyntaxError.buildMessage=function(u,n){var e={literal:function(m){return'"'+a(m.text)+'"'},class:function(m){var E=m.parts.map(function(A){return Array.isArray(A)?s(A[0])+"-"+s(A[1]):s(A)});return"["+(m.inverted?"^":"")+E.join("")+"]"},any:function(){return"any character"},end:function(){return"end of input"},other:function(m){return m.description}};function r(m){return m.charCodeAt(0).toString(16).toUpperCase()}function a(m){return m.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,function(E){return"\\x0"+r(E)}).replace(/[\x10-\x1F\x7F-\x9F]/g,function(E){return"\\x"+r(E)})}function s(m){return m.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,function(E){return"\\x0"+r(E)}).replace(/[\x10-\x1F\x7F-\x9F]/g,function(E){return"\\x"+r(E)})}function o(m){return e[m.type](m)}function c(m){var E=m.map(o),A,_;if(E.sort(),E.length>0){for(A=1,_=1;A<E.length;A++)E[A-1]!==E[A]&&(E[_]=E[A],_++);E.length=_}switch(E.length){case 1:return E[0];case 2:return E[0]+" or "+E[1];default:return E.slice(0,-1).join(", ")+", or "+E[E.length-1]}}function l(m){return m?'"'+a(m)+'"':"end of input"}return"Expected "+c(u)+" but "+l(n)+" found."};function peg$parse(u,n){n=n!==void 0?n:{};var e={},r=n.grammarSource,a={start:sr},s=sr,o=".",c="-",l="+",m="0",E=",",A="|",_='"',v="'",S="#",g="^",D="_",x=":",k="[",N="]",j="<",O=">",$="@",R="!",B="(",b=")",G="/",U="*",L="%",w="?",K="struct",Z="target",Q="euclid",X="slow",J="rotL",re="rotR",ae="fast",Ee="scale",he="//",de="cat",Ce="$",oe="setcps",ye="setbpm",Be="hush",Ke=/^[1-9]/,ge=/^[eE]/,Xe=/^[0-9]/,be=/^[ \n\r\t]/,Je=/^[0-9a-zA-Z~]/,ke=/^[^\n]/,Qe=ar("number"),$e=Y(".",!1),Ie=qe([["1","9"]],!1,!1),Oe=qe(["e","E"],!1,!1),Pe=Y("-",!1),Ze=Y("+",!1),et=Y("0",!1),tt=qe([["0","9"]],!1,!1),rt=ar("whitespace"),Ne=qe([" ",`
`,"\r","	"],!1,!1),De=Y(",",!1),ce=Y("|",!1),_e=Y('"',!1),Re=Y("'",!1),nt=qe([["0","9"],["a","z"],["A","Z"],"~"],!1,!1),Se=Y("#",!1),it=Y("^",!1),at=Y("_",!1),ut=Y(":",!1),xe=Y("[",!1),we=Y("]",!1),st=Y("<",!1),ot=Y(">",!1),ct=Y("@",!1),lt=Y("!",!1),pt=Y("(",!1),ht=Y(")",!1),dt=Y("/",!1),mt=Y("*",!1),ft=Y("%",!1),Et=Y("?",!1),ue=Y("struct",!1),ne=Y("target",!1),yt=Y("euclid",!1),Dt=Y("slow",!1),At=Y("rotL",!1),Ct=Y("rotR",!1),gt=Y("fast",!1),Fe=Y("scale",!1),_t=Y("//",!1),Le=qe([`
`],!0,!1),St=Y("cat",!1),Ft=Y("$",!1),me=Y("setcps",!1),ve=Y("setbpm",!1),Me=Y("hush",!1),vt=function(){return parseFloat(Er())},xt=function(d){return d.join("")},We=function(d){return d},Tt=function(d){return d.arguments_.alignment="t",d},Bt=function(d){return{weight:d}},bt=function(d){return{replicate:d}},kt=function(d,y,C){return{operator:{type_:"bjorklund",arguments_:{pulse:d,step:y,rotation:C||0}}}},$t=function(d){return{operator:{type_:"stretch",arguments_:{amount:d}}}},It=function(d){return{operator:{type_:"stretch",arguments_:{amount:"1/"+d}}}},Ot=function(d){return{operator:{type_:"fixed-step",arguments_:{amount:d}}}},le=function(d){return{operator:{type_:"degradeBy",arguments_:{amount:d||.5}}}},Pt=function(d,y){return new sn(d,y)},je=function(d){return new nr(d,"h")},Nt=function(d){return{alignment:"v",list:d}},Rt=function(d){return{alignment:"r",list:d}},wt=function(d,y){return y&&y.list.length>0?new nr([d,...y.list],y.alignment):d},Lt=function(d){return d},Kt=function(d){return{name:"struct",args:{sequence:d}}},Wt=function(d){return{name:"target",args:{name:d}}},jt=function(d,y,C){return{name:"bjorklund",args:{pulse:parseInt(d),step:parseInt(y)}}},Ae=function(d){return{name:"stretch",args:{amount:d}}},qt=function(d){return{name:"shift",args:{amount:"-"+d}}},Xt=function(d){return{name:"shift",args:{amount:d}}},se=function(d){return{name:"stretch",args:{amount:"1/"+d}}},Gt=function(d){return{name:"scale",args:{scale:d.join("")}}},Mt=function(d,y){return y},Jt=function(d,y){return y.unshift(d),new nr(y,"t")},Qt=function(d){return d},Zt=function(d,y){return new un(d.name,d.args,y)},M=function(d){return d},te=function(d){return d},Ut=function(d){return new ir("setcps",{value:d})},Te=function(d){return new ir("setcps",{value:d/120/2})},fr=function(){return new ir("hush")},f=0,H=0,zt=[{line:1,column:1}],fe=0,er=[],W=0,Vt;if("startRule"in n){if(!(n.startRule in a))throw new Error(`Can't start parsing from rule "`+n.startRule+'".');s=a[n.startRule]}function Er(){return u.substring(H,f)}function yr(){return tr(H,f)}function Y(d,y){return{type:"literal",text:d,ignoreCase:y}}function qe(d,y,C){return{type:"class",parts:d,inverted:y,ignoreCase:C}}function Dr(){return{type:"end"}}function ar(d){return{type:"other",description:d}}function ur(d){var y=zt[d],C;if(y)return y;for(C=d-1;!zt[C];)C--;for(y=zt[C],y={line:y.line,column:y.column};C<d;)u.charCodeAt(C)===10?(y.line++,y.column=1):y.column++,C++;return zt[d]=y,y}function tr(d,y){var C=ur(d),P=ur(y);return{source:r,start:{offset:d,line:C.line,column:C.column},end:{offset:y,line:P.line,column:P.column}}}function q(d){f<fe||(f>fe&&(fe=f,er=[]),er.push(d))}function Ar(d,y,C){return new peg$SyntaxError(peg$SyntaxError.buildMessage(d,y),d,y,C)}function sr(){var d;return d=an(),d}function ie(){var d,y;return W++,d=f,or(),y=Yt(),y!==e?(Fr(),Sr(),H=d,d=vt()):(f=d,d=e),W--,d===e&&W===0&&q(Qe),d}function Cr(){var d;return u.charCodeAt(f)===46?(d=o,f++):(d=e,W===0&&q($e)),d}function gr(){var d;return Ke.test(u.charAt(f))?(d=u.charAt(f),f++):(d=e,W===0&&q(Ie)),d}function _r(){var d;return ge.test(u.charAt(f))?(d=u.charAt(f),f++):(d=e,W===0&&q(Oe)),d}function Sr(){var d,y,C,P,z;if(d=f,y=_r(),y!==e){if(C=or(),C===e&&(C=vr()),C===e&&(C=null),P=[],z=Ge(),z!==e)for(;z!==e;)P.push(z),z=Ge();else P=e;P!==e?(y=[y,C,P],d=y):(f=d,d=e)}else f=d,d=e;return d}function Fr(){var d,y,C,P;if(d=f,y=Cr(),y!==e){if(C=[],P=Ge(),P!==e)for(;P!==e;)C.push(P),P=Ge();else C=e;C!==e?(y=[y,C],d=y):(f=d,d=e)}else f=d,d=e;return d}function Yt(){var d,y,C,P;if(d=xr(),d===e)if(d=f,y=gr(),y!==e){for(C=[],P=Ge();P!==e;)C.push(P),P=Ge();y=[y,C],d=y}else f=d,d=e;return d}function or(){var d;return u.charCodeAt(f)===45?(d=c,f++):(d=e,W===0&&q(Pe)),d}function vr(){var d;return u.charCodeAt(f)===43?(d=l,f++):(d=e,W===0&&q(Ze)),d}function xr(){var d;return u.charCodeAt(f)===48?(d=m,f++):(d=e,W===0&&q(et)),d}function Ge(){var d;return Xe.test(u.charAt(f))?(d=u.charAt(f),f++):(d=e,W===0&&q(tt)),d}function V(){var d,y;for(W++,d=[],be.test(u.charAt(f))?(y=u.charAt(f),f++):(y=e,W===0&&q(Ne));y!==e;)d.push(y),be.test(u.charAt(f))?(y=u.charAt(f),f++):(y=e,W===0&&q(Ne));return W--,y=e,W===0&&q(rt),d}function Ue(){var d,y,C,P;return d=f,y=V(),u.charCodeAt(f)===44?(C=E,f++):(C=e,W===0&&q(De)),C!==e?(P=V(),y=[y,C,P],d=y):(f=d,d=e),d}function cr(){var d,y,C,P;return d=f,y=V(),u.charCodeAt(f)===124?(C=A,f++):(C=e,W===0&&q(ce)),C!==e?(P=V(),y=[y,C,P],d=y):(f=d,d=e),d}function ze(){var d;return u.charCodeAt(f)===34?(d=_,f++):(d=e,W===0&&q(_e)),d===e&&(u.charCodeAt(f)===39?(d=v,f++):(d=e,W===0&&q(Re))),d}function Ht(){var d;return Je.test(u.charAt(f))?(d=u.charAt(f),f++):(d=e,W===0&&q(nt)),d===e&&(u.charCodeAt(f)===45?(d=c,f++):(d=e,W===0&&q(Pe)),d===e&&(u.charCodeAt(f)===35?(d=S,f++):(d=e,W===0&&q(Se)),d===e&&(u.charCodeAt(f)===46?(d=o,f++):(d=e,W===0&&q($e)),d===e&&(u.charCodeAt(f)===94?(d=g,f++):(d=e,W===0&&q(it)),d===e&&(u.charCodeAt(f)===95?(d=D,f++):(d=e,W===0&&q(at)),d===e&&(u.charCodeAt(f)===58?(d=x,f++):(d=e,W===0&&q(ut)))))))),d}function lr(){var d,y,C;if(d=f,V(),y=[],C=Ht(),C!==e)for(;C!==e;)y.push(C),C=Ht();else y=e;return y!==e?(C=V(),H=d,d=xt(y)):(f=d,d=e),d}function Tr(){var d,y,C,P;return d=f,V(),u.charCodeAt(f)===91?(y=k,f++):(y=e,W===0&&q(xe)),y!==e?(V(),C=dr(),C!==e?(V(),u.charCodeAt(f)===93?(P=N,f++):(P=e,W===0&&q(we)),P!==e?(V(),H=d,d=We(C)):(f=d,d=e)):(f=d,d=e)):(f=d,d=e),d}function Br(){var d,y,C,P;return d=f,V(),u.charCodeAt(f)===60?(y=j,f++):(y=e,W===0&&q(st)),y!==e?(V(),C=Ve(),C!==e?(V(),u.charCodeAt(f)===62?(P=O,f++):(P=e,W===0&&q(ot)),P!==e?(V(),H=d,d=Tt(C)):(f=d,d=e)):(f=d,d=e)):(f=d,d=e),d}function br(){var d;return d=lr(),d===e&&(d=Tr(),d===e&&(d=Br())),d}function kr(){var d;return d=$r(),d===e&&(d=Or(),d===e&&(d=Pr(),d===e&&(d=Nr(),d===e&&(d=Rr(),d===e&&(d=Ir(),d===e&&(d=wr())))))),d}function $r(){var d,y,C;return d=f,u.charCodeAt(f)===64?(y=$,f++):(y=e,W===0&&q(ct)),y!==e?(C=ie(),C!==e?(H=d,d=Bt(C)):(f=d,d=e)):(f=d,d=e),d}function Ir(){var d,y,C;return d=f,u.charCodeAt(f)===33?(y=R,f++):(y=e,W===0&&q(lt)),y!==e?(C=ie(),C!==e?(H=d,d=bt(C)):(f=d,d=e)):(f=d,d=e),d}function Or(){var d,y,C,P,z,ee,pe;return d=f,u.charCodeAt(f)===40?(y=B,f++):(y=e,W===0&&q(pt)),y!==e?(V(),C=ie(),C!==e?(V(),P=Ue(),P!==e?(V(),z=ie(),z!==e?(V(),Ue(),V(),ee=ie(),ee===e&&(ee=null),V(),u.charCodeAt(f)===41?(pe=b,f++):(pe=e,W===0&&q(ht)),pe!==e?(H=d,d=kt(C,z,ee)):(f=d,d=e)):(f=d,d=e)):(f=d,d=e)):(f=d,d=e)):(f=d,d=e),d}function Pr(){var d,y,C;return d=f,u.charCodeAt(f)===47?(y=G,f++):(y=e,W===0&&q(dt)),y!==e?(C=ie(),C!==e?(H=d,d=$t(C)):(f=d,d=e)):(f=d,d=e),d}function Nr(){var d,y,C;return d=f,u.charCodeAt(f)===42?(y=U,f++):(y=e,W===0&&q(mt)),y!==e?(C=ie(),C!==e?(H=d,d=It(C)):(f=d,d=e)):(f=d,d=e),d}function Rr(){var d,y,C;return d=f,u.charCodeAt(f)===37?(y=L,f++):(y=e,W===0&&q(ft)),y!==e?(C=ie(),C!==e?(H=d,d=Ot(C)):(f=d,d=e)):(f=d,d=e),d}function wr(){var d,y,C;return d=f,u.charCodeAt(f)===63?(y=w,f++):(y=e,W===0&&q(Et)),y!==e?(C=ie(),C===e&&(C=null),H=d,d=le(C)):(f=d,d=e),d}function hr(){var d,y,C;return d=f,y=br(),y!==e?(C=kr(),C===e&&(C=null),H=d,d=Pt(y,C)):(f=d,d=e),d}function Ve(){var d,y,C;if(d=f,y=[],C=hr(),C!==e)for(;C!==e;)y.push(C),C=hr();else y=e;return y!==e&&(H=d,y=je(y)),d=y,d}function Lr(){var d,y,C,P,z;if(d=f,y=[],C=f,P=Ue(),P!==e?(z=Ve(),z!==e?C=z:(f=C,C=e)):(f=C,C=e),C!==e)for(;C!==e;)y.push(C),C=f,P=Ue(),P!==e?(z=Ve(),z!==e?C=z:(f=C,C=e)):(f=C,C=e);else y=e;return y!==e&&(H=d,y=Nt(y)),d=y,d}function Mr(){var d,y,C,P,z;if(d=f,y=[],C=f,P=cr(),P!==e?(z=Ve(),z!==e?C=z:(f=C,C=e)):(f=C,C=e),C!==e)for(;C!==e;)y.push(C),C=f,P=cr(),P!==e?(z=Ve(),z!==e?C=z:(f=C,C=e)):(f=C,C=e);else y=e;return y!==e&&(H=d,y=Rt(y)),d=y,d}function dr(){var d,y,C;return d=f,y=Ve(),y!==e?(C=Lr(),C===e&&(C=Mr()),C===e&&(C=null),H=d,d=wt(y,C)):(f=d,d=e),d}function Wr(){var d,y,C,P;return d=f,V(),y=ze(),y!==e?(C=dr(),C!==e?(P=ze(),P!==e?(H=d,d=Lt(C)):(f=d,d=e)):(f=d,d=e)):(f=d,d=e),d}function jr(){var d;return d=Kr(),d===e&&(d=zr(),d===e&&(d=Hr(),d===e&&(d=Gr(),d===e&&(d=Ur(),d===e&&(d=qr(),d===e&&(d=Yr(),d===e&&(d=Vr()))))))),d}function qr(){var d,y,C;return d=f,u.substr(f,6)===K?(y=K,f+=6):(y=e,W===0&&q(ue)),y!==e?(V(),C=Ye(),C!==e?(H=d,d=Kt(C)):(f=d,d=e)):(f=d,d=e),d}function Gr(){var d,y,C,P,z;return d=f,u.substr(f,6)===Z?(y=Z,f+=6):(y=e,W===0&&q(ne)),y!==e?(V(),C=ze(),C!==e?(P=lr(),P!==e?(z=ze(),z!==e?(H=d,d=Wt(P)):(f=d,d=e)):(f=d,d=e)):(f=d,d=e)):(f=d,d=e),d}function Ur(){var d,y,C,P;return d=f,u.substr(f,6)===Q?(y=Q,f+=6):(y=e,W===0&&q(yt)),y!==e?(V(),C=Yt(),C!==e?(V(),P=Yt(),P!==e?(V(),Yt(),H=d,d=jt(C,P)):(f=d,d=e)):(f=d,d=e)):(f=d,d=e),d}function zr(){var d,y,C;return d=f,u.substr(f,4)===X?(y=X,f+=4):(y=e,W===0&&q(Dt)),y!==e?(V(),C=ie(),C!==e?(H=d,d=Ae(C)):(f=d,d=e)):(f=d,d=e),d}function Vr(){var d,y,C;return d=f,u.substr(f,4)===J?(y=J,f+=4):(y=e,W===0&&q(At)),y!==e?(V(),C=ie(),C!==e?(H=d,d=qt(C)):(f=d,d=e)):(f=d,d=e),d}function Yr(){var d,y,C;return d=f,u.substr(f,4)===re?(y=re,f+=4):(y=e,W===0&&q(Ct)),y!==e?(V(),C=ie(),C!==e?(H=d,d=Xt(C)):(f=d,d=e)):(f=d,d=e),d}function Hr(){var d,y,C;return d=f,u.substr(f,4)===ae?(y=ae,f+=4):(y=e,W===0&&q(gt)),y!==e?(V(),C=ie(),C!==e?(H=d,d=se(C)):(f=d,d=e)):(f=d,d=e),d}function Kr(){var d,y,C,P,z;if(d=f,u.substr(f,5)===Ee?(y=Ee,f+=5):(y=e,W===0&&q(Fe)),y!==e)if(V(),C=ze(),C!==e){if(P=[],z=Ht(),z!==e)for(;z!==e;)P.push(z),z=Ht();else P=e;P!==e?(z=ze(),z!==e?(H=d,d=Gt(P)):(f=d,d=e)):(f=d,d=e)}else f=d,d=e;else f=d,d=e;return d}function rr(){var d,y,C,P;if(d=f,u.substr(f,2)===he?(y=he,f+=2):(y=e,W===0&&q(_t)),y!==e){for(C=[],ke.test(u.charAt(f))?(P=u.charAt(f),f++):(P=e,W===0&&q(Le));P!==e;)C.push(P),ke.test(u.charAt(f))?(P=u.charAt(f),f++):(P=e,W===0&&q(Le));y=[y,C],d=y}else f=d,d=e;return d}function Xr(){var d,y,C,P,z,ee,pe,He;if(d=f,u.substr(f,3)===de?(y=de,f+=3):(y=e,W===0&&q(St)),y!==e)if(V(),u.charCodeAt(f)===91?(C=k,f++):(C=e,W===0&&q(xe)),C!==e)if(V(),P=Ye(),P!==e){for(z=[],ee=f,pe=Ue(),pe!==e?(He=Ye(),He!==e?(H=ee,ee=Mt(P,He)):(f=ee,ee=e)):(f=ee,ee=e);ee!==e;)z.push(ee),ee=f,pe=Ue(),pe!==e?(He=Ye(),He!==e?(H=ee,ee=Mt(P,He)):(f=ee,ee=e)):(f=ee,ee=e);ee=V(),u.charCodeAt(f)===93?(pe=N,f++):(pe=e,W===0&&q(we)),pe!==e?(H=d,d=Jt(P,z)):(f=d,d=e)}else f=d,d=e;else f=d,d=e;else f=d,d=e;return d}function Jr(){var d;return d=Xr(),d===e&&(d=Wr()),d}function Ye(){var d,y,C,P,z;if(d=f,y=Jr(),y!==e){for(V(),C=[],P=rr();P!==e;)C.push(P),P=rr();H=d,d=Qt(y)}else f=d,d=e;return d===e&&(d=f,y=jr(),y!==e?(V(),u.charCodeAt(f)===36?(C=Ce,f++):(C=e,W===0&&q(Ft)),C!==e?(P=V(),z=Ye(),z!==e?(H=d,d=Zt(y,z)):(f=d,d=e)):(f=d,d=e)):(f=d,d=e)),d}function Qr(){var d,y;return d=f,y=Ye(),y!==e&&(H=d,y=M(y)),d=y,d===e&&(d=rr()),d}function Zr(){var d;return d=Qr(),d}function en(){var d,y;return d=f,V(),y=tn(),y===e&&(y=rn(),y===e&&(y=nn())),y!==e?(V(),H=d,d=te(y)):(f=d,d=e),d}function tn(){var d,y,C;return d=f,u.substr(f,6)===oe?(y=oe,f+=6):(y=e,W===0&&q(me)),y!==e?(V(),C=ie(),C!==e?(H=d,d=Ut(C)):(f=d,d=e)):(f=d,d=e),d}function rn(){var d,y,C;return d=f,u.substr(f,6)===ye?(y=ye,f+=6):(y=e,W===0&&q(ve)),y!==e?(V(),C=ie(),C!==e?(H=d,d=Te(C)):(f=d,d=e)):(f=d,d=e),d}function nn(){var d,y;return d=f,u.substr(f,4)===Be?(y=Be,f+=4):(y=e,W===0&&q(Me)),y!==e&&(H=d,y=fr()),d=y,d}function an(){var d;return d=Zr(),d===e&&(d=en()),d}var nr=function(d,y){this.type_="pattern",this.arguments_={alignment:y},this.source_=d},un=function(d,y,C){this.type_=d,this.arguments_=y,this.source_=C},sn=function(d,y){this.type_="element",this.source_=d,this.options_=y,this.location_=yr()},ir=function(d,y){this.type_="command",this.name_=d,this.options_=y};if(Vt=s(),Vt!==e&&f===u.length)return Vt;throw Vt!==e&&f<u.length&&q(Dr()),Ar(er,fe<u.length?u.charAt(fe):null,fe<u.length?tr(fe,fe+1):tr(fe,fe))}function getDefaultExportFromCjs(u){return u&&u.__esModule&&Object.prototype.hasOwnProperty.call(u,"default")?u.default:u}function getAugmentedNamespace(u){var n=u.default;if(typeof n=="function"){var e=function(){return n.apply(this,arguments)};e.prototype=n.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(u).forEach(function(r){var a=Object.getOwnPropertyDescriptor(u,r);Object.defineProperty(e,r,a.get?a:{enumerable:!0,get:function(){return u[r]}})}),e}var fraction$1={exports:{}};/**
 * @license Fraction.js v4.2.0 05/03/2022
 * https://www.xarg.org/2014/03/rational-numbers-in-javascript/
 *
 * Copyright (c) 2021, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/(function(u,n){(function(e){var r=2e3,a={s:1,n:0,d:1};function s(S,g){if(isNaN(S=parseInt(S,10)))throw v.InvalidParameter;return S*g}function o(S,g){if(g===0)throw v.DivisionByZero;var D=Object.create(v.prototype);D.s=S<0?-1:1,S=S<0?-S:S;var x=_(S,g);return D.n=S/x,D.d=g/x,D}function c(S){for(var g={},D=S,x=2,k=4;k<=D;){for(;D%x===0;)D/=x,g[x]=(g[x]||0)+1;k+=1+2*x++}return D!==S?D>1&&(g[D]=(g[D]||0)+1):g[S]=(g[S]||0)+1,g}var l=function(S,g){var D=0,x=1,k=1,N=0,j=0,O=0,$=1,R=1,B=0,b=1,G=1,U=1,L=1e7,w;if(S!=null)if(g!==void 0){if(D=S,x=g,k=D*x,D%1!==0||x%1!==0)throw v.NonIntegerParameter}else switch(typeof S){case"object":{if("d"in S&&"n"in S)D=S.n,x=S.d,"s"in S&&(D*=S.s);else if(0 in S)D=S[0],1 in S&&(x=S[1]);else throw v.InvalidParameter;k=D*x;break}case"number":{if(S<0&&(k=S,S=-S),S%1===0)D=S;else if(S>0){for(S>=1&&(R=Math.pow(10,Math.floor(1+Math.log(S)/Math.LN10)),S/=R);b<=L&&U<=L;)if(w=(B+G)/(b+U),S===w){b+U<=L?(D=B+G,x=b+U):U>b?(D=G,x=U):(D=B,x=b);break}else S>w?(B+=G,b+=U):(G+=B,U+=b),b>L?(D=G,x=U):(D=B,x=b);D*=R}else(isNaN(S)||isNaN(g))&&(x=D=NaN);break}case"string":{if(b=S.match(/\d+|./g),b===null)throw v.InvalidParameter;if(b[B]==="-"?(k=-1,B++):b[B]==="+"&&B++,b.length===B+1?j=s(b[B++],k):b[B+1]==="."||b[B]==="."?(b[B]!=="."&&(N=s(b[B++],k)),B++,(B+1===b.length||b[B+1]==="("&&b[B+3]===")"||b[B+1]==="'"&&b[B+3]==="'")&&(j=s(b[B],k),$=Math.pow(10,b[B].length),B++),(b[B]==="("&&b[B+2]===")"||b[B]==="'"&&b[B+2]==="'")&&(O=s(b[B+1],k),R=Math.pow(10,b[B+1].length)-1,B+=3)):b[B+1]==="/"||b[B+1]===":"?(j=s(b[B],k),$=s(b[B+2],1),B+=3):b[B+3]==="/"&&b[B+1]===" "&&(N=s(b[B],k),j=s(b[B+2],k),$=s(b[B+4],1),B+=5),b.length<=B){x=$*R,k=D=O+x*N+R*j;break}}default:throw v.InvalidParameter}if(x===0)throw v.DivisionByZero;a.s=k<0?-1:1,a.n=Math.abs(D),a.d=Math.abs(x)};function m(S,g,D){for(var x=1;g>0;S=S*S%D,g>>=1)g&1&&(x=x*S%D);return x}function E(S,g){for(;g%2===0;g/=2);for(;g%5===0;g/=5);if(g===1)return 0;for(var D=10%g,x=1;D!==1;x++)if(D=D*10%g,x>r)return 0;return x}function A(S,g,D){for(var x=1,k=m(10,D,g),N=0;N<300;N++){if(x===k)return N;x=x*10%g,k=k*10%g}return 0}function _(S,g){if(!S)return g;if(!g)return S;for(;;){if(S%=g,!S)return g;if(g%=S,!g)return S}}function v(S,g){if(l(S,g),this instanceof v)S=_(a.d,a.n),this.s=a.s,this.n=a.n/S,this.d=a.d/S;else return o(a.s*a.n,a.d)}v.DivisionByZero=new Error("Division by Zero"),v.InvalidParameter=new Error("Invalid argument"),v.NonIntegerParameter=new Error("Parameters must be integer"),v.prototype={s:1,n:0,d:1,abs:function(){return o(this.n,this.d)},neg:function(){return o(-this.s*this.n,this.d)},add:function(S,g){return l(S,g),o(this.s*this.n*a.d+a.s*this.d*a.n,this.d*a.d)},sub:function(S,g){return l(S,g),o(this.s*this.n*a.d-a.s*this.d*a.n,this.d*a.d)},mul:function(S,g){return l(S,g),o(this.s*a.s*this.n*a.n,this.d*a.d)},div:function(S,g){return l(S,g),o(this.s*a.s*this.n*a.d,this.d*a.n)},clone:function(){return o(this.s*this.n,this.d)},mod:function(S,g){if(isNaN(this.n)||isNaN(this.d))return new v(NaN);if(S===void 0)return o(this.s*this.n%this.d,1);if(l(S,g),a.n===0&&this.d===0)throw v.DivisionByZero;return o(this.s*(a.d*this.n)%(a.n*this.d),a.d*this.d)},gcd:function(S,g){return l(S,g),o(_(a.n,this.n)*_(a.d,this.d),a.d*this.d)},lcm:function(S,g){return l(S,g),a.n===0&&this.n===0?o(0,1):o(a.n*this.n,_(a.n,this.n)*_(a.d,this.d))},ceil:function(S){return S=Math.pow(10,S||0),isNaN(this.n)||isNaN(this.d)?new v(NaN):o(Math.ceil(S*this.s*this.n/this.d),S)},floor:function(S){return S=Math.pow(10,S||0),isNaN(this.n)||isNaN(this.d)?new v(NaN):o(Math.floor(S*this.s*this.n/this.d),S)},round:function(S){return S=Math.pow(10,S||0),isNaN(this.n)||isNaN(this.d)?new v(NaN):o(Math.round(S*this.s*this.n/this.d),S)},inverse:function(){return o(this.s*this.d,this.n)},pow:function(S,g){if(l(S,g),a.d===1)return a.s<0?o(Math.pow(this.s*this.d,a.n),Math.pow(this.n,a.n)):o(Math.pow(this.s*this.n,a.n),Math.pow(this.d,a.n));if(this.s<0)return null;var D=c(this.n),x=c(this.d),k=1,N=1;for(var j in D)if(j!=="1"){if(j==="0"){k=0;break}if(D[j]*=a.n,D[j]%a.d===0)D[j]/=a.d;else return null;k*=Math.pow(j,D[j])}for(var j in x)if(j!=="1"){if(x[j]*=a.n,x[j]%a.d===0)x[j]/=a.d;else return null;N*=Math.pow(j,x[j])}return a.s<0?o(N,k):o(k,N)},equals:function(S,g){return l(S,g),this.s*this.n*a.d===a.s*a.n*this.d},compare:function(S,g){l(S,g);var D=this.s*this.n*a.d-a.s*a.n*this.d;return(0<D)-(D<0)},simplify:function(S){if(isNaN(this.n)||isNaN(this.d))return this;S=S||.001;for(var g=this.abs(),D=g.toContinued(),x=1;x<D.length;x++){for(var k=o(D[x-1],1),N=x-2;N>=0;N--)k=k.inverse().add(D[N]);if(k.sub(g).abs().valueOf()<S)return k.mul(this.s)}return this},divisible:function(S,g){return l(S,g),!(!(a.n*this.d)||this.n*a.d%(a.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(S){var g,D="",x=this.n,k=this.d;return this.s<0&&(D+="-"),k===1?D+=x:(S&&(g=Math.floor(x/k))>0&&(D+=g,D+=" ",x%=k),D+=x,D+="/",D+=k),D},toLatex:function(S){var g,D="",x=this.n,k=this.d;return this.s<0&&(D+="-"),k===1?D+=x:(S&&(g=Math.floor(x/k))>0&&(D+=g,x%=k),D+="\\frac{",D+=x,D+="}{",D+=k,D+="}"),D},toContinued:function(){var S,g=this.n,D=this.d,x=[];if(isNaN(g)||isNaN(D))return x;do x.push(Math.floor(g/D)),S=g%D,g=D,D=S;while(g!==1);return x},toString:function(S){var g=this.n,D=this.d;if(isNaN(g)||isNaN(D))return"NaN";S=S||15;var x=E(g,D),k=A(g,D,x),N=this.s<0?"-":"";if(N+=g/D|0,g%=D,g*=10,g&&(N+="."),x){for(var j=k;j--;)N+=g/D|0,g%=D,g*=10;N+="(";for(var j=x;j--;)N+=g/D|0,g%=D,g*=10;N+=")"}else for(var j=S;g&&j--;)N+=g/D|0,g%=D,g*=10;return N}},Object.defineProperty(v,"__esModule",{value:!0}),v.default=v,v.Fraction=v,u.exports=v})()})(fraction$1);const Fraction$1=getDefaultExportFromCjs(fraction$1.exports);Fraction$1.prototype.sam=function(){return this.floor()};Fraction$1.prototype.nextSam=function(){return this.sam().add(1)};Fraction$1.prototype.wholeCycle=function(){return new TimeSpan(this.sam(),this.nextSam())};Fraction$1.prototype.cyclePos=function(){return this.sub(this.sam())};Fraction$1.prototype.lt=function(u){return this.compare(u)<0};Fraction$1.prototype.gt=function(u){return this.compare(u)>0};Fraction$1.prototype.lte=function(u){return this.compare(u)<=0};Fraction$1.prototype.gte=function(u){return this.compare(u)>=0};Fraction$1.prototype.eq=function(u){return this.compare(u)==0};Fraction$1.prototype.max=function(u){return this.gt(u)?this:u};Fraction$1.prototype.min=function(u){return this.lt(u)?this:u};Fraction$1.prototype.show=function(){return this.s*this.n+"/"+this.d};Fraction$1.prototype.or=function(u){return this.eq(0)?u:this};const fraction=u=>(typeof u=="number"&&(u=String(u)),Fraction$1(u)),gcd=(...u)=>u.reduce((n,e)=>n.gcd(e),fraction(1));fraction._original=Fraction$1;class TimeSpan{constructor(n,e){this.begin=fraction(n),this.end=fraction(e)}get spanCycles(){const n=[];var e=this.begin;const r=this.end,a=r.sam();for(;r.gt(e);){if(e.sam().equals(a)){n.push(new TimeSpan(e,this.end));break}const s=e.nextSam();n.push(new TimeSpan(e,s)),e=s}return n}get duration(){return this.end.sub(this.begin)}cycleArc(){const n=this.begin.cyclePos(),e=n.add(this.duration);return new TimeSpan(n,e)}withTime(n){return new TimeSpan(n(this.begin),n(this.end))}withEnd(n){return new TimeSpan(this.begin,n(this.end))}withCycle(n){const e=this.begin.sam(),r=e.add(n(this.begin.sub(e))),a=e.add(n(this.end.sub(e)));return new TimeSpan(r,a)}intersection(n){const e=this.begin.max(n.begin),r=this.end.min(n.end);if(!e.gt(r)&&!(e.equals(r)&&(e.equals(this.end)&&this.begin.lt(this.end)||e.equals(n.end)&&n.begin.lt(n.end))))return new TimeSpan(e,r)}intersection_e(n){const e=this.intersection(n);if(e==null)throw"TimeSpans do not intersect";return e}midpoint(){return this.begin.add(this.duration.div(fraction(2)))}equals(n){return this.begin.equals(n.begin)&&this.end.equals(n.end)}show(){return this.begin.show()+" -> "+this.end.show()}}class Hap{constructor(n,e,r,a={},s=!1){this.whole=n,this.part=e,this.value=r,this.context=a,this.stateful=s,s&&console.assert(typeof this.value=="function","Stateful values must be functions")}get duration(){return this.whole.end.sub(this.whole.begin)}wholeOrPart(){return this.whole?this.whole:this.part}withSpan(n){const e=this.whole?n(this.whole):void 0;return new Hap(e,n(this.part),this.value,this.context)}withValue(n){return new Hap(this.whole,this.part,n(this.value),this.context)}hasOnset(){return this.whole!=null&&this.whole.begin.equals(this.part.begin)}resolveState(n){if(this.stateful&&this.hasOnset()){console.log("stateful");const e=this.value,[r,a]=e(n);return[r,new Hap(this.whole,this.part,a,this.context,!1)]}return[n,this]}spanEquals(n){return this.whole==null&&n.whole==null||this.whole.equals(n.whole)}equals(n){return this.spanEquals(n)&&this.part.equals(n.part)&&this.value===n.value}show(){return"("+(this.whole==null?"~":this.whole.show())+", "+this.part.show()+", "+this.value+")"}showWhole(){return`${this.whole==null?"~":this.whole.show()}: ${typeof this.value=="object"?JSON.stringify(this.value):this.value}`}combineContext(n){const e=this;return{...e.context,...n.context,locations:(e.context.locations||[]).concat(n.context.locations||[])}}setContext(n){return new Hap(this.whole,this.part,this.value,n)}}class State{constructor(n,e={}){this.span=n,this.controls=e}setSpan(n){return new State(n,this.controls)}withSpan(n){return this.setSpan(n(this.span))}setControls(n){return new State(this.span,n)}}const isNote=u=>/^[a-gA-G][#b]*[0-9]$/.test(u),tokenizeNote=u=>{var a;if(typeof u!="string")return[];const[n,e="",r]=((a=u.match(/^([a-gA-G])([#bs]*)([0-9])?$/))==null?void 0:a.slice(1))||[];return n?[n,e,r?Number(r):void 0]:[]},toMidi=u=>{const[n,e,r]=tokenizeNote(u);if(!n)throw new Error('not a note: "'+u+'"');const a={c:0,d:2,e:4,f:5,g:7,a:9,b:11}[n.toLowerCase()],s=(e==null?void 0:e.split("").reduce((o,c)=>o+{"#":1,b:-1,s:1}[c],0))||0;return(Number(r)+1)*12+a+s},fromMidi=u=>Math.pow(2,(u-69)/12)*440,getFreq=u=>fromMidi(typeof u=="number"?u:toMidi(u)),midi2note=u=>{const n=Math.floor(u/12)-1;return["C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B"][u%12]+n},mod=(u,n)=>(u%n+n)%n,getPlayableNoteValue=u=>{let{value:n,context:e}=u;if(typeof n=="object"&&!Array.isArray(n)&&(n=n.note||n.n||n.value),typeof n=="number"&&e.type!=="frequency")n=fromMidi(u.value);else if(typeof n=="number"&&e.type==="frequency")n=u.value;else if(typeof n!="string"||!isNote(n))throw new Error("not a note: "+JSON.stringify(n));return n},getFrequency=u=>{let{value:n,context:e}=u;if(typeof n=="object"&&n.freq)return n.freq;if(typeof n=="number"&&e.type!=="frequency")n=fromMidi(u.value);else if(typeof n=="string"&&isNote(n))n=fromMidi(toMidi(u.value));else if(typeof n!="number")throw new Error("not a note or frequency:"+n);return n},rotate=(u,n)=>u.slice(n).concat(u.slice(0,n)),pipe=(...u)=>u.reduce((n,e)=>(...r)=>n(e(...r)),n=>n),compose=(...u)=>pipe(...u.reverse()),removeUndefineds=u=>u.filter(n=>n!=null),flatten=u=>[].concat(...u),id=u=>u,constant=(u,n)=>u,listRange=(u,n)=>Array.from({length:n-u+1},(e,r)=>r+u);function curry(u,n){const e=function r(...a){if(a.length>=u.length)return u.apply(this,a);{const s=function(...o){return r.apply(this,a.concat(o))};return n&&n(s,a),s}};return n&&n(e,[]),e}function unionWithObj(u,n,e){const r=Object.keys(u).filter(a=>Object.keys(n).includes(a));return Object.assign({},u,n,Object.fromEntries(r.map(a=>[a,e(u[a],n[a])])))}curry((u,n)=>u*n);curry((u,n)=>n.map(u));function drawLine(u,n=60){let e=0,r=fraction(0),a=[""],s="";for(;a[0].length<n;){const o=u.queryArc(e,e+1),c=o.filter(E=>E.hasOnset()).map(E=>E.duration),l=gcd(...c),m=l.inverse();a=a.map(E=>E+"|"),s+="|";for(let E=0;E<m;E++){const[A,_]=[r,r.add(l)],v=o.filter(g=>g.whole.begin.lte(A)&&g.whole.end.gte(_)),S=v.length-a.length;S>0&&(a=a.concat(Array(S).fill(s))),a=a.map((g,D)=>{const x=v[D];if(x){const N=x.whole.begin.eq(A)?""+x.value:"-";return g+N}return g+"."}),s+=".",r=r.add(l)}e++}return a.join(`
`)}class Pattern$2{constructor(n){mr(this,"_Pattern",!0);this.query=n}queryArc(n,e){return this.query(new State(new TimeSpan(n,e)))}_splitQueries(){const n=this,e=r=>flatten(r.span.spanCycles.map(a=>n.query(r.setSpan(a))));return new Pattern$2(e)}withQuerySpan(n){return new Pattern$2(e=>this.query(e.withSpan(n)))}withQueryTime(n){return new Pattern$2(e=>this.query(e.withSpan(r=>r.withTime(n))))}withHapSpan(n){return new Pattern$2(e=>this.query(e).map(r=>r.withSpan(n)))}withHapTime(n){return this.withHapSpan(e=>e.withTime(n))}_withHaps(n){return new Pattern$2(e=>n(this.query(e)))}_withHap(n){return this._withHaps(e=>e.map(n))}_setContext(n){return this._withHap(e=>e.setContext(n))}_withContext(n){return this._withHap(e=>e.setContext(n(e.context)))}_stripContext(){return this._withHap(n=>n.setContext({}))}withLocation(n,e){const r={start:{line:n[0],column:n[1],offset:n[2]},end:{line:e[0],column:e[1],offset:e[2]}};return this._withContext(a=>{const s=(a.locations||[]).concat([r]);return{...a,locations:s}})}withMiniLocation(n,e){const r={start:{line:n[0],column:n[1],offset:n[2]},end:{line:e[0],column:e[1],offset:e[2]}};return this._withContext(a=>{let s=a.locations||[];return s=s.map(({start:o,end:c})=>{const l=o.line===1?r.start.column:0;return{start:{...o,line:o.line-1+(r.start.line-1)+1,column:o.column-1+l},end:{...c,line:c.line-1+(r.start.line-1)+1,column:c.column-1+l}}}),{...a,locations:s}})}withValue(n){return new Pattern$2(e=>this.query(e).map(r=>r.withValue(n)))}fmap(n){return this.withValue(n)}_filterHaps(n){return new Pattern$2(e=>this.query(e).filter(n))}_filterValues(n){return new Pattern$2(e=>this.query(e).filter(r=>n(r.value)))}_removeUndefineds(){return this._filterValues(n=>n!=null)}onsetsOnly(){return this._filterHaps(n=>n.hasOnset())}discreteOnly(){return this._filterHaps(n=>n.whole)}_appWhole(n,e){const r=this,a=function(s){const o=r.query(s),c=e.query(s),l=function(m,E){const A=m.part.intersection(E.part);if(A!=null)return new Hap(n(m.whole,E.whole),A,m.value(E.value),E.combineContext(m))};return flatten(o.map(m=>removeUndefineds(c.map(E=>l(m,E)))))};return new Pattern$2(a)}appBoth(n){const e=function(r,a){if(!(r==null||a==null))return r.intersection_e(a)};return this._appWhole(e,n)}appLeft(n){const e=this,r=function(a){const s=[];for(const o of e.query(a)){const c=n.query(a.setSpan(o.wholeOrPart()));for(const l of c){const m=o.whole,E=o.part.intersection(l.part);if(E){const A=o.value(l.value),_=l.combineContext(o),v=new Hap(m,E,A,_);s.push(v)}}}return s};return new Pattern$2(r)}appRight(n){const e=this,r=function(a){const s=[];for(const o of n.query(a)){const c=e.query(a.setSpan(o.wholeOrPart()));for(const l of c){const m=o.whole,E=l.part.intersection(o.part);if(E){const A=l.value(o.value),_=o.combineContext(l),v=new Hap(m,E,A,_);s.push(v)}}}return s};return new Pattern$2(r)}firstCycle(n=!1){var e=this;return n||(e=e._stripContext()),e.query(new State(new TimeSpan(fraction(0),fraction(1))))}get _firstCycleValues(){return this.firstCycle().map(n=>n.value)}get _showFirstCycle(){return this.firstCycle().map(n=>`${n.value}: ${n.whole.begin.toFraction()} - ${n.whole.end.toFraction()}`)}_sortHapsByPart(){return this._withHaps(n=>n.sort((e,r)=>e.part.begin.sub(r.part.begin).or(e.part.end.sub(r.part.end)).or(e.whole.begin.sub(r.whole.begin).or(e.whole.end.sub(r.whole.end)))))}_opIn(n,e){return this.fmap(e).appLeft(reify$2(n))}_opOut(n,e){return this.fmap(e).appRight(reify$2(n))}_opMix(n,e){return this.fmap(e).appBoth(reify$2(n))}_opSqueeze(n,e){const r=reify$2(n);return this.fmap(a=>r.fmap(s=>e(a)(s)))._squeezeJoin()}_opSqueezeOut(n,e){const r=this;return reify$2(n).fmap(s=>r.fmap(o=>e(o)(s)))._squeezeJoin()}_opTrig(n,e){return reify$2(n).fmap(a=>this.fmap(s=>e(s)(a)))._trigJoin()}_opTrigzero(n,e){return reify$2(n).fmap(a=>this.fmap(s=>e(s)(a)))._TrigzeroJoin()}_asNumber(n=!1,e=!1){return this._withHap(r=>{const a=Number(r.value);if(!isNaN(a))return r.withValue(()=>a);const s={e:Math.E,pi:Math.PI}[r.value];if(typeof s<"u")return r.withValue(()=>s);if(isNote(r.value))return new Hap(r.whole,r.part,toMidi(r.value),{...r.context,type:"midi"});if(!n){if(e)return r;throw new Error('cannot parse as number: "'+r.value+'"')}})}round(){return this._asNumber().fmap(n=>Math.round(n))}floor(){return this._asNumber().fmap(n=>Math.floor(n))}ceil(){return this._asNumber().fmap(n=>Math.ceil(n))}_toBipolar(){return this.fmap(n=>n*2-1)}_fromBipolar(){return this.fmap(n=>(n+1)/2)}range(n,e){return this.mul(e-n).add(n)}rangex(n,e){return this.range(Math.log(n),Math.log(e)).fmap(Math.exp)}range2(n,e){return this._fromBipolar().range(n,e)}_bindWhole(n,e){const r=this,a=function(s){const o=function(l,m){return new Hap(n(l.whole,m.whole),m.part,m.value,Object.assign({},l.context,m.context,{locations:(l.context.locations||[]).concat(m.context.locations||[])}))},c=function(l){return e(l.value).query(s.setSpan(l.part)).map(m=>o(l,m))};return flatten(r.query(s).map(l=>c(l)))};return new Pattern$2(a)}bind(n){const e=function(r,a){if(!(r==null||a==null))return r.intersection_e(a)};return this._bindWhole(e,n)}join(){return this.bind(id)}outerBind(n){return this._bindWhole((e,r)=>e,n)}outerJoin(){return this.outerBind(id)}innerBind(n){return this._bindWhole((e,r)=>r,n)}innerJoin(){return this.innerBind(id)}_trigJoin(n=!1){const e=this;return new Pattern$2(r=>e.discreteOnly().query(r).map(a=>a.value.late(n?a.whole.begin:a.whole.begin.cyclePos()).query(r).map(s=>new Hap(s.whole?s.whole.intersection(a.whole):void 0,s.part.intersection(a.part),s.value).setContext(a.combineContext(s))).filter(s=>s.part)).flat())}_TrigzeroJoin(){return this._trigJoin(!0)}_squeezeJoin(){const n=this;function e(r){const a=n.discreteOnly().query(r);function s(c){const m=c.value._compressSpan(c.wholeOrPart().cycleArc()).query(r.setSpan(c.part));function E(A,_){let v;if(_.whole&&A.whole&&(v=_.whole.intersection(A.whole),!v))return;const S=_.part.intersection(A.part);if(!S)return;const g=_.combineContext(A);return new Hap(v,S,_.value,g)}return m.map(A=>E(c,A))}return flatten(a.map(s)).filter(c=>c)}return new Pattern$2(e)}_squeezeBind(n){return this.fmap(n)._squeezeJoin()}_apply(n){return n(this)}layer(...n){return stack$1(...n.map(e=>e(this)))}_patternify(n){const e=this;return function(...a){return a=a.map(o=>isPattern(o)?o.fmap(c=>c.value||c):o),sequence$1(...a).fmap(o=>n.call(e,o)).innerJoin()}}_fastGap(n){const e=function(a){const s=a.begin.sam(),o=s.add(a.begin.sub(s).mul(n).min(1)),c=s.add(a.end.sub(s).mul(n).min(1));return new TimeSpan(o,c)},r=function(a){const s=a.begin.sam(),o=s.add(a.begin.sub(s).div(n).min(1)),c=s.add(a.end.sub(s).div(n).min(1));return new TimeSpan(o,c)};return this.withQuerySpan(e).withHapSpan(r)._splitQueries()}_compress(n,e){return n.gt(e)||n.gt(1)||e.gt(1)||n.lt(0)||e.lt(0)?silence$1:this._fastGap(fraction(1).div(e.sub(n)))._late(n)}_compressSpan(n){return this._compress(n.begin,n.end)}_fast(n){return this.withQueryTime(r=>r.mul(n)).withHapTime(r=>r.div(n))}_slow(n){return this._fast(fraction(1).div(n))}_inside(n,e){return e(this._slow(n))._fast(n)}_outside(n,e){return e(this._fast(n))._slow(n)}_ply(n){return this.fmap(e=>pure$1(e)._fast(n))._squeezeJoin()}_chop(n){const r=Array.from({length:n},(s,o)=>o).map(s=>({begin:s/n,end:(s+1)/n})),a=function(s){return sequence$1(r.map(o=>Object.assign({},s,o)))};return this._squeezeBind(a)}_striate(n){const r=Array.from({length:n},(s,o)=>o).map(s=>({begin:s/n,end:(s+1)/n})),a=slowcat$1(...r);return this.set(a)._fast(n)}_cpm(n){return this._fast(n/60)}_early(n){return n=fraction(n),this.withQueryTime(e=>e.add(n)).withHapTime(e=>e.sub(n))}_late(n){return n=fraction(n),this._early(fraction(0).sub(n))}_zoom(n,e){e=fraction(e),n=fraction(n);const r=e.sub(n);return this.withQuerySpan(a=>a.withCycle(s=>s.mul(r).add(n))).withHapSpan(a=>a.withCycle(s=>s.sub(n).div(r)))._splitQueries()}_zoomArc(n){return this.zoom(n.begin,n.end)}_linger(n){return n==0?silence$1:n<0?this._zoom(n.add(1),1)._slow(n):this._zoom(0,n)._slow(n)}_color(n){return this._withContext(e=>({...e,color:n}))}log(){return this._withHap(n=>{var e;return n.setContext({...n.context,logs:(((e=n.context)==null?void 0:e.logs)||[]).concat([n.show()])})})}drawLine(){return console.log(drawLine(this)),this}_segment(n){return this.struct(pure$1(!0)._fast(n))}invert(){return this.fmap(n=>!n)}inv(){return this.invert()}when(n,e){const r=n._filterValues(id),a=n._filterValues(c=>!c),s=r.fmap(c=>l=>l).appRight(e(this)),o=a.fmap(c=>l=>l).appRight(this);return stack$1(s,o)}off(n,e){return stack$1(this,e(this.late(n)))}every(n,e){const r=this,a=Array(n-1).fill(r);return a.unshift(e(r)),slowcatPrime(...a)}brak(){return this.when(slowcat$1(!1,!0),n=>fastcat(n,silence$1)._late(.25))}rev(){const n=this,e=function(r){const a=r.span,s=a.begin.sam(),o=a.begin.nextSam(),c=function(m){const E=m.withTime(_=>s.add(o.sub(_))),A=E.begin;return E.begin=E.end,E.end=A,E};return n.query(r.setSpan(c(a))).map(m=>m.withSpan(c))};return new Pattern$2(e)._splitQueries()}palindrome(){return this.every(2,rev)}juxBy(n,e){n/=2;const r=function(o,c,l){return c in o?o[c]:l},a=this.withValue(o=>Object.assign({},o,{pan:r(o,"pan",.5)-n})),s=this.withValue(o=>Object.assign({},o,{pan:r(o,"pan",.5)+n}));return stack$1(a,e(s))}_jux(n){return this.juxBy(1,n)}stack(...n){return stack$1(this,...n)}sequence(...n){return sequence$1(this,...n)}seq(...n){return sequence$1(this,...n)}cat(...n){return cat(this,...n)}fastcat(...n){return fastcat(this,...n)}slowcat(...n){return slowcat$1(this,...n)}superimpose(...n){return this.stack(...n.map(e=>e(this)))}stutWith(n,e,r){return stack$1(...listRange(0,n-1).map(a=>r(this.late(fraction(e).mul(a)),a)))}stut(n,e,r){return this.stutWith(n,r,(a,s)=>a.velocity(Math.pow(e,s)))}_echoWith(n,e,r){return stack$1(...listRange(0,n-1).map(a=>r(this.late(fraction(e).mul(a)),a)))}_echo(n,e,r){return this._echoWith(n,e,(a,s)=>a.velocity(Math.pow(r,s)))}iter(n,e=!1){return slowcat$1(...listRange(0,n-1).map(r=>e?this.late(r/n):this.early(r/n)))}iterBack(n){return this.iter(n,!0)}_chunk(n,e,r=!1){const a=Array(n-1).fill(!1);a.unshift(!0);const s=sequence$1(...a).iter(n,r);return this.when(s,e)}_chunkBack(n,e){return this._chunk(n,e,!0)}_bypass(n){return n=Boolean(parseInt(n)),n?silence$1:this}hush(){return silence$1}_duration(n){return this.withHapSpan(e=>new TimeSpan(e.begin,e.begin.add(n)))}_legato(n){return this.withHapSpan(e=>new TimeSpan(e.begin,e.begin.add(e.end.sub(e.begin).mul(n))))}_velocity(n){return this._withContext(e=>({...e,velocity:(e.velocity||1)*n}))}_loopAt(n,e=1){return this.speed(1/n*e).unit("c").slow(n)}onTrigger(n){return this._withHap(e=>e.setContext({...e.context,onTrigger:n}))}log(n=id){return this._withHap(e=>e.setContext({...e.context,onTrigger:(...r)=>{e.context.onTrigger&&e.context.onTrigger(...r),console.log(n(...r))}}))}logValues(n=id){return this.log((e,r)=>n(r.value))}}function _composeOp(u,n,e){function r(a){return a instanceof Object&&!(a instanceof Function)}return r(u)||r(n)?(r(u)||(u={value:u}),r(n)||(n={value:n}),unionWithObj(u,n,e)):e(u,n)}(function(){const u=r=>r._asNumber(),e={set:[(r,a)=>a],keep:[(r,a)=>r],keepif:[(r,a)=>a?r:void 0],add:[(r,a)=>r+a,r=>r._asNumber(!1,!0)],sub:[(r,a)=>r-a,u],mul:[(r,a)=>r*a,u],div:[(r,a)=>r/a,u],mod:[mod,u],pow:[Math.pow,u],_and:[(r,a)=>r&a,u],_or:[(r,a)=>r|a,u],_xor:[(r,a)=>r^a,u],_lshift:[(r,a)=>r<<a,u],_rshift:[(r,a)=>r>>a,u],lt:[(r,a)=>r<a],gt:[(r,a)=>r>a],lte:[(r,a)=>r<=a],gte:[(r,a)=>r>=a],eq:[(r,a)=>r==a],eqt:[(r,a)=>r===a],ne:[(r,a)=>r!=a],net:[(r,a)=>r!==a],and:[(r,a)=>r&&a],or:[(r,a)=>r||a],func:[(r,a)=>a(r)]};for(const[r,[a,s]]of Object.entries(e))for(const o of["In","Out","Mix","Squeeze","SqueezeOut","Trig","Trigzero"])Pattern$2.prototype[r+o]=function(...c){var l=this;c=sequence$1(c),s&&(l=s(l),c=s(c));var m=l["_op"+o](c,E=>A=>_composeOp(E,A,a));return r==="keepif"&&(m=m._removeUndefineds()),m},o==="Squeeze"&&(Pattern$2.prototype[r+"SqueezeIn"]=Pattern$2.prototype[r+o]),o==="In"?Pattern$2.prototype[r]=Pattern$2.prototype[r+o]:r==="set"&&(Pattern$2.prototype[o.toLowerCase()]=Pattern$2.prototype[r+o]);Pattern$2.prototype.struct=Pattern$2.prototype.keepifOut,Pattern$2.prototype.structAll=Pattern$2.prototype.keepOut,Pattern$2.prototype.mask=Pattern$2.prototype.keepifIn,Pattern$2.prototype.maskAll=Pattern$2.prototype.keepIn,Pattern$2.prototype.reset=Pattern$2.prototype.keepifTrig,Pattern$2.prototype.resetAll=Pattern$2.prototype.keepTrig,Pattern$2.prototype.restart=Pattern$2.prototype.keepifTrigzero,Pattern$2.prototype.restartAll=Pattern$2.prototype.keepTrigzero})();Pattern$2.prototype.patternified=["apply","chop","color","cpm","duration","early","fast","jux","late","legato","linger","ply","segment","striate","slow","velocity"];Pattern$2.prototype.factories={pure:pure$1,stack:stack$1,slowcat:slowcat$1,fastcat,cat,timeCat:timeCat$1,sequence:sequence$1,seq:seq$2,polymeter,pm,polyrhythm,pr};const silence$1=new Pattern$2(u=>[]);function pure$1(u){function n(e){return e.span.spanCycles.map(r=>new Hap(fraction(r.begin).wholeCycle(),r,u))}return new Pattern$2(n)}function isPattern(u){const n=u instanceof Pattern$2||u._Pattern;return!u instanceof Pattern$2&&console.warn(`Found Pattern that fails "instanceof Pattern" check.
      This may happen if you are using multiple versions of @strudel.cycles/core. 
      Please check by running "npm ls @strudel.cycles/core".`),n}function reify$2(u){return isPattern(u)?u:pure$1(u)}function stack$1(...u){u=u.map(e=>Array.isArray(e)?sequence$1(...e):reify$2(e));const n=e=>flatten(u.map(r=>r.query(e)));return new Pattern$2(n)}function slowcat$1(...u){u=u.map(e=>Array.isArray(e)?sequence$1(...e):reify$2(e));const n=function(e){const r=e.span,a=mod(r.begin.sam(),u.length),s=u[a];if(!s)return[];const o=r.begin.floor().sub(r.begin.div(u.length).floor());return s.withHapTime(c=>c.add(o)).query(e.setSpan(r.withTime(c=>c.sub(o))))};return new Pattern$2(n)._splitQueries()}function slowcatPrime(...u){u=u.map(reify$2);const n=function(e){const r=Math.floor(e.span.begin)%u.length,a=u[r];return(a==null?void 0:a.query(e))||[]};return new Pattern$2(n)._splitQueries()}function fastcat(...u){return slowcat$1(...u)._fast(u.length)}function cat(...u){return slowcat$1(...u)}function timeCat$1(...u){const n=u.map(a=>a[0]).reduce((a,s)=>a.add(s),fraction(0));let e=fraction(0);const r=[];for(const[a,s]of u){const o=e.add(a);r.push(reify$2(s)._compress(e.div(n),o.div(n))),e=o}return stack$1(...r)}function sequence$1(...u){return fastcat(...u)}function seq$2(...u){return fastcat(...u)}function _sequenceCount(u){return Array.isArray(u)?u.length==0?[silence$1,0]:u.length==1?_sequenceCount(u[0]):[fastcat(...u.map(n=>_sequenceCount(n)[0])),u.length]:[reify$2(u),1]}function polymeterSteps(u,...n){const e=n.map(a=>_sequenceCount(a));if(e.length==0)return silence$1;u==0&&(u=e[0][1]);const r=[];for(const a of e)a[1]==0&&next,u==a[1]?r.push(a[0]):r.push(a[0]._fast(fraction(u).div(fraction(a[1]))));return stack$1(...r)}function polymeter(...u){return polymeterSteps(0,...u)}function pm(...u){polymeter(...u)}function polyrhythm(...u){const n=u.map(e=>sequence$1(e));return n.length==0?silence$1:stack$1(...n)}function pr(u){polyrhythm(u)}const add=curry((u,n)=>n.add(u)),chop=curry((u,n)=>n.chop(u)),chunk=curry((u,n)=>n.chunk(u)),chunkBack=curry((u,n)=>n.chunkBack(u)),div=curry((u,n)=>n.div(u)),early=curry((u,n)=>n.early(u)),echo=curry((u,n,e,r)=>r.echo(u,n,e)),every=curry((u,n,e)=>e.every(u,n)),fast=curry((u,n)=>n.fast(u)),inv=u=>u.inv(),invert=u=>u.invert(),iter=curry((u,n)=>n.iter(u)),iterBack=curry((u,n)=>n.iter(u)),jux=curry((u,n)=>n.jux(u)),juxBy=curry((u,n,e)=>e.juxBy(u,n)),late=curry((u,n)=>n.late(u)),linger=curry((u,n)=>n.linger(u)),mask=curry((u,n)=>n.mask(u)),mul=curry((u,n)=>n.mul(u)),off=curry((u,n,e)=>e.off(u,n)),ply=curry((u,n)=>n.ply(u)),range=curry((u,n,e)=>e.range(u,n)),range2=curry((u,n,e)=>e.range2(u,n)),rev=u=>u.rev(),slow=curry((u,n)=>n.slow(u)),struct=curry((u,n)=>n.struct(u)),sub=curry((u,n)=>n.sub(u)),superimpose=curry((u,n)=>n.superimpose(...u)),set=curry((u,n)=>n.set(u)),when=curry((u,n,e)=>e.when(u,n));Pattern$2.prototype.composable={fast,slow,early,late,superimpose};function makeComposable(u){return Object.entries(Pattern$2.prototype.composable).forEach(([n,e])=>{u[n]=(...r)=>{const a=compose(u,e(...r));return makeComposable(a)}}),u}const patternify2=u=>(n,e,r)=>n.fmap(a=>s=>u.call(r,a,s)).appLeft(e).innerJoin(),patternify3=u=>(n,e,r,a)=>n.fmap(s=>o=>c=>u.call(a,s,o,c)).appLeft(e).appLeft(r).innerJoin(),patternify4=u=>(n,e,r,a,s)=>n.fmap(o=>c=>l=>m=>u.call(s,o,c,l,m)).appLeft(e).appLeft(r).appLeft(a).innerJoin();Pattern$2.prototype.echo=function(...u){return u=u.map(reify$2),patternify3(Pattern$2.prototype._echo)(...u,this)};Pattern$2.prototype.echoWith=function(...u){return u=u.map(reify$2),patternify3(Pattern$2.prototype._echoWith)(...u,this)};Pattern$2.prototype.chunk=function(...u){return u=u.map(reify$2),patternify2(Pattern$2.prototype._chunk)(...u,this)};Pattern$2.prototype.chunkBack=function(...u){return u=u.map(reify$2),patternify2(Pattern$2.prototype._chunkBack)(...u,this)};Pattern$2.prototype.loopAt=function(...u){return u=u.map(reify$2),patternify2(Pattern$2.prototype._loopAt)(...u,this)};Pattern$2.prototype.zoom=function(...u){return u=u.map(reify$2),patternify2(Pattern$2.prototype._zoom)(...u,this)};Pattern$2.prototype.compress=function(...u){return u=u.map(reify$2),patternify2(Pattern$2.prototype._compress)(...u,this)};Pattern$2.prototype.outside=function(...u){return u=u.map(reify$2),patternify2(Pattern$2.prototype._outside)(...u,this)};Pattern$2.prototype.inside=function(...u){return u=u.map(reify$2),patternify2(Pattern$2.prototype._inside)(...u,this)};Pattern$2.prototype.bootstrap=function(){const u=Object.fromEntries(Object.entries(Pattern$2.prototype.composable).map(([n,e])=>(Pattern$2.prototype[n]&&(Pattern$2.prototype[n]=makeComposable(Pattern$2.prototype[n])),[n,curry(e,makeComposable)])));return this.patternified.forEach(n=>{Pattern$2.prototype[n]=function(...e){return this._patternify(Pattern$2.prototype["_"+n])(...e)}}),u};Pattern$2.prototype.define=(u,n,e={})=>{e.composable&&(Pattern$2.prototype.composable[u]=n),e.patternified&&(Pattern$2.prototype.patternified=Pattern$2.prototype.patternified.concat([u])),Pattern$2.prototype.bootstrap()};Pattern$2.prototype.define("hush",u=>u.hush(),{patternified:!1,composable:!0});Pattern$2.prototype.define("bypass",u=>u.bypass(on),{patternified:!0,composable:!0});const controls={},generic_params=[["s","s","sound"],["f","n","The note or sample number to choose for a synth or sampleset"],["f","note","The note or pitch to play a sound or synth with"],["f","accelerate","a pattern of numbers that speed up (or slow down) samples while they play."],["f","gain","a pattern of numbers that specify volume. Values less than 1 make the sound quieter. Values greater than 1 make the sound louder. For the linear equivalent, see @amp@."],["f","amp","like @gain@, but linear."],["f","attack","a pattern of numbers to specify the attack time (in seconds) of an envelope applied to each sample."],["f","decay",""],["f","sustain",""],["f","release","a pattern of numbers to specify the release time (in seconds) of an envelope applied to each sample."],["f","hold","a pattern of numbers to specify the hold time (in seconds) of an envelope applied to each sample. Only takes effect if `attack` and `release` are also specified."],["f","bandf","A pattern of numbers from 0 to 1. Sets the center frequency of the band-pass filter."],["f","bandq","a pattern of anumbers from 0 to 1. Sets the q-factor of the band-pass filter."],["f","begin","a pattern of numbers from 0 to 1. Skips the beginning of each sample, e.g. `0.25` to cut off the first quarter from each sample."],["f","end","the same as `begin`, but cuts the end off samples, shortening them; e.g. `0.75` to cut off the last quarter of each sample."],["f","loop","loops the sample (from `begin` to `end`) the specified number of times."],["f","legato","controls the amount of overlap between two adjacent sounds"],["f","crush","bit crushing, a pattern of numbers from 1 (for drastic reduction in bit-depth) to 16 (for barely no reduction)."],["f","coarse","fake-resampling, a pattern of numbers for lowering the sample rate, i.e. 1 for original 2 for half, 3 for a third and so on."],["i","channel","choose the channel the pattern is sent to in superdirt"],["i","cut","In the style of classic drum-machines, `cut` will stop a playing sample as soon as another samples with in same cutgroup is to be played. An example would be an open hi-hat followed by a closed one, essentially muting the open."],["f","cutoff","a pattern of numbers from 0 to 1. Applies the cutoff frequency of the low-pass filter."],["f","hcutoff","a pattern of numbers from 0 to 1. Applies the cutoff frequency of the high-pass filter. Also has alias @hpf@"],["f","hresonance","a pattern of numbers from 0 to 1. Applies the resonance of the high-pass filter. Has alias @hpq@"],["f","resonance","a pattern of numbers from 0 to 1. Specifies the resonance of the low-pass filter."],["f","djf","DJ filter, below 0.5 is low pass filter, above is high pass filter."],["f","delay","a pattern of numbers from 0 to 1. Sets the level of the delay signal."],["f","delayfeedback","a pattern of numbers from 0 to 1. Sets the amount of delay feedback."],["f","delaytime","a pattern of numbers from 0 to 1. Sets the length of the delay."],["f","lock","A pattern of numbers. Specifies whether delaytime is calculated relative to cps. When set to 1, delaytime is a direct multiple of a cycle."],["f","detune",""],["f","dry","when set to `1` will disable all reverb for this pattern. See `room` and `size` for more information about reverb."],["f","fadeTime","Used when using begin/end or chop/striate and friends, to change the fade out time of the 'grain' envelope."],["f","fadeInTime","As with fadeTime, but controls the fade in time of the grain envelope. Not used if the grain begins at position 0 in the sample."],["f","freq",""],["f","gate",""],["f","leslie",""],["f","lrate",""],["f","lsize",""],["f","degree",""],["f","mtranspose",""],["f","ctranspose",""],["f","harmonic",""],["f","stepsPerOctave",""],["f","octaveR",""],["f","nudge","Nudges events into the future by the specified number of seconds. Negative numbers work up to a point as well (due to internal latency)"],["i","octave",""],["f","offset",""],["i","orbit","a pattern of numbers. An `orbit` is a global parameter context for patterns. Patterns with the same orbit will share hardware output bus offset and global effects, e.g. reverb and delay. The maximum number of orbits is specified in the superdirt startup, numbers higher than maximum will wrap around."],["f","overgain",""],["f","overshape",""],["f","pan","a pattern of numbers between 0 and 1, from left to right (assuming stereo), once round a circle (assuming multichannel)"],["f","panspan","a pattern of numbers between -inf and inf, which controls how much multichannel output is fanned out (negative is backwards ordering)"],["f","pansplay","a pattern of numbers between 0.0 and 1.0, which controls the multichannel spread range (multichannel only)"],["f","panwidth","a pattern of numbers between 0.0 and inf, which controls how much each channel is distributed over neighbours (multichannel only)"],["f","panorient","a pattern of numbers between -1.0 and 1.0, which controls the relative position of the centre pan in a pair of adjacent speakers (multichannel only)"],["f","rate","used in SuperDirt softsynths as a control rate or 'speed'"],["f","slide",""],["f","semitone",""],["f","velocity",""],["f","voice",""],["f","room","a pattern of numbers from 0 to 1. Sets the level of reverb."],["f","size","a pattern of numbers from 0 to 1. Sets the perceptual size (reverb time) of the `room` to be used in reverb."],["f","shape","wave shaping distortion, a pattern of numbers from 0 for no distortion up to 1 for loads of distortion."],["f","speed","a pattern of numbers which changes the speed of sample playback, i.e. a cheap way of changing pitch. Negative values will play the sample backwards!"],["s","unit",'used in conjunction with `speed`, accepts values of "r" (rate, default behavior), "c" (cycles), or "s" (seconds). Using `unit "c"` means `speed` will be interpreted in units of cycles, e.g. `speed "1"` means samples will be stretched to fill a cycle. Using `unit "s"` means the playback speed will be adjusted so that the duration is the number of seconds specified by `speed`.'],["f","squiz",""],["f","stutterdepth",""],["f","stuttertime",""],["f","timescale",""],["f","timescalewin",""],["s","vowel","formant filter to make things sound like vowels, a pattern of either `a`, `e`, `i`, `o` or `u`. Use a rest (`~`) for no effect."],["f","waveloss",""],["f","dur",""],["f","expression",""],["f","sustainpedal",""],["f","tremolodepth","Tremolo Audio DSP effect | params are 'tremolorate' and 'tremolodepth'"],["f","tremolorate","Tremolo Audio DSP effect | params are 'tremolorate' and 'tremolodepth'"],["f","phaserdepth","Phaser Audio DSP effect | params are 'phaserrate' and 'phaserdepth'"],["f","phaserrate","Phaser Audio DSP effect | params are 'phaserrate' and 'phaserdepth'"],["f","fshift","frequency shifter"],["f","fshiftnote","frequency shifter"],["f","fshiftphase","frequency shifter"],["f","triode","tube distortion"],["f","krush","shape/bass enhancer"],["f","kcutoff",""],["f","octer","octaver effect"],["f","octersub","octaver effect"],["f","octersubsub","octaver effect"],["f","ring","ring modulation"],["f","ringf","ring modulation"],["f","ringdf","ring modulation"],["f","distort","noisy fuzzy distortion"],["f","freeze","Spectral freeze"],["f","xsdelay",""],["f","tsdelay",""],["f","real","Spectral conform"],["f","imag",""],["f","enhance","Spectral enhance"],["f","partials",""],["f","comb","Spectral comb"],["f","smear","Spectral smear"],["f","scram","Spectral scramble"],["f","binshift","Spectral binshift"],["f","hbrick","High pass sort of spectral filter"],["f","lbrick","Low pass sort of spectral filter"],["f","midichan",""],["f","control",""],["f","ccn",""],["f","ccv",""],["f","polyTouch",""],["f","midibend",""],["f","miditouch",""],["f","ctlNum",""],["f","frameRate",""],["f","frames",""],["f","hours",""],["s","midicmd",""],["f","minutes",""],["f","progNum",""],["f","seconds",""],["f","songPtr",""],["f","uid",""],["f","val",""],["f","cps",""],["f","clip",""]],_name=(u,...n)=>sequence$1(...n).withValue(e=>({[u]:e})),_setter=(u,n)=>function(...e){return e.length?this.set(u(...e)):this.fmap(r=>({[n]:r}))};generic_params.forEach(([u,n,e])=>{controls[n]=(...r)=>_name(n,...r),Pattern$2.prototype[n]=_setter(controls[n],n)});controls.createParam=u=>{const n=(...e)=>_name(u,...e);return Pattern$2.prototype[u]=_setter(n,u),(...e)=>_name(u,...e)};controls.createParams=(...u)=>u.reduce((n,e)=>Object.assign(n,{[e]:createParam(e)}),{});function bjorklund(u,n){for(var e=[],r=[],a=[n],s=u-n,o=0,c=function(l){if(l==-1)e.push(0);else if(l==-2)e.push(1);else{for(var m=0;m<r[l];m++)c(l-1);a[l]&&c(l-2)}};a[o]>1;)r.push(Math.floor(s/a[o])),a.push(s%a[o]),s=a[o],o++;return r.push(s),c(o),e.reverse()}var bjork=function(u,n){return u>n?bjorklund(u,n):bjorklund(n,u)};const euclid=(u,n,e=0)=>{const r=bjork(n,u);return e?rotate(r,-e):r};Pattern$2.prototype.euclid=function(u,n,e=0){return this.struct(euclid(u,n,e))};Pattern$2.prototype.euclidLegato=function(u,n,e=0){const r=euclid(u,n,e),a=r.indexOf(1),s=rotate(r,a).join("").split("1").slice(1).map(o=>[o.length+1,!0]);return this.struct(timeCat$1(...s)).late(fraction(a).div(n))};function steady(u){return new Pattern$2(n=>[new Hap(void 0,n.span,u)])}const signal=u=>{const n=e=>[new Hap(void 0,e.span,u(e.span.midpoint()))];return new Pattern$2(n)},isaw=signal(u=>1-u%1),isaw2=isaw._toBipolar(),saw=signal(u=>u%1),saw2=saw._toBipolar(),sine2=signal(u=>Math.sin(Math.PI*2*u)),sine=sine2._fromBipolar(),cosine=sine._early(fraction(1).div(4)),cosine2=sine2._early(fraction(1).div(4)),square=signal(u=>Math.floor(u*2%2)),square2=square._toBipolar(),tri=fastcat(isaw,saw),tri2=fastcat(isaw2,saw2),time=signal(id),xorwise=u=>{const n=u<<13^u,e=n>>17^n;return e<<5^e},_frac=u=>u-Math.trunc(u),timeToIntSeed=u=>xorwise(Math.trunc(_frac(u/300)*536870912)),intSeedToRand=u=>u%536870912/536870912,timeToRand=u=>Math.abs(intSeedToRand(timeToIntSeed(u))),rand=signal(timeToRand),rand2=rand._toBipolar(),_brandBy=u=>rand.fmap(n=>n<u),brandBy=u=>reify$2(u).fmap(_brandBy).innerJoin(),brand=_brandBy(.5),_irand=u=>rand.fmap(n=>Math.trunc(n*u)),irand=u=>reify$2(u).fmap(_irand).innerJoin(),__chooseWith=(u,n)=>(n=n.map(reify$2),n.length==0?silence$1:u.range(0,n.length).fmap(e=>n[Math.floor(e)])),chooseWith=(u,n)=>__chooseWith(u,n).outerJoin(),chooseInWith=(u,n)=>__chooseWith(u,n).innerJoin(),choose=(...u)=>chooseWith(rand,u);Pattern$2.prototype.choose=function(...u){return chooseWith(this,u)};Pattern$2.prototype.choose2=function(...u){return chooseWith(this._fromBipolar(),u)};const chooseCycles=(...u)=>chooseInWith(rand.segment(1),u),randcat=chooseCycles,_wchooseWith=function(u,...n){const e=n.map(c=>reify$2(c[0])),r=[];let a=0;for(const c of n)a+=c[1],r.push(a);const s=a,o=function(c){const l=c*s;return e[r.findIndex(m=>m>l,r)]};return u.fmap(o)},wchooseWith=(...u)=>_wchooseWith(...u).outerJoin(),wchoose=(...u)=>wchooseWith(rand,...u),wchooseCycles=(...u)=>_wchooseWith(rand,...u).innerJoin(),perlinWith=u=>{const n=u.fmap(Math.floor),e=u.fmap(s=>Math.floor(s)+1),r=s=>6*s**5-15*s**4+10*s**3,a=s=>o=>c=>o+r(s)*(c-o);return u.sub(n).fmap(a).appBoth(n.fmap(timeToRand)).appBoth(e.fmap(timeToRand))},perlin=perlinWith(time);Pattern$2.prototype._degradeByWith=function(u,n){return this.fmap(e=>r=>e).appLeft(u._filterValues(e=>e>n))};Pattern$2.prototype._degradeBy=function(u){return this._degradeByWith(rand,u)};Pattern$2.prototype.degrade=function(){return this._degradeBy(.5)};Pattern$2.prototype._undegradeBy=function(u){return this._degradeByWith(rand.fmap(n=>1-n),u)};Pattern$2.prototype.undegrade=function(){return this._undegradeBy(.5)};Pattern$2.prototype._sometimesBy=function(u,n){return stack$1(this._degradeBy(u),n(this._undegradeBy(1-u)))};Pattern$2.prototype.sometimesBy=function(u,n){const e=this;return reify$2(u).fmap(r=>e._sometimesBy(r,n)).innerJoin()};Pattern$2.prototype._sometimesByPre=function(u,n){return stack$1(this._degradeBy(u),n(this).undegradeBy(1-u))};Pattern$2.prototype.sometimesByPre=function(u,n){const e=this;return reify$2(u).fmap(r=>e._sometimesByPre(r,n)).innerJoin()};Pattern$2.prototype.sometimes=function(u){return this._sometimesBy(.5,u)};Pattern$2.prototype.sometimesPre=function(u){return this._sometimesByPre(.5,u)};Pattern$2.prototype._someCyclesBy=function(u,n){return stack$1(this._degradeByWith(rand._segment(1),u),n(this._degradeByWith(rand.fmap(e=>1-e)._segment(1),1-u)))};Pattern$2.prototype.someCyclesBy=function(u,n){const e=this;return reify$2(u).fmap(r=>e._someCyclesBy(r,n)).innerJoin()};Pattern$2.prototype.someCycles=function(u){return this._someCyclesBy(.5,u)};Pattern$2.prototype.often=function(u){return this.sometimesBy(.75,u)};Pattern$2.prototype.rarely=function(u){return this.sometimesBy(.25,u)};Pattern$2.prototype.almostNever=function(u){return this.sometimesBy(.1,u)};Pattern$2.prototype.almostAlways=function(u){return this.sometimesBy(.9,u)};Pattern$2.prototype.never=function(u){return this};Pattern$2.prototype.always=function(u){return u(this)};Pattern$2.prototype.patternified.push("degradeBy","undegradeBy");let synth;try{synth=window==null?void 0:window.speechSynthesis}catch{console.warn("cannot use window: not in browser?")}let allVoices=synth==null?void 0:synth.getVoices();function speak(u,n,e){synth.cancel();const r=new SpeechSynthesisUtterance(u);r.lang=n,allVoices=synth.getVoices();const a=allVoices.filter(s=>s.lang.includes(n));typeof e=="number"?r.voice=a[e%a.length]:typeof e=="string"&&(r.voice=a.find(s=>s.name===s)),speechSynthesis.speak(r)}Pattern$2.prototype._speak=function(u,n){return this._withHap(e=>{const r=(a,s)=>{speak(s.value,u,n)};return e.setContext({...e.context,onTrigger:r})})};Pattern$2.prototype.speak=function(u,n){return patternify2(Pattern$2.prototype._speak)(reify(u),reify(n),this)};const gist=(route,cache=!0)=>fetch(`https://gist.githubusercontent.com/${route}?cachebust=${cache?"":Date.now()}`).then(u=>u.text()).then(code=>eval(code));console.log("%c // \u{1F300} @strudel.cycles/core loaded \u{1F300}","background-color: black;color:white;padding:4px;border-radius:15px");globalThis._strudelLoaded&&console.warn(`@strudel.cycles/core was loaded more than once...
This might happen when you have multiple versions of strudel installed. 
Please check with "npm ls @strudel.cycles/core".`);globalThis._strudelLoaded=!0;const strudel=Object.freeze(Object.defineProperty({__proto__:null,Fraction:fraction,gist,Hap,Pattern:Pattern$2,silence:silence$1,pure:pure$1,isPattern,reify:reify$2,stack:stack$1,slowcat:slowcat$1,slowcatPrime,fastcat,cat,timeCat:timeCat$1,sequence:sequence$1,seq:seq$2,polymeterSteps,polymeter,pm,polyrhythm,pr,add,chop,chunk,chunkBack,div,early,echo,every,fast,inv,invert,iter,iterBack,jux,juxBy,late,linger,mask,mul,off,ply,range,range2,rev,slow,struct,sub,superimpose,set,when,makeComposable,patternify2,patternify3,patternify4,steady,signal,isaw,isaw2,saw,saw2,sine2,sine,cosine,cosine2,square,square2,tri,tri2,time,rand,rand2,_brandBy,brandBy,brand,_irand,irand,__chooseWith,chooseWith,chooseInWith,choose,chooseCycles,randcat,wchoose,wchooseCycles,perlinWith,perlin,State,TimeSpan,isNote,tokenizeNote,toMidi,fromMidi,getFreq,midi2note,mod,getPlayableNoteValue,getFrequency,rotate,pipe,compose,removeUndefineds,flatten,id,constant,listRange,curry},Symbol.toStringTag,{value:"Module"}));var dist$b={},tokenizer$1={},utils$3={},unicode$5={},idContinueBool_1$2,idContinueLargeRegex_1$2,idStartBool_1$2,idStartLargeRegex_1$2,whitespaceBool_1$2,whitespaceArray_1$2;Object.defineProperty(unicode$5,"__esModule",{value:!0});whitespaceArray_1$2=unicode$5.whitespaceArray=[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279];whitespaceBool_1$2=unicode$5.whitespaceBool=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!1,!0,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1];idStartLargeRegex_1$2=unicode$5.idStartLargeRegex=/^[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]$/;idStartBool_1$2=unicode$5.idStartBool=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!1,!1,!1,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!1,!1,!1,!1];idContinueLargeRegex_1$2=unicode$5.idContinueLargeRegex=/^[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]$/;idContinueBool_1$2=unicode$5.idContinueBool=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!1,!1,!1,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!1,!1,!1,!1];const unicode$4=_mergeNamespaces({__proto__:null,get whitespaceArray(){return whitespaceArray_1$2},get whitespaceBool(){return whitespaceBool_1$2},get idStartLargeRegex(){return idStartLargeRegex_1$2},get idStartBool(){return idStartBool_1$2},get idContinueLargeRegex(){return idContinueLargeRegex_1$2},get idContinueBool(){return idContinueBool_1$2},default:unicode$5},[unicode$5]),require$$0$a=getAugmentedNamespace(unicode$4);Object.defineProperty(utils$3,"__esModule",{value:!0});var isStrictModeReservedWord_1=utils$3.isStrictModeReservedWord=isStrictModeReservedWord,isWhiteSpace_1=utils$3.isWhiteSpace=isWhiteSpace,isLineTerminator_1=utils$3.isLineTerminator=isLineTerminator,isIdentifierStart_1=utils$3.isIdentifierStart=isIdentifierStart$1,isIdentifierPart_1=utils$3.isIdentifierPart=isIdentifierPart$1,isDecimalDigit_1=utils$3.isDecimalDigit=isDecimalDigit,getHexValue_1=utils$3.getHexValue=getHexValue,_unicode$2=require$$0$a,strictReservedWords=["null","true","false","implements","interface","package","private","protected","public","static","let","if","in","do","var","for","new","try","this","else","case","void","with","enum","while","break","catch","throw","const","yield","class","super","return","typeof","delete","switch","export","import","default","finally","extends","function","continue","debugger","instanceof"];function isStrictModeReservedWord(u){return strictReservedWords.indexOf(u)!==-1}function isWhiteSpace(u){return u<128?_unicode$2.whitespaceBool[u]:u===160||u>5759&&_unicode$2.whitespaceArray.indexOf(u)!==-1}function isLineTerminator(u){return u===10||u===13||u===8232||u===8233}function isIdentifierStart$1(u){return u<128?_unicode$2.idStartBool[u]:_unicode$2.idStartLargeRegex.test(String.fromCodePoint(u))}function isIdentifierPart$1(u){return u<128?_unicode$2.idContinueBool[u]:_unicode$2.idContinueLargeRegex.test(String.fromCodePoint(u))}function isDecimalDigit(u){return u>=48&&u<=57}function getHexValue(u){return u>="0"&&u<="9"?u.charCodeAt(0)-48:u>="a"&&u<="f"?u.charCodeAt(0)-87:u>="A"&&u<="F"?u.charCodeAt(0)-55:-1}const utils$2=_mergeNamespaces({__proto__:null,isStrictModeReservedWord:isStrictModeReservedWord_1,isWhiteSpace:isWhiteSpace_1,isLineTerminator:isLineTerminator_1,isIdentifierStart:isIdentifierStart_1,isIdentifierPart:isIdentifierPart_1,isDecimalDigit:isDecimalDigit_1,getHexValue:getHexValue_1,default:utils$3},[utils$3]),require$$3$5=getAugmentedNamespace(utils$2);var errors$1={},ErrorMessages_1;Object.defineProperty(errors$1,"__esModule",{value:!0});ErrorMessages_1=errors$1.ErrorMessages={UNEXPECTED_TOKEN:function u(n){return"Unexpected token "+JSON.stringify(n)},UNEXPECTED_ILLEGAL_TOKEN:function u(n){return"Unexpected "+JSON.stringify(n)},UNEXPECTED_ESCAPED_KEYWORD:"Unexpected escaped keyword",UNEXPECTED_NUMBER:"Unexpected number",UNEXPECTED_STRING:"Unexpected string",UNEXPECTED_IDENTIFIER:"Unexpected identifier",UNEXPECTED_RESERVED_WORD:"Unexpected reserved word",UNEXPECTED_TEMPLATE:"Unexpected template",UNEXPECTED_EOS:"Unexpected end of input",UNEXPECTED_LINE_TERMINATOR:"Unexpected line terminator",UNEXPECTED_COMMA_AFTER_REST:"Unexpected comma after rest",UNEXPECTED_REST_PARAMETERS_INITIALIZATION:"Rest parameter may not have a default initializer",NEWLINE_AFTER_THROW:"Illegal newline after throw",UNTERMINATED_REGEXP:"Invalid regular expression: missing /",INVALID_LAST_REST_PARAMETER:"Rest parameter must be last formal parameter",INVALID_REST_PARAMETERS_INITIALIZATION:"Rest parameter may not have a default initializer",INVALID_REGEXP_FLAGS:"Invalid regular expression flags",INVALID_REGEX:"Invalid regular expression",INVALID_LHS_IN_ASSIGNMENT:"Invalid left-hand side in assignment",INVALID_LHS_IN_BINDING:"Invalid left-hand side in binding",INVALID_LHS_IN_FOR_IN:"Invalid left-hand side in for-in",INVALID_LHS_IN_FOR_OF:"Invalid left-hand side in for-of",INVALID_LHS_IN_FOR_AWAIT:"Invalid left-hand side in for-await",INVALID_UPDATE_OPERAND:"Increment/decrement target must be an identifier or member expression",INVALID_EXPONENTIATION_LHS:"Unary expressions as the left operand of an exponentation expression must be disambiguated with parentheses",MULTIPLE_DEFAULTS_IN_SWITCH:"More than one default clause in switch statement",NO_CATCH_OR_FINALLY:"Missing catch or finally after try",ILLEGAL_RETURN:"Illegal return statement",ILLEGAL_ARROW_FUNCTION_PARAMS:"Illegal arrow function parameter list",INVALID_ASYNC_PARAMS:"Async function parameters must not contain await expressions",INVALID_VAR_INIT_FOR_IN:"Invalid variable declaration in for-in statement",INVALID_VAR_INIT_FOR_OF:"Invalid variable declaration in for-of statement",INVALID_VAR_INIT_FOR_AWAIT:"Invalid variable declaration in for-await statement",UNINITIALIZED_BINDINGPATTERN_IN_FOR_INIT:"Binding pattern appears without initializer in for statement init",ILLEGAL_PROPERTY:"Illegal property initializer",INVALID_ID_BINDING_STRICT_MODE:function u(n){return"The identifier "+JSON.stringify(n)+" must not be in binding position in strict mode"},INVALID_ID_IN_LABEL_STRICT_MODE:function u(n){return"The identifier "+JSON.stringify(n)+" must not be in label position in strict mode"},INVALID_ID_IN_EXPRESSION_STRICT_MODE:function u(n){return"The identifier "+JSON.stringify(n)+" must not be in expression position in strict mode"},INVALID_CALL_TO_SUPER:'Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass',INVALID_DELETE_STRICT_MODE:"Identifier expressions must not be deleted in strict mode",DUPLICATE_BINDING:function u(n){return"Duplicate binding "+JSON.stringify(n)},ILLEGAL_ID_IN_LEXICAL_DECLARATION:function u(n){return"Lexical declarations must not have a binding named "+JSON.stringify(n)},UNITIALIZED_CONST:"Constant lexical declarations must have an initialiser",ILLEGAL_LABEL_IN_BODY:function u(n){return"The body of a "+n+" statement must not be a labeled function declaration"},ILLEGEAL_LABEL_IN_IF:"The consequent of an if statement must not be a labeled function declaration",ILLEGAL_LABEL_IN_ELSE:"The alternate of an if statement must not be a labeled function declaration",ILLEGAL_CONTINUE_WITHOUT_ITERATION_WITH_ID:function u(n){return"Continue statement must be nested within an iteration statement with label "+JSON.stringify(n)},ILLEGAL_CONTINUE_WITHOUT_ITERATION:"Continue statement must be nested within an iteration statement",ILLEGAL_BREAK_WITHOUT_ITERATION_OR_SWITCH:"Break statement must be nested within an iteration statement or a switch statement",ILLEGAL_WITH_STRICT_MODE:"Strict mode code must not include a with statement",ILLEGAL_ACCESS_SUPER_MEMBER:"Member access on super must be in a method",ILLEGAL_SUPER_CALL:'Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass',DUPLICATE_LABEL_DECLARATION:function u(n){return"Label "+JSON.stringify(n)+" has already been declared"},ILLEGAL_BREAK_WITHIN_LABEL:function u(n){return"Break statement must be nested within a statement with label "+JSON.stringify(n)},ILLEGAL_YIELD_EXPRESSIONS:function u(n){return n+" parameters must not contain yield expressions"},ILLEGAL_YIELD_IDENTIFIER:'"yield" may not be used as an identifier in this context',ILLEGAL_AWAIT_IDENTIFIER:'"await" may not be used as an identifier in this context',DUPLICATE_CONSTRUCTOR:"Duplicate constructor method in class",ILLEGAL_CONSTRUCTORS:"Constructors cannot be async, generators, getters or setters",ILLEGAL_STATIC_CLASS_NAME:'Static class methods cannot be named "prototype"',NEW_TARGET_ERROR:"new.target must be within function (but not arrow expression) code",DUPLICATE_EXPORT:function u(n){return"Duplicate export "+JSON.stringify(n)},UNDECLARED_BINDING:function u(n){return"Exported binding "+JSON.stringify(n)+" is not declared"},DUPLICATE_PROPTO_PROP:"Duplicate __proto__ property in object literal not allowed",ILLEGAL_LABEL_FUNC_DECLARATION:"Labeled FunctionDeclarations are disallowed in strict mode",ILLEGAL_FUNC_DECL_IF:"FunctionDeclarations in IfStatements are disallowed in strict mode",ILLEGAL_USE_STRICT:'Functions with non-simple parameter lists may not contain a "use strict" directive',ILLEGAL_EXPORTED_NAME:"Names of variables used in an export specifier from the current module must be identifiers",NO_OCTALS_IN_TEMPLATES:"Template literals may not contain octal escape sequences",NO_AWAIT_IN_ASYNC_PARAMS:'Async arrow parameters may not contain "await"'};const errors=_mergeNamespaces({__proto__:null,get ErrorMessages(){return ErrorMessages_1},default:errors$1},[errors$1]),require$$2$5=getAugmentedNamespace(errors);var TokenClass_1,TokenType_1;Object.defineProperty(tokenizer$1,"__esModule",{value:!0});var JsError_1=tokenizer$1.JsError=TokenType_1=tokenizer$1.TokenType=TokenClass_1=tokenizer$1.TokenClass=void 0,_slicedToArray=function(){function u(n,e){var r=[],a=!0,s=!1,o=void 0;try{for(var c=n[Symbol.iterator](),l;!(a=(l=c.next()).done)&&(r.push(l.value),!(e&&r.length===e));a=!0);}catch(m){s=!0,o=m}finally{try{!a&&c.return&&c.return()}finally{if(s)throw o}}return r}return function(n,e){if(Array.isArray(n))return n;if(Symbol.iterator in Object(n))return u(n,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),_createClass$e=function(){function u(n,e){for(var r=0;r<e.length;r++){var a=e[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(n,e,r){return e&&u(n.prototype,e),r&&u(n,r),n}}(),_utils$1=require$$3$5,_errors$2=require$$2$5;function _classCallCheck$i(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn$8(u,n){if(!u)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n&&(typeof n=="object"||typeof n=="function")?n:u}function _inherits$8(u,n){if(typeof n!="function"&&n!==null)throw new TypeError("Super expression must either be null or a function, not "+typeof n);u.prototype=Object.create(n&&n.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(u,n):u.__proto__=n)}var TokenClass=TokenClass_1=tokenizer$1.TokenClass={Eof:{name:"<End>"},Ident:{name:"Identifier",isIdentifierName:!0},Keyword:{name:"Keyword",isIdentifierName:!0},NumericLiteral:{name:"Numeric"},TemplateElement:{name:"Template"},Punctuator:{name:"Punctuator"},StringLiteral:{name:"String"},RegularExpression:{name:"RegularExpression"},Illegal:{name:"Illegal"}},TokenType=TokenType_1=tokenizer$1.TokenType={EOS:{klass:TokenClass.Eof,name:"EOS"},LPAREN:{klass:TokenClass.Punctuator,name:"("},RPAREN:{klass:TokenClass.Punctuator,name:")"},LBRACK:{klass:TokenClass.Punctuator,name:"["},RBRACK:{klass:TokenClass.Punctuator,name:"]"},LBRACE:{klass:TokenClass.Punctuator,name:"{"},RBRACE:{klass:TokenClass.Punctuator,name:"}"},COLON:{klass:TokenClass.Punctuator,name:":"},SEMICOLON:{klass:TokenClass.Punctuator,name:";"},PERIOD:{klass:TokenClass.Punctuator,name:"."},ELLIPSIS:{klass:TokenClass.Punctuator,name:"..."},ARROW:{klass:TokenClass.Punctuator,name:"=>"},CONDITIONAL:{klass:TokenClass.Punctuator,name:"?"},INC:{klass:TokenClass.Punctuator,name:"++"},DEC:{klass:TokenClass.Punctuator,name:"--"},ASSIGN:{klass:TokenClass.Punctuator,name:"="},ASSIGN_BIT_OR:{klass:TokenClass.Punctuator,name:"|="},ASSIGN_BIT_XOR:{klass:TokenClass.Punctuator,name:"^="},ASSIGN_BIT_AND:{klass:TokenClass.Punctuator,name:"&="},ASSIGN_SHL:{klass:TokenClass.Punctuator,name:"<<="},ASSIGN_SHR:{klass:TokenClass.Punctuator,name:">>="},ASSIGN_SHR_UNSIGNED:{klass:TokenClass.Punctuator,name:">>>="},ASSIGN_ADD:{klass:TokenClass.Punctuator,name:"+="},ASSIGN_SUB:{klass:TokenClass.Punctuator,name:"-="},ASSIGN_MUL:{klass:TokenClass.Punctuator,name:"*="},ASSIGN_DIV:{klass:TokenClass.Punctuator,name:"/="},ASSIGN_MOD:{klass:TokenClass.Punctuator,name:"%="},ASSIGN_EXP:{klass:TokenClass.Punctuator,name:"**="},COMMA:{klass:TokenClass.Punctuator,name:","},OR:{klass:TokenClass.Punctuator,name:"||"},AND:{klass:TokenClass.Punctuator,name:"&&"},BIT_OR:{klass:TokenClass.Punctuator,name:"|"},BIT_XOR:{klass:TokenClass.Punctuator,name:"^"},BIT_AND:{klass:TokenClass.Punctuator,name:"&"},SHL:{klass:TokenClass.Punctuator,name:"<<"},SHR:{klass:TokenClass.Punctuator,name:">>"},SHR_UNSIGNED:{klass:TokenClass.Punctuator,name:">>>"},ADD:{klass:TokenClass.Punctuator,name:"+"},SUB:{klass:TokenClass.Punctuator,name:"-"},MUL:{klass:TokenClass.Punctuator,name:"*"},DIV:{klass:TokenClass.Punctuator,name:"/"},MOD:{klass:TokenClass.Punctuator,name:"%"},EXP:{klass:TokenClass.Punctuator,name:"**"},EQ:{klass:TokenClass.Punctuator,name:"=="},NE:{klass:TokenClass.Punctuator,name:"!="},EQ_STRICT:{klass:TokenClass.Punctuator,name:"==="},NE_STRICT:{klass:TokenClass.Punctuator,name:"!=="},LT:{klass:TokenClass.Punctuator,name:"<"},GT:{klass:TokenClass.Punctuator,name:">"},LTE:{klass:TokenClass.Punctuator,name:"<="},GTE:{klass:TokenClass.Punctuator,name:">="},INSTANCEOF:{klass:TokenClass.Keyword,name:"instanceof"},IN:{klass:TokenClass.Keyword,name:"in"},NOT:{klass:TokenClass.Punctuator,name:"!"},BIT_NOT:{klass:TokenClass.Punctuator,name:"~"},ASYNC:{klass:TokenClass.Keyword,name:"async"},AWAIT:{klass:TokenClass.Keyword,name:"await"},ENUM:{klass:TokenClass.Keyword,name:"enum"},DELETE:{klass:TokenClass.Keyword,name:"delete"},TYPEOF:{klass:TokenClass.Keyword,name:"typeof"},VOID:{klass:TokenClass.Keyword,name:"void"},BREAK:{klass:TokenClass.Keyword,name:"break"},CASE:{klass:TokenClass.Keyword,name:"case"},CATCH:{klass:TokenClass.Keyword,name:"catch"},CLASS:{klass:TokenClass.Keyword,name:"class"},CONTINUE:{klass:TokenClass.Keyword,name:"continue"},DEBUGGER:{klass:TokenClass.Keyword,name:"debugger"},DEFAULT:{klass:TokenClass.Keyword,name:"default"},DO:{klass:TokenClass.Keyword,name:"do"},ELSE:{klass:TokenClass.Keyword,name:"else"},EXPORT:{klass:TokenClass.Keyword,name:"export"},EXTENDS:{klass:TokenClass.Keyword,name:"extends"},FINALLY:{klass:TokenClass.Keyword,name:"finally"},FOR:{klass:TokenClass.Keyword,name:"for"},FUNCTION:{klass:TokenClass.Keyword,name:"function"},IF:{klass:TokenClass.Keyword,name:"if"},IMPORT:{klass:TokenClass.Keyword,name:"import"},LET:{klass:TokenClass.Keyword,name:"let"},NEW:{klass:TokenClass.Keyword,name:"new"},RETURN:{klass:TokenClass.Keyword,name:"return"},SUPER:{klass:TokenClass.Keyword,name:"super"},SWITCH:{klass:TokenClass.Keyword,name:"switch"},THIS:{klass:TokenClass.Keyword,name:"this"},THROW:{klass:TokenClass.Keyword,name:"throw"},TRY:{klass:TokenClass.Keyword,name:"try"},VAR:{klass:TokenClass.Keyword,name:"var"},WHILE:{klass:TokenClass.Keyword,name:"while"},WITH:{klass:TokenClass.Keyword,name:"with"},NULL:{klass:TokenClass.Keyword,name:"null"},TRUE:{klass:TokenClass.Keyword,name:"true"},FALSE:{klass:TokenClass.Keyword,name:"false"},YIELD:{klass:TokenClass.Keyword,name:"yield"},NUMBER:{klass:TokenClass.NumericLiteral,name:""},STRING:{klass:TokenClass.StringLiteral,name:""},REGEXP:{klass:TokenClass.RegularExpression,name:""},IDENTIFIER:{klass:TokenClass.Ident,name:""},CONST:{klass:TokenClass.Keyword,name:"const"},TEMPLATE:{klass:TokenClass.TemplateElement,name:""},ESCAPED_KEYWORD:{klass:TokenClass.Keyword,name:""},ILLEGAL:{klass:TokenClass.Illegal,name:""}},TT=TokenType,I=TT.ILLEGAL,F=!1,T=!0,ONE_CHAR_PUNCTUATOR=[I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,TT.NOT,I,I,I,TT.MOD,TT.BIT_AND,I,TT.LPAREN,TT.RPAREN,TT.MUL,TT.ADD,TT.COMMA,TT.SUB,TT.PERIOD,TT.DIV,I,I,I,I,I,I,I,I,I,I,TT.COLON,TT.SEMICOLON,TT.LT,TT.ASSIGN,TT.GT,TT.CONDITIONAL,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,TT.LBRACK,I,TT.RBRACK,TT.BIT_XOR,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,TT.LBRACE,TT.BIT_OR,TT.RBRACE,TT.BIT_NOT],PUNCTUATOR_START=[F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,T,T,F,T,T,T,T,T,T,F,T,F,F,F,F,F,F,F,F,F,F,T,T,T,T,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,T,T,T,F],JsError=JsError_1=tokenizer$1.JsError=function(u){_inherits$8(n,u);function n(e,r,a,s){_classCallCheck$i(this,n);var o=_possibleConstructorReturn$8(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,s));o.index=e;try{o.line=r,o.column=a}catch{}return o.parseErrorLine=r,o.parseErrorColumn=a,o.description=s,o.message="["+r+":"+a+"]: "+s,o}return n}(Error);function fromCodePoint(u){if(u<=65535)return String.fromCharCode(u);var n=String.fromCharCode(Math.floor((u-65536)/1024)+55296),e=String.fromCharCode((u-65536)%1024+56320);return n+e}function decodeUtf16(u,n){return(u-55296)*1024+(n-56320)+65536}var Tokenizer=function(){function u(n){_classCallCheck$i(this,u),this.source=n,this.index=0,this.line=0,this.lineStart=0,this.startIndex=0,this.startLine=0,this.startLineStart=0,this.lastIndex=0,this.lastLine=0,this.lastLineStart=0,this.hasLineTerminatorBeforeNext=!1,this.tokenIndex=0}return _createClass$e(u,[{key:"saveLexerState",value:function(){return{source:this.source,index:this.index,line:this.line,lineStart:this.lineStart,startIndex:this.startIndex,startLine:this.startLine,startLineStart:this.startLineStart,lastIndex:this.lastIndex,lastLine:this.lastLine,lastLineStart:this.lastLineStart,lookahead:this.lookahead,hasLineTerminatorBeforeNext:this.hasLineTerminatorBeforeNext,tokenIndex:this.tokenIndex}}},{key:"restoreLexerState",value:function(e){this.source=e.source,this.index=e.index,this.line=e.line,this.lineStart=e.lineStart,this.startIndex=e.startIndex,this.startLine=e.startLine,this.startLineStart=e.startLineStart,this.lastIndex=e.lastIndex,this.lastLine=e.lastLine,this.lastLineStart=e.lastLineStart,this.lookahead=e.lookahead,this.hasLineTerminatorBeforeNext=e.hasLineTerminatorBeforeNext,this.tokenIndex=e.tokenIndex}},{key:"createILLEGAL",value:function(){return this.startIndex=this.index,this.startLine=this.line,this.startLineStart=this.lineStart,this.index<this.source.length?this.createError(_errors$2.ErrorMessages.UNEXPECTED_ILLEGAL_TOKEN,this.source.charAt(this.index)):this.createError(_errors$2.ErrorMessages.UNEXPECTED_EOS)}},{key:"createUnexpected",value:function(e){switch(e.type.klass){case TokenClass.Eof:return this.createError(_errors$2.ErrorMessages.UNEXPECTED_EOS);case TokenClass.Ident:return this.createError(_errors$2.ErrorMessages.UNEXPECTED_IDENTIFIER);case TokenClass.Keyword:return e.type===TokenType.ESCAPED_KEYWORD?this.createError(_errors$2.ErrorMessages.UNEXPECTED_ESCAPED_KEYWORD):this.createError(_errors$2.ErrorMessages.UNEXPECTED_TOKEN,e.slice.text);case TokenClass.NumericLiteral:return this.createError(_errors$2.ErrorMessages.UNEXPECTED_NUMBER);case TokenClass.TemplateElement:return this.createError(_errors$2.ErrorMessages.UNEXPECTED_TEMPLATE);case TokenClass.Punctuator:return this.createError(_errors$2.ErrorMessages.UNEXPECTED_TOKEN,e.type.name);case TokenClass.StringLiteral:return this.createError(_errors$2.ErrorMessages.UNEXPECTED_STRING)}throw new Error("Unreachable: unexpected token of class "+e.type.klass)}},{key:"createError",value:function(e){var r=void 0;if(typeof e=="function"){for(var a=arguments.length,s=Array(a>1?a-1:0),o=1;o<a;o++)s[o-1]=arguments[o];r=e.apply(void 0,s)}else r=e;return new JsError(this.startIndex,this.startLine+1,this.startIndex-this.startLineStart+1,r)}},{key:"createErrorWithLocation",value:function(e,r){var a=arguments,s=r.replace(/\{(\d+)\}/g,function(o,c){return JSON.stringify(a[+c+2])});return e.slice&&e.slice.startLocation&&(e=e.slice.startLocation),new JsError(e.offset,e.line,e.column+1,s)}},{key:"getKeyword",value:function(e){if(e.length===1||e.length>10)return TokenType.IDENTIFIER;switch(e.length){case 2:switch(e.charAt(0)){case"i":switch(e.charAt(1)){case"f":return TokenType.IF;case"n":return TokenType.IN}break;case"d":if(e.charAt(1)==="o")return TokenType.DO;break}break;case 3:switch(e.charAt(0)){case"v":if(u.cse2(e,"a","r"))return TokenType.VAR;break;case"f":if(u.cse2(e,"o","r"))return TokenType.FOR;break;case"n":if(u.cse2(e,"e","w"))return TokenType.NEW;break;case"t":if(u.cse2(e,"r","y"))return TokenType.TRY;break;case"l":if(u.cse2(e,"e","t"))return TokenType.LET;break}break;case 4:switch(e.charAt(0)){case"t":if(u.cse3(e,"h","i","s"))return TokenType.THIS;if(u.cse3(e,"r","u","e"))return TokenType.TRUE;break;case"n":if(u.cse3(e,"u","l","l"))return TokenType.NULL;break;case"e":if(u.cse3(e,"l","s","e"))return TokenType.ELSE;if(u.cse3(e,"n","u","m"))return TokenType.ENUM;break;case"c":if(u.cse3(e,"a","s","e"))return TokenType.CASE;break;case"v":if(u.cse3(e,"o","i","d"))return TokenType.VOID;break;case"w":if(u.cse3(e,"i","t","h"))return TokenType.WITH;break}break;case 5:switch(e.charAt(0)){case"a":if(u.cse4(e,"s","y","n","c"))return TokenType.ASYNC;if(u.cse4(e,"w","a","i","t"))return TokenType.AWAIT;break;case"w":if(u.cse4(e,"h","i","l","e"))return TokenType.WHILE;break;case"b":if(u.cse4(e,"r","e","a","k"))return TokenType.BREAK;break;case"f":if(u.cse4(e,"a","l","s","e"))return TokenType.FALSE;break;case"c":if(u.cse4(e,"a","t","c","h"))return TokenType.CATCH;if(u.cse4(e,"o","n","s","t"))return TokenType.CONST;if(u.cse4(e,"l","a","s","s"))return TokenType.CLASS;break;case"t":if(u.cse4(e,"h","r","o","w"))return TokenType.THROW;break;case"y":if(u.cse4(e,"i","e","l","d"))return TokenType.YIELD;break;case"s":if(u.cse4(e,"u","p","e","r"))return TokenType.SUPER;break}break;case 6:switch(e.charAt(0)){case"r":if(u.cse5(e,"e","t","u","r","n"))return TokenType.RETURN;break;case"t":if(u.cse5(e,"y","p","e","o","f"))return TokenType.TYPEOF;break;case"d":if(u.cse5(e,"e","l","e","t","e"))return TokenType.DELETE;break;case"s":if(u.cse5(e,"w","i","t","c","h"))return TokenType.SWITCH;break;case"e":if(u.cse5(e,"x","p","o","r","t"))return TokenType.EXPORT;break;case"i":if(u.cse5(e,"m","p","o","r","t"))return TokenType.IMPORT;break}break;case 7:switch(e.charAt(0)){case"d":if(u.cse6(e,"e","f","a","u","l","t"))return TokenType.DEFAULT;break;case"f":if(u.cse6(e,"i","n","a","l","l","y"))return TokenType.FINALLY;break;case"e":if(u.cse6(e,"x","t","e","n","d","s"))return TokenType.EXTENDS;break}break;case 8:switch(e.charAt(0)){case"f":if(u.cse7(e,"u","n","c","t","i","o","n"))return TokenType.FUNCTION;break;case"c":if(u.cse7(e,"o","n","t","i","n","u","e"))return TokenType.CONTINUE;break;case"d":if(u.cse7(e,"e","b","u","g","g","e","r"))return TokenType.DEBUGGER;break}break;case 10:if(e==="instanceof")return TokenType.INSTANCEOF;break}return TokenType.IDENTIFIER}},{key:"skipSingleLineComment",value:function(e){for(this.index+=e;this.index<this.source.length;){var r=this.source.charCodeAt(this.index);if(this.index++,(0,_utils$1.isLineTerminator)(r)){this.hasLineTerminatorBeforeNext=!0,r===13&&this.source.charCodeAt(this.index)===10&&this.index++,this.lineStart=this.index,this.line++;return}}}},{key:"skipMultiLineComment",value:function(){this.index+=2;for(var e=this.source.length,r=!1;this.index<e;){var a=this.source.charCodeAt(this.index);if(a<128)switch(a){case 42:if(this.source.charAt(this.index+1)==="/")return this.index=this.index+2,r;this.index++;break;case 10:r=!0,this.hasLineTerminatorBeforeNext=!0,this.index++,this.lineStart=this.index,this.line++;break;case 13:r=!0,this.hasLineTerminatorBeforeNext=!0,this.source.charAt(this.index+1)===`
`&&this.index++,this.index++,this.lineStart=this.index,this.line++;break;default:this.index++}else a===8232||a===8233?(r=!0,this.hasLineTerminatorBeforeNext=!0,this.index++,this.lineStart=this.index,this.line++):this.index++}throw this.createILLEGAL()}},{key:"skipComment",value:function(){this.hasLineTerminatorBeforeNext=!1;for(var e=this.index===0,r=this.source.length;this.index<r;){var a=this.source.charCodeAt(this.index);if((0,_utils$1.isWhiteSpace)(a))this.index++;else if((0,_utils$1.isLineTerminator)(a))this.hasLineTerminatorBeforeNext=!0,this.index++,a===13&&this.source.charAt(this.index)===`
`&&this.index++,this.lineStart=this.index,this.line++,e=!0;else if(a===47){if(this.index+1>=r)break;if(a=this.source.charCodeAt(this.index+1),a===47)this.skipSingleLineComment(2),e=!0;else if(a===42)e=this.skipMultiLineComment()||e;else break}else if(!this.moduleIsTheGoalSymbol&&e&&a===45){if(this.index+2>=r)break;if(this.source.charAt(this.index+1)==="-"&&this.source.charAt(this.index+2)===">")this.skipSingleLineComment(3);else break}else if(!this.moduleIsTheGoalSymbol&&a===60)if(this.source.slice(this.index+1,this.index+4)==="!--")this.skipSingleLineComment(4),e=!0;else break;else break}}},{key:"scanHexEscape2",value:function(){if(this.index+2>this.source.length)return-1;var e=(0,_utils$1.getHexValue)(this.source.charAt(this.index));if(e===-1)return-1;var r=(0,_utils$1.getHexValue)(this.source.charAt(this.index+1));return r===-1?-1:(this.index+=2,e<<4|r)}},{key:"scanUnicode",value:function(){if(this.source.charAt(this.index)==="{"){for(var e=this.index+1,r=0,a=void 0;e<this.source.length;){a=this.source.charAt(e);var s=(0,_utils$1.getHexValue)(a);if(s===-1)break;if(r=r<<4|s,r>1114111)throw this.createILLEGAL();e++}if(a!=="}")throw this.createILLEGAL();if(e===this.index+1)throw++this.index,this.createILLEGAL();return this.index=e+1,r}if(this.index+4>this.source.length)return-1;var o=(0,_utils$1.getHexValue)(this.source.charAt(this.index));if(o===-1)return-1;var c=(0,_utils$1.getHexValue)(this.source.charAt(this.index+1));if(c===-1)return-1;var l=(0,_utils$1.getHexValue)(this.source.charAt(this.index+2));if(l===-1)return-1;var m=(0,_utils$1.getHexValue)(this.source.charAt(this.index+3));return m===-1?-1:(this.index+=4,o<<12|c<<8|l<<4|m)}},{key:"getEscapedIdentifier",value:function(){for(var e="",r=_utils$1.isIdentifierStart;this.index<this.source.length;){var a=this.source.charAt(this.index),s=a.charCodeAt(0),o=this.index;if(++this.index,a==="\\"){if(this.index>=this.source.length)throw this.createILLEGAL();if(this.source.charAt(this.index)!=="u")throw this.createILLEGAL();if(++this.index,s=this.scanUnicode(),s<0)throw this.createILLEGAL();a=fromCodePoint(s)}else if(s>=55296&&s<=56319){if(this.index>=this.source.length)throw this.createILLEGAL();var c=this.source.charCodeAt(this.index);if(++this.index,!(c>=56320&&c<=57343))throw this.createILLEGAL();s=decodeUtf16(s,c),a=fromCodePoint(s)}if(!r(s)){if(e.length<1)throw this.createILLEGAL();return this.index=o,e}r=_utils$1.isIdentifierPart,e+=a}return e}},{key:"getIdentifier",value:function(){for(var e=this.index,r=this.source.length,a=this.index,s=_utils$1.isIdentifierStart;a<r;){var o=this.source.charAt(a),c=o.charCodeAt(0);if(o==="\\"||c>=55296&&c<=56319)return this.index=e,this.getEscapedIdentifier();if(!s(c))return this.index=a,this.source.slice(e,a);++a,s=_utils$1.isIdentifierPart}return this.index=a,this.source.slice(e,a)}},{key:"scanIdentifier",value:function(){var e=this.getLocation(),r=this.index,a=this.source.charAt(this.index)==="\\"?this.getEscapedIdentifier():this.getIdentifier(),s=this.getSlice(r,e);s.text=a;var o=this.index-r!==a.length,c=this.getKeyword(a);return o&&c!==TokenType.IDENTIFIER&&(c=TokenType.ESCAPED_KEYWORD),{type:c,value:a,slice:s,escaped:o}}},{key:"getLocation",value:function(){return{line:this.startLine+1,column:this.startIndex-this.startLineStart,offset:this.startIndex}}},{key:"getLastTokenEndLocation",value:function(){return{line:this.lastLine+1,column:this.lastIndex-this.lastLineStart,offset:this.lastIndex}}},{key:"getSlice",value:function(e,r){return{text:this.source.slice(e,this.index),start:e,startLocation:r,end:this.index}}},{key:"scanPunctuatorHelper",value:function(){var e=this.source.charAt(this.index);switch(e){case".":{var r=this.source.charAt(this.index+1);if(r!==".")return TokenType.PERIOD;var a=this.source.charAt(this.index+2);return a!=="."?TokenType.PERIOD:TokenType.ELLIPSIS}case"(":return TokenType.LPAREN;case")":case";":case",":return ONE_CHAR_PUNCTUATOR[e.charCodeAt(0)];case"{":return TokenType.LBRACE;case"}":case"[":case"]":case":":case"?":case"~":return ONE_CHAR_PUNCTUATOR[e.charCodeAt(0)];default:if(this.index+1<this.source.length&&this.source.charAt(this.index+1)==="=")switch(e){case"=":return this.index+2<this.source.length&&this.source.charAt(this.index+2)==="="?TokenType.EQ_STRICT:TokenType.EQ;case"!":return this.index+2<this.source.length&&this.source.charAt(this.index+2)==="="?TokenType.NE_STRICT:TokenType.NE;case"|":return TokenType.ASSIGN_BIT_OR;case"+":return TokenType.ASSIGN_ADD;case"-":return TokenType.ASSIGN_SUB;case"*":return TokenType.ASSIGN_MUL;case"<":return TokenType.LTE;case">":return TokenType.GTE;case"/":return TokenType.ASSIGN_DIV;case"%":return TokenType.ASSIGN_MOD;case"^":return TokenType.ASSIGN_BIT_XOR;case"&":return TokenType.ASSIGN_BIT_AND}}if(this.index+1<this.source.length){var s=this.source.charAt(this.index+1);if(e===s){if(this.index+2<this.source.length){var o=this.source.charAt(this.index+2);if(e===">"&&o===">")return this.index+3<this.source.length&&this.source.charAt(this.index+3)==="="?TokenType.ASSIGN_SHR_UNSIGNED:TokenType.SHR_UNSIGNED;if(e==="<"&&o==="=")return TokenType.ASSIGN_SHL;if(e===">"&&o==="=")return TokenType.ASSIGN_SHR;if(e==="*"&&o==="=")return TokenType.ASSIGN_EXP}switch(e){case"*":return TokenType.EXP;case"+":return TokenType.INC;case"-":return TokenType.DEC;case"<":return TokenType.SHL;case">":return TokenType.SHR;case"&":return TokenType.AND;case"|":return TokenType.OR}}else if(e==="="&&s===">")return TokenType.ARROW}return ONE_CHAR_PUNCTUATOR[e.charCodeAt(0)]}},{key:"scanPunctuator",value:function(){var e=this.getLocation(),r=this.index,a=this.scanPunctuatorHelper();return this.index+=a.name.length,{type:a,value:a.name,slice:this.getSlice(r,e)}}},{key:"scanHexLiteral",value:function(e,r){for(var a=this.index;a<this.source.length;){var s=this.source.charAt(a),o=(0,_utils$1.getHexValue)(s);if(o===-1)break;a++}if(this.index===a)throw this.createILLEGAL();if(a<this.source.length&&(0,_utils$1.isIdentifierStart)(this.source.charCodeAt(a)))throw this.createILLEGAL();this.index=a;var c=this.getSlice(e,r);return{type:TokenType.NUMBER,value:parseInt(c.text.substr(2),16),slice:c}}},{key:"scanBinaryLiteral",value:function(e,r){for(var a=this.index-e;this.index<this.source.length;){var s=this.source.charAt(this.index);if(s!=="0"&&s!=="1")break;this.index++}if(this.index-e<=a)throw this.createILLEGAL();if(this.index<this.source.length&&((0,_utils$1.isIdentifierStart)(this.source.charCodeAt(this.index))||(0,_utils$1.isDecimalDigit)(this.source.charCodeAt(this.index))))throw this.createILLEGAL();return{type:TokenType.NUMBER,value:parseInt(this.getSlice(e,r).text.substr(a),2),slice:this.getSlice(e,r),octal:!1,noctal:!1}}},{key:"scanOctalLiteral",value:function(e,r){for(;this.index<this.source.length;){var a=this.source.charAt(this.index);if(a>="0"&&a<="7")this.index++;else{if((0,_utils$1.isIdentifierPart)(a.charCodeAt(0)))throw this.createILLEGAL();break}}if(this.index-e===2)throw this.createILLEGAL();return{type:TokenType.NUMBER,value:parseInt(this.getSlice(e,r).text.substr(2),8),slice:this.getSlice(e,r),octal:!1,noctal:!1}}},{key:"scanLegacyOctalLiteral",value:function(e,r){for(var a=!0;this.index<this.source.length;){var s=this.source.charAt(this.index);if(s>="0"&&s<="7")this.index++;else if(s==="8"||s==="9")a=!1,this.index++;else{if((0,_utils$1.isIdentifierPart)(s.charCodeAt(0)))throw this.createILLEGAL();break}}var o=this.getSlice(e,r);return a?{type:TokenType.NUMBER,slice:o,value:parseInt(o.text.substr(1),8),octal:!0,noctal:!a}:(this.eatDecimalLiteralSuffix(),{type:TokenType.NUMBER,slice:o,value:+o.text,octal:!0,noctal:!a})}},{key:"scanNumericLiteral",value:function(){var e=this.source.charAt(this.index),r=this.getLocation(),a=this.index;if(e==="0")if(this.index++,this.index<this.source.length){if(e=this.source.charAt(this.index),e==="x"||e==="X")return this.index++,this.scanHexLiteral(a,r);if(e==="b"||e==="B")return this.index++,this.scanBinaryLiteral(a,r);if(e==="o"||e==="O")return this.index++,this.scanOctalLiteral(a,r);if(e>="0"&&e<="9")return this.scanLegacyOctalLiteral(a,r)}else{var s=this.getSlice(a,r);return{type:TokenType.NUMBER,value:+s.text,slice:s,octal:!1,noctal:!1}}else if(e!==".")for(e=this.source.charAt(this.index);e>="0"&&e<="9";){if(this.index++,this.index===this.source.length){var o=this.getSlice(a,r);return{type:TokenType.NUMBER,value:+o.text,slice:o,octal:!1,noctal:!1}}e=this.source.charAt(this.index)}if(this.eatDecimalLiteralSuffix(),this.index!==this.source.length&&(0,_utils$1.isIdentifierStart)(this.source.charCodeAt(this.index)))throw this.createILLEGAL();var c=this.getSlice(a,r);return{type:TokenType.NUMBER,value:+c.text,slice:c,octal:!1,noctal:!1}}},{key:"eatDecimalLiteralSuffix",value:function(){var e=this.source.charAt(this.index);if(e==="."){if(this.index++,this.index===this.source.length)return;for(e=this.source.charAt(this.index);e>="0"&&e<="9";){if(this.index++,this.index===this.source.length)return;e=this.source.charAt(this.index)}}if(e==="e"||e==="E"){if(this.index++,this.index===this.source.length)throw this.createILLEGAL();if(e=this.source.charAt(this.index),e==="+"||e==="-"){if(this.index++,this.index===this.source.length)throw this.createILLEGAL();e=this.source.charAt(this.index)}if(e>="0"&&e<="9")for(;e>="0"&&e<="9"&&(this.index++,this.index!==this.source.length);)e=this.source.charAt(this.index);else throw this.createILLEGAL()}}},{key:"scanStringEscape",value:function(e,r){if(this.index++,this.index===this.source.length)throw this.createILLEGAL();var a=this.source.charAt(this.index);if((0,_utils$1.isLineTerminator)(a.charCodeAt(0)))this.index++,a==="\r"&&this.source.charAt(this.index)===`
`&&this.index++,this.lineStart=this.index,this.line++;else switch(a){case"n":e+=`
`,this.index++;break;case"r":e+="\r",this.index++;break;case"t":e+="	",this.index++;break;case"u":case"x":{var s=void 0;if(this.index++,this.index>=this.source.length)throw this.createILLEGAL();if(s=a==="u"?this.scanUnicode():this.scanHexEscape2(),s<0)throw this.createILLEGAL();e+=fromCodePoint(s);break}case"b":e+="\b",this.index++;break;case"f":e+="\f",this.index++;break;case"v":e+="\v",this.index++;break;default:if(a>="0"&&a<="7"){var o=this.index,c=1;a>="0"&&a<="3"&&(c=0);for(var l=0;c<3&&a>="0"&&a<="7";){if(this.index++,(c>0||a!=="0")&&(r=this.source.slice(o,this.index)),l*=8,l+=a-"0",c++,this.index===this.source.length)throw this.createILLEGAL();a=this.source.charAt(this.index)}l===0&&c===1&&(a==="8"||a==="9")&&(r=this.source.slice(o,this.index+1)),e+=String.fromCharCode(l)}else{if(a==="8"||a==="9")throw this.createILLEGAL();e+=a,this.index++}}return[e,r]}},{key:"scanStringLiteral",value:function(){var e="",r=this.source.charAt(this.index),a=this.getLocation(),s=this.index;this.index++;for(var o=null;this.index<this.source.length;){var c=this.source.charAt(this.index);if(c===r)return this.index++,{type:TokenType.STRING,slice:this.getSlice(s,a),str:e,octal:o};if(c==="\\"){var l=this.scanStringEscape(e,o),m=_slicedToArray(l,2);e=m[0],o=m[1]}else{if((0,_utils$1.isLineTerminator)(c.charCodeAt(0)))throw this.createILLEGAL();e+=c,this.index++}}throw this.createILLEGAL()}},{key:"scanTemplateElement",value:function(){var e=this.getLocation(),r=this.index;for(this.index++;this.index<this.source.length;){var a=this.source.charCodeAt(this.index);switch(a){case 96:return this.index++,{type:TokenType.TEMPLATE,tail:!0,slice:this.getSlice(r,e)};case 36:{if(this.source.charCodeAt(this.index+1)===123)return this.index+=2,{type:TokenType.TEMPLATE,tail:!1,slice:this.getSlice(r,e)};this.index++;break}case 92:{var s=this.scanStringEscape("",null)[1];if(s!=null)throw this.createError(_errors$2.ErrorMessages.NO_OCTALS_IN_TEMPLATES);break}case 13:{this.line++,this.index++,this.index<this.source.length&&this.source.charAt(this.index)===`
`&&this.index++,this.lineStart=this.index;break}case 10:case 8232:case 8233:{this.line++,this.index++,this.lineStart=this.index;break}default:this.index++}}throw this.createILLEGAL()}},{key:"scanRegExp",value:function(e){for(var r=this.getLocation(),a=this.index,s=!1,o=!1;this.index<this.source.length;){var c=this.source.charAt(this.index);if(c==="\\"){if(e+=c,this.index++,c=this.source.charAt(this.index),(0,_utils$1.isLineTerminator)(c.charCodeAt(0)))throw this.createError(_errors$2.ErrorMessages.UNTERMINATED_REGEXP);e+=c,this.index++}else{if((0,_utils$1.isLineTerminator)(c.charCodeAt(0)))throw this.createError(_errors$2.ErrorMessages.UNTERMINATED_REGEXP);if(o)c==="]"&&(o=!1);else if(c==="/"){s=!0,e+=c,this.index++;break}else c==="["&&(o=!0);e+=c,this.index++}}if(!s)throw this.createError(_errors$2.ErrorMessages.UNTERMINATED_REGEXP);for(;this.index<this.source.length;){var l=this.source.charAt(this.index);if(l==="\\")throw this.createError(_errors$2.ErrorMessages.INVALID_REGEXP_FLAGS);if(!(0,_utils$1.isIdentifierPart)(l.charCodeAt(0)))break;this.index++,e+=l}return{type:TokenType.REGEXP,value:e,slice:this.getSlice(a,r)}}},{key:"advance",value:function(){var e=this.getLocation();if(this.lastIndex=this.index,this.lastLine=this.line,this.lastLineStart=this.lineStart,this.skipComment(),this.startIndex=this.index,this.startLine=this.line,this.startLineStart=this.lineStart,this.lastIndex===0&&(this.lastIndex=this.index,this.lastLine=this.line,this.lastLineStart=this.lineStart),this.index>=this.source.length)return{type:TokenType.EOS,slice:this.getSlice(this.index,e)};var r=this.source.charCodeAt(this.index);if(r<128){if(PUNCTUATOR_START[r])return this.scanPunctuator();if((0,_utils$1.isIdentifierStart)(r)||r===92)return this.scanIdentifier();if(r===46)return this.index+1<this.source.length&&(0,_utils$1.isDecimalDigit)(this.source.charCodeAt(this.index+1))?this.scanNumericLiteral():this.scanPunctuator();if(r===39||r===34)return this.scanStringLiteral();if(r===96)return this.scanTemplateElement();if(r>=48&&r<=57)return this.scanNumericLiteral();throw this.createILLEGAL()}else{if((0,_utils$1.isIdentifierStart)(r)||r>=55296&&r<=56319)return this.scanIdentifier();throw this.createILLEGAL()}}},{key:"eof",value:function(){return this.lookahead.type===TokenType.EOS}},{key:"lex",value:function(){var e=this.lookahead;return this.lookahead=this.advance(),this.tokenIndex++,e}}],[{key:"cse2",value:function(e,r,a){return e.charAt(1)===r&&e.charAt(2)===a}},{key:"cse3",value:function(e,r,a,s){return e.charAt(1)===r&&e.charAt(2)===a&&e.charAt(3)===s}},{key:"cse4",value:function(e,r,a,s,o){return e.charAt(1)===r&&e.charAt(2)===a&&e.charAt(3)===s&&e.charAt(4)===o}},{key:"cse5",value:function(e,r,a,s,o,c){return e.charAt(1)===r&&e.charAt(2)===a&&e.charAt(3)===s&&e.charAt(4)===o&&e.charAt(5)===c}},{key:"cse6",value:function(e,r,a,s,o,c,l){return e.charAt(1)===r&&e.charAt(2)===a&&e.charAt(3)===s&&e.charAt(4)===o&&e.charAt(5)===c&&e.charAt(6)===l}},{key:"cse7",value:function(e,r,a,s,o,c,l,m){return e.charAt(1)===r&&e.charAt(2)===a&&e.charAt(3)===s&&e.charAt(4)===o&&e.charAt(5)===c&&e.charAt(6)===l&&e.charAt(7)===m}}]),u}(),_default$c=tokenizer$1.default=Tokenizer;const tokenizer=_mergeNamespaces({__proto__:null,get JsError(){return JsError_1},get TokenType(){return TokenType_1},get TokenClass(){return TokenClass_1},default:_default$c},[tokenizer$1]),require$$0$9=getAugmentedNamespace(tokenizer);var parser$1={},dist$a={},mappings=new Map([["General_Category",new Map([["C","Other"],["Cc","Control"],["cntrl","Control"],["Cf","Format"],["Cn","Unassigned"],["Co","Private_Use"],["Cs","Surrogate"],["L","Letter"],["LC","Cased_Letter"],["Ll","Lowercase_Letter"],["Lm","Modifier_Letter"],["Lo","Other_Letter"],["Lt","Titlecase_Letter"],["Lu","Uppercase_Letter"],["M","Mark"],["Combining_Mark","Mark"],["Mc","Spacing_Mark"],["Me","Enclosing_Mark"],["Mn","Nonspacing_Mark"],["N","Number"],["Nd","Decimal_Number"],["digit","Decimal_Number"],["Nl","Letter_Number"],["No","Other_Number"],["P","Punctuation"],["punct","Punctuation"],["Pc","Connector_Punctuation"],["Pd","Dash_Punctuation"],["Pe","Close_Punctuation"],["Pf","Final_Punctuation"],["Pi","Initial_Punctuation"],["Po","Other_Punctuation"],["Ps","Open_Punctuation"],["S","Symbol"],["Sc","Currency_Symbol"],["Sk","Modifier_Symbol"],["Sm","Math_Symbol"],["So","Other_Symbol"],["Z","Separator"],["Zl","Line_Separator"],["Zp","Paragraph_Separator"],["Zs","Space_Separator"],["Other","Other"],["Control","Control"],["Format","Format"],["Unassigned","Unassigned"],["Private_Use","Private_Use"],["Surrogate","Surrogate"],["Letter","Letter"],["Cased_Letter","Cased_Letter"],["Lowercase_Letter","Lowercase_Letter"],["Modifier_Letter","Modifier_Letter"],["Other_Letter","Other_Letter"],["Titlecase_Letter","Titlecase_Letter"],["Uppercase_Letter","Uppercase_Letter"],["Mark","Mark"],["Spacing_Mark","Spacing_Mark"],["Enclosing_Mark","Enclosing_Mark"],["Nonspacing_Mark","Nonspacing_Mark"],["Number","Number"],["Decimal_Number","Decimal_Number"],["Letter_Number","Letter_Number"],["Other_Number","Other_Number"],["Punctuation","Punctuation"],["Connector_Punctuation","Connector_Punctuation"],["Dash_Punctuation","Dash_Punctuation"],["Close_Punctuation","Close_Punctuation"],["Final_Punctuation","Final_Punctuation"],["Initial_Punctuation","Initial_Punctuation"],["Other_Punctuation","Other_Punctuation"],["Open_Punctuation","Open_Punctuation"],["Symbol","Symbol"],["Currency_Symbol","Currency_Symbol"],["Modifier_Symbol","Modifier_Symbol"],["Math_Symbol","Math_Symbol"],["Other_Symbol","Other_Symbol"],["Separator","Separator"],["Line_Separator","Line_Separator"],["Paragraph_Separator","Paragraph_Separator"],["Space_Separator","Space_Separator"]])],["Script",new Map([["Adlm","Adlam"],["Aghb","Caucasian_Albanian"],["Ahom","Ahom"],["Arab","Arabic"],["Armi","Imperial_Aramaic"],["Armn","Armenian"],["Avst","Avestan"],["Bali","Balinese"],["Bamu","Bamum"],["Bass","Bassa_Vah"],["Batk","Batak"],["Beng","Bengali"],["Bhks","Bhaiksuki"],["Bopo","Bopomofo"],["Brah","Brahmi"],["Brai","Braille"],["Bugi","Buginese"],["Buhd","Buhid"],["Cakm","Chakma"],["Cans","Canadian_Aboriginal"],["Cari","Carian"],["Cham","Cham"],["Cher","Cherokee"],["Copt","Coptic"],["Qaac","Coptic"],["Cprt","Cypriot"],["Cyrl","Cyrillic"],["Deva","Devanagari"],["Dogr","Dogra"],["Dsrt","Deseret"],["Dupl","Duployan"],["Egyp","Egyptian_Hieroglyphs"],["Elba","Elbasan"],["Ethi","Ethiopic"],["Geor","Georgian"],["Glag","Glagolitic"],["Gong","Gunjala_Gondi"],["Gonm","Masaram_Gondi"],["Goth","Gothic"],["Gran","Grantha"],["Grek","Greek"],["Gujr","Gujarati"],["Guru","Gurmukhi"],["Hang","Hangul"],["Hani","Han"],["Hano","Hanunoo"],["Hatr","Hatran"],["Hebr","Hebrew"],["Hira","Hiragana"],["Hluw","Anatolian_Hieroglyphs"],["Hmng","Pahawh_Hmong"],["Hrkt","Katakana_Or_Hiragana"],["Hung","Old_Hungarian"],["Ital","Old_Italic"],["Java","Javanese"],["Kali","Kayah_Li"],["Kana","Katakana"],["Khar","Kharoshthi"],["Khmr","Khmer"],["Khoj","Khojki"],["Knda","Kannada"],["Kthi","Kaithi"],["Lana","Tai_Tham"],["Laoo","Lao"],["Latn","Latin"],["Lepc","Lepcha"],["Limb","Limbu"],["Lina","Linear_A"],["Linb","Linear_B"],["Lisu","Lisu"],["Lyci","Lycian"],["Lydi","Lydian"],["Mahj","Mahajani"],["Maka","Makasar"],["Mand","Mandaic"],["Mani","Manichaean"],["Marc","Marchen"],["Medf","Medefaidrin"],["Mend","Mende_Kikakui"],["Merc","Meroitic_Cursive"],["Mero","Meroitic_Hieroglyphs"],["Mlym","Malayalam"],["Modi","Modi"],["Mong","Mongolian"],["Mroo","Mro"],["Mtei","Meetei_Mayek"],["Mult","Multani"],["Mymr","Myanmar"],["Narb","Old_North_Arabian"],["Nbat","Nabataean"],["Newa","Newa"],["Nkoo","Nko"],["Nshu","Nushu"],["Ogam","Ogham"],["Olck","Ol_Chiki"],["Orkh","Old_Turkic"],["Orya","Oriya"],["Osge","Osage"],["Osma","Osmanya"],["Palm","Palmyrene"],["Pauc","Pau_Cin_Hau"],["Perm","Old_Permic"],["Phag","Phags_Pa"],["Phli","Inscriptional_Pahlavi"],["Phlp","Psalter_Pahlavi"],["Phnx","Phoenician"],["Plrd","Miao"],["Prti","Inscriptional_Parthian"],["Rjng","Rejang"],["Rohg","Hanifi_Rohingya"],["Runr","Runic"],["Samr","Samaritan"],["Sarb","Old_South_Arabian"],["Saur","Saurashtra"],["Sgnw","SignWriting"],["Shaw","Shavian"],["Shrd","Sharada"],["Sidd","Siddham"],["Sind","Khudawadi"],["Sinh","Sinhala"],["Sogd","Sogdian"],["Sogo","Old_Sogdian"],["Sora","Sora_Sompeng"],["Soyo","Soyombo"],["Sund","Sundanese"],["Sylo","Syloti_Nagri"],["Syrc","Syriac"],["Tagb","Tagbanwa"],["Takr","Takri"],["Tale","Tai_Le"],["Talu","New_Tai_Lue"],["Taml","Tamil"],["Tang","Tangut"],["Tavt","Tai_Viet"],["Telu","Telugu"],["Tfng","Tifinagh"],["Tglg","Tagalog"],["Thaa","Thaana"],["Thai","Thai"],["Tibt","Tibetan"],["Tirh","Tirhuta"],["Ugar","Ugaritic"],["Vaii","Vai"],["Wara","Warang_Citi"],["Xpeo","Old_Persian"],["Xsux","Cuneiform"],["Yiii","Yi"],["Zanb","Zanabazar_Square"],["Zinh","Inherited"],["Qaai","Inherited"],["Zyyy","Common"],["Zzzz","Unknown"],["Adlam","Adlam"],["Caucasian_Albanian","Caucasian_Albanian"],["Arabic","Arabic"],["Imperial_Aramaic","Imperial_Aramaic"],["Armenian","Armenian"],["Avestan","Avestan"],["Balinese","Balinese"],["Bamum","Bamum"],["Bassa_Vah","Bassa_Vah"],["Batak","Batak"],["Bengali","Bengali"],["Bhaiksuki","Bhaiksuki"],["Bopomofo","Bopomofo"],["Brahmi","Brahmi"],["Braille","Braille"],["Buginese","Buginese"],["Buhid","Buhid"],["Chakma","Chakma"],["Canadian_Aboriginal","Canadian_Aboriginal"],["Carian","Carian"],["Cherokee","Cherokee"],["Coptic","Coptic"],["Cypriot","Cypriot"],["Cyrillic","Cyrillic"],["Devanagari","Devanagari"],["Dogra","Dogra"],["Deseret","Deseret"],["Duployan","Duployan"],["Egyptian_Hieroglyphs","Egyptian_Hieroglyphs"],["Elbasan","Elbasan"],["Ethiopic","Ethiopic"],["Georgian","Georgian"],["Glagolitic","Glagolitic"],["Gunjala_Gondi","Gunjala_Gondi"],["Masaram_Gondi","Masaram_Gondi"],["Gothic","Gothic"],["Grantha","Grantha"],["Greek","Greek"],["Gujarati","Gujarati"],["Gurmukhi","Gurmukhi"],["Hangul","Hangul"],["Han","Han"],["Hanunoo","Hanunoo"],["Hatran","Hatran"],["Hebrew","Hebrew"],["Hiragana","Hiragana"],["Anatolian_Hieroglyphs","Anatolian_Hieroglyphs"],["Pahawh_Hmong","Pahawh_Hmong"],["Katakana_Or_Hiragana","Katakana_Or_Hiragana"],["Old_Hungarian","Old_Hungarian"],["Old_Italic","Old_Italic"],["Javanese","Javanese"],["Kayah_Li","Kayah_Li"],["Katakana","Katakana"],["Kharoshthi","Kharoshthi"],["Khmer","Khmer"],["Khojki","Khojki"],["Kannada","Kannada"],["Kaithi","Kaithi"],["Tai_Tham","Tai_Tham"],["Lao","Lao"],["Latin","Latin"],["Lepcha","Lepcha"],["Limbu","Limbu"],["Linear_A","Linear_A"],["Linear_B","Linear_B"],["Lycian","Lycian"],["Lydian","Lydian"],["Mahajani","Mahajani"],["Makasar","Makasar"],["Mandaic","Mandaic"],["Manichaean","Manichaean"],["Marchen","Marchen"],["Medefaidrin","Medefaidrin"],["Mende_Kikakui","Mende_Kikakui"],["Meroitic_Cursive","Meroitic_Cursive"],["Meroitic_Hieroglyphs","Meroitic_Hieroglyphs"],["Malayalam","Malayalam"],["Mongolian","Mongolian"],["Mro","Mro"],["Meetei_Mayek","Meetei_Mayek"],["Multani","Multani"],["Myanmar","Myanmar"],["Old_North_Arabian","Old_North_Arabian"],["Nabataean","Nabataean"],["Nko","Nko"],["Nushu","Nushu"],["Ogham","Ogham"],["Ol_Chiki","Ol_Chiki"],["Old_Turkic","Old_Turkic"],["Oriya","Oriya"],["Osage","Osage"],["Osmanya","Osmanya"],["Palmyrene","Palmyrene"],["Pau_Cin_Hau","Pau_Cin_Hau"],["Old_Permic","Old_Permic"],["Phags_Pa","Phags_Pa"],["Inscriptional_Pahlavi","Inscriptional_Pahlavi"],["Psalter_Pahlavi","Psalter_Pahlavi"],["Phoenician","Phoenician"],["Miao","Miao"],["Inscriptional_Parthian","Inscriptional_Parthian"],["Rejang","Rejang"],["Hanifi_Rohingya","Hanifi_Rohingya"],["Runic","Runic"],["Samaritan","Samaritan"],["Old_South_Arabian","Old_South_Arabian"],["Saurashtra","Saurashtra"],["SignWriting","SignWriting"],["Shavian","Shavian"],["Sharada","Sharada"],["Siddham","Siddham"],["Khudawadi","Khudawadi"],["Sinhala","Sinhala"],["Sogdian","Sogdian"],["Old_Sogdian","Old_Sogdian"],["Sora_Sompeng","Sora_Sompeng"],["Soyombo","Soyombo"],["Sundanese","Sundanese"],["Syloti_Nagri","Syloti_Nagri"],["Syriac","Syriac"],["Tagbanwa","Tagbanwa"],["Takri","Takri"],["Tai_Le","Tai_Le"],["New_Tai_Lue","New_Tai_Lue"],["Tamil","Tamil"],["Tangut","Tangut"],["Tai_Viet","Tai_Viet"],["Telugu","Telugu"],["Tifinagh","Tifinagh"],["Tagalog","Tagalog"],["Thaana","Thaana"],["Tibetan","Tibetan"],["Tirhuta","Tirhuta"],["Ugaritic","Ugaritic"],["Vai","Vai"],["Warang_Citi","Warang_Citi"],["Old_Persian","Old_Persian"],["Cuneiform","Cuneiform"],["Yi","Yi"],["Zanabazar_Square","Zanabazar_Square"],["Inherited","Inherited"],["Common","Common"],["Unknown","Unknown"]])],["Script_Extensions",new Map([["Adlm","Adlam"],["Aghb","Caucasian_Albanian"],["Ahom","Ahom"],["Arab","Arabic"],["Armi","Imperial_Aramaic"],["Armn","Armenian"],["Avst","Avestan"],["Bali","Balinese"],["Bamu","Bamum"],["Bass","Bassa_Vah"],["Batk","Batak"],["Beng","Bengali"],["Bhks","Bhaiksuki"],["Bopo","Bopomofo"],["Brah","Brahmi"],["Brai","Braille"],["Bugi","Buginese"],["Buhd","Buhid"],["Cakm","Chakma"],["Cans","Canadian_Aboriginal"],["Cari","Carian"],["Cham","Cham"],["Cher","Cherokee"],["Copt","Coptic"],["Qaac","Coptic"],["Cprt","Cypriot"],["Cyrl","Cyrillic"],["Deva","Devanagari"],["Dogr","Dogra"],["Dsrt","Deseret"],["Dupl","Duployan"],["Egyp","Egyptian_Hieroglyphs"],["Elba","Elbasan"],["Ethi","Ethiopic"],["Geor","Georgian"],["Glag","Glagolitic"],["Gong","Gunjala_Gondi"],["Gonm","Masaram_Gondi"],["Goth","Gothic"],["Gran","Grantha"],["Grek","Greek"],["Gujr","Gujarati"],["Guru","Gurmukhi"],["Hang","Hangul"],["Hani","Han"],["Hano","Hanunoo"],["Hatr","Hatran"],["Hebr","Hebrew"],["Hira","Hiragana"],["Hluw","Anatolian_Hieroglyphs"],["Hmng","Pahawh_Hmong"],["Hrkt","Katakana_Or_Hiragana"],["Hung","Old_Hungarian"],["Ital","Old_Italic"],["Java","Javanese"],["Kali","Kayah_Li"],["Kana","Katakana"],["Khar","Kharoshthi"],["Khmr","Khmer"],["Khoj","Khojki"],["Knda","Kannada"],["Kthi","Kaithi"],["Lana","Tai_Tham"],["Laoo","Lao"],["Latn","Latin"],["Lepc","Lepcha"],["Limb","Limbu"],["Lina","Linear_A"],["Linb","Linear_B"],["Lisu","Lisu"],["Lyci","Lycian"],["Lydi","Lydian"],["Mahj","Mahajani"],["Maka","Makasar"],["Mand","Mandaic"],["Mani","Manichaean"],["Marc","Marchen"],["Medf","Medefaidrin"],["Mend","Mende_Kikakui"],["Merc","Meroitic_Cursive"],["Mero","Meroitic_Hieroglyphs"],["Mlym","Malayalam"],["Modi","Modi"],["Mong","Mongolian"],["Mroo","Mro"],["Mtei","Meetei_Mayek"],["Mult","Multani"],["Mymr","Myanmar"],["Narb","Old_North_Arabian"],["Nbat","Nabataean"],["Newa","Newa"],["Nkoo","Nko"],["Nshu","Nushu"],["Ogam","Ogham"],["Olck","Ol_Chiki"],["Orkh","Old_Turkic"],["Orya","Oriya"],["Osge","Osage"],["Osma","Osmanya"],["Palm","Palmyrene"],["Pauc","Pau_Cin_Hau"],["Perm","Old_Permic"],["Phag","Phags_Pa"],["Phli","Inscriptional_Pahlavi"],["Phlp","Psalter_Pahlavi"],["Phnx","Phoenician"],["Plrd","Miao"],["Prti","Inscriptional_Parthian"],["Rjng","Rejang"],["Rohg","Hanifi_Rohingya"],["Runr","Runic"],["Samr","Samaritan"],["Sarb","Old_South_Arabian"],["Saur","Saurashtra"],["Sgnw","SignWriting"],["Shaw","Shavian"],["Shrd","Sharada"],["Sidd","Siddham"],["Sind","Khudawadi"],["Sinh","Sinhala"],["Sogd","Sogdian"],["Sogo","Old_Sogdian"],["Sora","Sora_Sompeng"],["Soyo","Soyombo"],["Sund","Sundanese"],["Sylo","Syloti_Nagri"],["Syrc","Syriac"],["Tagb","Tagbanwa"],["Takr","Takri"],["Tale","Tai_Le"],["Talu","New_Tai_Lue"],["Taml","Tamil"],["Tang","Tangut"],["Tavt","Tai_Viet"],["Telu","Telugu"],["Tfng","Tifinagh"],["Tglg","Tagalog"],["Thaa","Thaana"],["Thai","Thai"],["Tibt","Tibetan"],["Tirh","Tirhuta"],["Ugar","Ugaritic"],["Vaii","Vai"],["Wara","Warang_Citi"],["Xpeo","Old_Persian"],["Xsux","Cuneiform"],["Yiii","Yi"],["Zanb","Zanabazar_Square"],["Zinh","Inherited"],["Qaai","Inherited"],["Zyyy","Common"],["Zzzz","Unknown"],["Adlam","Adlam"],["Caucasian_Albanian","Caucasian_Albanian"],["Arabic","Arabic"],["Imperial_Aramaic","Imperial_Aramaic"],["Armenian","Armenian"],["Avestan","Avestan"],["Balinese","Balinese"],["Bamum","Bamum"],["Bassa_Vah","Bassa_Vah"],["Batak","Batak"],["Bengali","Bengali"],["Bhaiksuki","Bhaiksuki"],["Bopomofo","Bopomofo"],["Brahmi","Brahmi"],["Braille","Braille"],["Buginese","Buginese"],["Buhid","Buhid"],["Chakma","Chakma"],["Canadian_Aboriginal","Canadian_Aboriginal"],["Carian","Carian"],["Cherokee","Cherokee"],["Coptic","Coptic"],["Cypriot","Cypriot"],["Cyrillic","Cyrillic"],["Devanagari","Devanagari"],["Dogra","Dogra"],["Deseret","Deseret"],["Duployan","Duployan"],["Egyptian_Hieroglyphs","Egyptian_Hieroglyphs"],["Elbasan","Elbasan"],["Ethiopic","Ethiopic"],["Georgian","Georgian"],["Glagolitic","Glagolitic"],["Gunjala_Gondi","Gunjala_Gondi"],["Masaram_Gondi","Masaram_Gondi"],["Gothic","Gothic"],["Grantha","Grantha"],["Greek","Greek"],["Gujarati","Gujarati"],["Gurmukhi","Gurmukhi"],["Hangul","Hangul"],["Han","Han"],["Hanunoo","Hanunoo"],["Hatran","Hatran"],["Hebrew","Hebrew"],["Hiragana","Hiragana"],["Anatolian_Hieroglyphs","Anatolian_Hieroglyphs"],["Pahawh_Hmong","Pahawh_Hmong"],["Katakana_Or_Hiragana","Katakana_Or_Hiragana"],["Old_Hungarian","Old_Hungarian"],["Old_Italic","Old_Italic"],["Javanese","Javanese"],["Kayah_Li","Kayah_Li"],["Katakana","Katakana"],["Kharoshthi","Kharoshthi"],["Khmer","Khmer"],["Khojki","Khojki"],["Kannada","Kannada"],["Kaithi","Kaithi"],["Tai_Tham","Tai_Tham"],["Lao","Lao"],["Latin","Latin"],["Lepcha","Lepcha"],["Limbu","Limbu"],["Linear_A","Linear_A"],["Linear_B","Linear_B"],["Lycian","Lycian"],["Lydian","Lydian"],["Mahajani","Mahajani"],["Makasar","Makasar"],["Mandaic","Mandaic"],["Manichaean","Manichaean"],["Marchen","Marchen"],["Medefaidrin","Medefaidrin"],["Mende_Kikakui","Mende_Kikakui"],["Meroitic_Cursive","Meroitic_Cursive"],["Meroitic_Hieroglyphs","Meroitic_Hieroglyphs"],["Malayalam","Malayalam"],["Mongolian","Mongolian"],["Mro","Mro"],["Meetei_Mayek","Meetei_Mayek"],["Multani","Multani"],["Myanmar","Myanmar"],["Old_North_Arabian","Old_North_Arabian"],["Nabataean","Nabataean"],["Nko","Nko"],["Nushu","Nushu"],["Ogham","Ogham"],["Ol_Chiki","Ol_Chiki"],["Old_Turkic","Old_Turkic"],["Oriya","Oriya"],["Osage","Osage"],["Osmanya","Osmanya"],["Palmyrene","Palmyrene"],["Pau_Cin_Hau","Pau_Cin_Hau"],["Old_Permic","Old_Permic"],["Phags_Pa","Phags_Pa"],["Inscriptional_Pahlavi","Inscriptional_Pahlavi"],["Psalter_Pahlavi","Psalter_Pahlavi"],["Phoenician","Phoenician"],["Miao","Miao"],["Inscriptional_Parthian","Inscriptional_Parthian"],["Rejang","Rejang"],["Hanifi_Rohingya","Hanifi_Rohingya"],["Runic","Runic"],["Samaritan","Samaritan"],["Old_South_Arabian","Old_South_Arabian"],["Saurashtra","Saurashtra"],["SignWriting","SignWriting"],["Shavian","Shavian"],["Sharada","Sharada"],["Siddham","Siddham"],["Khudawadi","Khudawadi"],["Sinhala","Sinhala"],["Sogdian","Sogdian"],["Old_Sogdian","Old_Sogdian"],["Sora_Sompeng","Sora_Sompeng"],["Soyombo","Soyombo"],["Sundanese","Sundanese"],["Syloti_Nagri","Syloti_Nagri"],["Syriac","Syriac"],["Tagbanwa","Tagbanwa"],["Takri","Takri"],["Tai_Le","Tai_Le"],["New_Tai_Lue","New_Tai_Lue"],["Tamil","Tamil"],["Tangut","Tangut"],["Tai_Viet","Tai_Viet"],["Telugu","Telugu"],["Tifinagh","Tifinagh"],["Tagalog","Tagalog"],["Thaana","Thaana"],["Tibetan","Tibetan"],["Tirhuta","Tirhuta"],["Ugaritic","Ugaritic"],["Vai","Vai"],["Warang_Citi","Warang_Citi"],["Old_Persian","Old_Persian"],["Cuneiform","Cuneiform"],["Yi","Yi"],["Zanabazar_Square","Zanabazar_Square"],["Inherited","Inherited"],["Common","Common"],["Unknown","Unknown"]])]]);const mappings$1=_mergeNamespaces({__proto__:null,default:mappings},[mappings]),require$$1$6=getAugmentedNamespace(mappings$1),propertyToValueAliases=require$$1$6,matchPropertyValue=function(u,n){const e=propertyToValueAliases.get(u);if(!e)throw new Error(`Unknown property \`${u}\`.`);const r=e.get(n);if(r)return r;throw new Error(`Unknown value \`${n}\` for property \`${u}\`.`)};var unicodeMatchPropertyValueEcmascript=matchPropertyValue;const unicodeMatchPropertyValueEcmascript$1=_mergeNamespaces({__proto__:null,default:unicodeMatchPropertyValueEcmascript},[unicodeMatchPropertyValueEcmascript]),require$$0$8=getAugmentedNamespace(unicodeMatchPropertyValueEcmascript$1);var unicodeCanonicalPropertyNamesEcmascript=new Set(["General_Category","Script","Script_Extensions","Alphabetic","Any","ASCII","ASCII_Hex_Digit","Assigned","Bidi_Control","Bidi_Mirrored","Case_Ignorable","Cased","Changes_When_Casefolded","Changes_When_Casemapped","Changes_When_Lowercased","Changes_When_NFKC_Casefolded","Changes_When_Titlecased","Changes_When_Uppercased","Dash","Default_Ignorable_Code_Point","Deprecated","Diacritic","Emoji","Emoji_Component","Emoji_Modifier","Emoji_Modifier_Base","Emoji_Presentation","Extended_Pictographic","Extender","Grapheme_Base","Grapheme_Extend","Hex_Digit","ID_Continue","ID_Start","Ideographic","IDS_Binary_Operator","IDS_Trinary_Operator","Join_Control","Logical_Order_Exception","Lowercase","Math","Noncharacter_Code_Point","Pattern_Syntax","Pattern_White_Space","Quotation_Mark","Radical","Regional_Indicator","Sentence_Terminal","Soft_Dotted","Terminal_Punctuation","Unified_Ideograph","Uppercase","Variation_Selector","White_Space","XID_Continue","XID_Start"]);const unicodeCanonicalPropertyNamesEcmascript$1=_mergeNamespaces({__proto__:null,default:unicodeCanonicalPropertyNamesEcmascript},[unicodeCanonicalPropertyNamesEcmascript]),require$$0$7=getAugmentedNamespace(unicodeCanonicalPropertyNamesEcmascript$1);var unicodePropertyAliasesEcmascript=new Map([["scx","Script_Extensions"],["sc","Script"],["gc","General_Category"],["AHex","ASCII_Hex_Digit"],["Alpha","Alphabetic"],["Bidi_C","Bidi_Control"],["Bidi_M","Bidi_Mirrored"],["Cased","Cased"],["CI","Case_Ignorable"],["CWCF","Changes_When_Casefolded"],["CWCM","Changes_When_Casemapped"],["CWKCF","Changes_When_NFKC_Casefolded"],["CWL","Changes_When_Lowercased"],["CWT","Changes_When_Titlecased"],["CWU","Changes_When_Uppercased"],["Dash","Dash"],["Dep","Deprecated"],["DI","Default_Ignorable_Code_Point"],["Dia","Diacritic"],["Ext","Extender"],["Gr_Base","Grapheme_Base"],["Gr_Ext","Grapheme_Extend"],["Hex","Hex_Digit"],["IDC","ID_Continue"],["Ideo","Ideographic"],["IDS","ID_Start"],["IDSB","IDS_Binary_Operator"],["IDST","IDS_Trinary_Operator"],["Join_C","Join_Control"],["LOE","Logical_Order_Exception"],["Lower","Lowercase"],["Math","Math"],["NChar","Noncharacter_Code_Point"],["Pat_Syn","Pattern_Syntax"],["Pat_WS","Pattern_White_Space"],["QMark","Quotation_Mark"],["Radical","Radical"],["RI","Regional_Indicator"],["SD","Soft_Dotted"],["STerm","Sentence_Terminal"],["Term","Terminal_Punctuation"],["UIdeo","Unified_Ideograph"],["Upper","Uppercase"],["VS","Variation_Selector"],["WSpace","White_Space"],["space","White_Space"],["XIDC","XID_Continue"],["XIDS","XID_Start"]]);const unicodePropertyAliasesEcmascript$1=_mergeNamespaces({__proto__:null,default:unicodePropertyAliasesEcmascript},[unicodePropertyAliasesEcmascript]),require$$3$4=getAugmentedNamespace(unicodePropertyAliasesEcmascript$1),canonicalProperties=require$$0$7,propertyAliases=require$$3$4,matchProperty=function(u){if(canonicalProperties.has(u))return u;if(propertyAliases.has(u))return propertyAliases.get(u);throw new Error(`Unknown property: ${u}`)};var unicodeMatchPropertyEcmascript=matchProperty;const unicodeMatchPropertyEcmascript$1=_mergeNamespaces({__proto__:null,default:unicodeMatchPropertyEcmascript},[unicodeMatchPropertyEcmascript]),require$$2$4=getAugmentedNamespace(unicodeMatchPropertyEcmascript$1);var unicode$3={},idContinueBool_1$1,idContinueLargeRegex_1$1,idStartBool_1$1,idStartLargeRegex_1$1,whitespaceBool_1$1,whitespaceArray_1$1;Object.defineProperty(unicode$3,"__esModule",{value:!0});whitespaceArray_1$1=unicode$3.whitespaceArray=[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279];whitespaceBool_1$1=unicode$3.whitespaceBool=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!1,!0,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1];idStartLargeRegex_1$1=unicode$3.idStartLargeRegex=/^[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]$/;idStartBool_1$1=unicode$3.idStartBool=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!1,!1,!1,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!1,!1,!1,!1];idContinueLargeRegex_1$1=unicode$3.idContinueLargeRegex=/^[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]$/;idContinueBool_1$1=unicode$3.idContinueBool=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!1,!1,!1,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!1,!1,!1,!1];const unicode$2=_mergeNamespaces({__proto__:null,get whitespaceArray(){return whitespaceArray_1$1},get whitespaceBool(){return whitespaceBool_1$1},get idStartLargeRegex(){return idStartLargeRegex_1$1},get idStartBool(){return idStartBool_1$1},get idContinueLargeRegex(){return idContinueLargeRegex_1$1},get idContinueBool(){return idContinueBool_1$1},default:unicode$3},[unicode$3]),require$$4$2=getAugmentedNamespace(unicode$2);Object.defineProperty(dist$a,"__esModule",{value:!0});var _createClass$d=function(){function u(n,e){for(var r=0;r<e.length;r++){var a=e[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(n,e,r){return e&&u(n.prototype,e),r&&u(n,r),n}}(),_unicodeMatchPropertyValueEcmascript=require$$0$8,_unicodeMatchPropertyValueEcmascript2=_interopRequireDefault$9(_unicodeMatchPropertyValueEcmascript),_mappings=require$$1$6,_mappings2=_interopRequireDefault$9(_mappings),_unicodeMatchPropertyEcmascript=require$$2$4,_unicodeMatchPropertyEcmascript2=_interopRequireDefault$9(_unicodeMatchPropertyEcmascript),_unicodePropertyAliasesEcmascript=require$$3$4,_unicodePropertyAliasesEcmascript2=_interopRequireDefault$9(_unicodePropertyAliasesEcmascript),_unicode$1=require$$4$2;function _interopRequireDefault$9(u){return u&&u.__esModule?u:{default:u}}function _toConsumableArray$6(u){if(Array.isArray(u)){for(var n=0,e=Array(u.length);n<u.length;n++)e[n]=u[n];return e}else return Array.from(u)}function _classCallCheck$h(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}var catchIsFalse=function u(n){try{return!!n()}catch{return!1}},syntaxCharacters="^$\\.*+?()[]{}|".split(""),extendedSyntaxCharacters="^$\\.*+?()[|".split(""),controlEscapeCharacters="fnrtv".split(""),controlEscapeCharacterValues={f:"\f".charCodeAt(0),n:`
`.charCodeAt(0),r:"\r".charCodeAt(0),t:"	".charCodeAt(0),v:"\v".charCodeAt(0)},controlCharacters="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),hexDigits="0123456789abcdefABCDEF".split(""),decimalDigits="0123456789".split(""),octalDigits="01234567".split(""),INVALID_NAMED_BACKREFERENCE_SENTINEL={};function isIdentifierStart(u){return u<128?_unicode$1.idStartBool[u]:_unicode$1.idStartLargeRegex.test(String.fromCodePoint(u))}function isIdentifierPart(u){return u<128?_unicode$1.idContinueBool[u]:_unicode$1.idContinueLargeRegex.test(String.fromCodePoint(u))}var PatternAcceptorState=function(){function u(n,e){_classCallCheck$h(this,u),this.pattern=n,this.unicode=e,this.index=0,this.largestBackreference=0,this.backreferenceNames=[],this.groupingNames=[],this.capturingGroups=0}return _createClass$d(u,[{key:"empty",value:function(){return this.index>=this.pattern.length}},{key:"backreference",value:function(e){e>this.largestBackreference&&(this.largestBackreference=e)}},{key:"nextCodePoint",value:function(){return this.empty()?null:this.unicode?String.fromCodePoint(this.pattern.codePointAt(this.index)):this.pattern.charAt(this.index)}},{key:"skipCodePoint",value:function(){this.index+=this.nextCodePoint().length}},{key:"eat",value:function(e){return this.index+e.length>this.pattern.length||this.pattern.slice(this.index,this.index+e.length)!==e?!1:(this.index+=e.length,!0)}},{key:"eatIdentifierCodePoint",value:function(){var e=void 0,r=this.index,a=void 0;if(this.match("\\u")){if(this.skipCodePoint(),e=acceptUnicodeEscape(this),!e.matched)return this.index=r,null;e=e.value,a=String.fromCodePoint(e)}else{if(a=this.nextCodePoint(),a==null)return this.index=r,null;this.index+=a.length,e=a.codePointAt(0)}return{character:a,characterValue:e}}},{key:"eatIdentifierStart",value:function(){var e=this.index,r=this.eatIdentifierCodePoint();return r===null?(this.index=e,null):r.character==="_"||r.character==="$"||isIdentifierStart(r.characterValue)?r.character:(this.index=e,null)}},{key:"eatIdentifierPart",value:function(){var e=this.index,r=this.eatIdentifierCodePoint();return r===null?(this.index=e,null):r.character==="\u200C"||r.character==="\u200D"||r.character==="$"||isIdentifierPart(r.characterValue)?r.character:(this.index=e,null)}},{key:"eatAny",value:function(){for(var e=arguments.length,r=Array(e),a=0;a<e;a++)r[a]=arguments[a];var s=!0,o=!1,c=void 0;try{for(var l=r[Symbol.iterator](),m;!(s=(m=l.next()).done);s=!0){var E=m.value;if(this.eat(E))return E}}catch(A){o=!0,c=A}finally{try{!s&&l.return&&l.return()}finally{if(o)throw c}}return null}},{key:"match",value:function(e){return this.index+e.length<=this.pattern.length&&this.pattern.slice(this.index,this.index+e.length)===e}},{key:"matchAny",value:function(){for(var e=arguments.length,r=Array(e),a=0;a<e;a++)r[a]=arguments[a];var s=!0,o=!1,c=void 0;try{for(var l=r[Symbol.iterator](),m;!(s=(m=l.next()).done);s=!0){var E=m.value;if(this.match(E))return!0}}catch(A){o=!0,c=A}finally{try{!s&&l.return&&l.return()}finally{if(o)throw c}}return!1}},{key:"eatNaturalNumber",value:function(){for(var e=this,r=[],a=function(){var o=!0,c=!1,l=void 0;try{for(var m=decimalDigits[Symbol.iterator](),E;!(o=(E=m.next()).done);o=!0){var A=E.value;if(e.eat(A))return r.push(A),!0}}catch(_){c=!0,l=_}finally{try{!o&&m.return&&m.return()}finally{if(c)throw l}}return!1};a(););return r.length===0?null:r.join("")}}]),u}(),_default$b=dist$a.default=function(u){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},e=n.unicode,r=e===void 0?!1:e,a=new PatternAcceptorState(u,r),s=acceptDisjunction(a);if(s.matched){if(a.unicode&&a.largestBackreference>a.capturingGroups)return!1;if(a.groupingNames.length>0||a.unicode){var o=!0,c=!1,l=void 0;try{for(var m=a.backreferenceNames[Symbol.iterator](),E;!(o=(E=m.next()).done);o=!0){var A=E.value;if(a.groupingNames.indexOf(A)===-1)return!1}}catch(_){c=!0,l=_}finally{try{!o&&m.return&&m.return()}finally{if(c)throw l}}}}return s.matched},backtrackOnFailure=function u(n){return function(e){var r=e.index,a=e.largestBackreference,s=e.capturingGroups,o=n(e);return o.matched||(e.index=r,e.largestBackreference=a,e.capturingGroups=s),o}},acceptUnicodeEscape=backtrackOnFailure(function(u){if(!u.eat("u"))return{matched:!1};if(u.unicode&&u.eat("{")){for(var n=[];!u.eat("}");){var e=u.eatAny.apply(u,_toConsumableArray$6(hexDigits));if(e===null)return{matched:!1};n.push(e)}var r=parseInt(n.join(""),16);return r>1114111?{matched:!1}:{matched:!0,value:r}}var a=[0,0,0,0].map(function(){return u.eatAny.apply(u,_toConsumableArray$6(hexDigits))});if(a.some(function(c){return c===null}))return{matched:!1};var s=parseInt(a.join(""),16);if(u.unicode&&s>=55296&&s<=56319){var o=backtrackOnFailure(function(c){if(!c.eat("\\u"))return{matched:!1};var l=[0,0,0,0].map(function(){return c.eatAny.apply(c,_toConsumableArray$6(hexDigits))});if(l.some(function(E){return E===null}))return{matched:!1};var m=parseInt(l.join(""),16);return m<56320||m>=57344?{matched:!1}:{matched:!0,value:65536+((s&1023)<<10)+(m&1023)}})(u);if(o.matched)return o}return{matched:!0,value:s}}),acceptDisjunction=function u(n,e){do{if(e!==void 0&&n.eat(e))return{matched:!0};if(n.match("|"))continue;if(!acceptAlternative(n,e).matched)return{matched:!1}}while(n.eat("|"));return{matched:e===void 0||!!n.eat(e)}},acceptAlternative=function u(n,e){for(;!n.match("|")&&!n.empty()&&(e===void 0||!n.match(e));)if(!acceptTerm(n).matched)return{matched:!1};return{matched:!0}},anyOf=function u(){for(var n=arguments.length,e=Array(n),r=0;r<n;r++)e[r]=arguments[r];return function(a){var s=!0,o=!1,c=void 0;try{for(var l=e[Symbol.iterator](),m;!(s=(m=l.next()).done);s=!0){var E=m.value,A=E(a);if(A.matched)return A}}catch(_){o=!0,c=_}finally{try{!s&&l.return&&l.return()}finally{if(o)throw c}}return{matched:!1}}},acceptTerm=function u(n){return n.unicode?anyOf(acceptAssertion,acceptQuantified(acceptAtom))(n):anyOf(acceptQuantified(acceptQuantifiableAssertion),acceptAssertion,acceptQuantified(acceptAtom))(n)},acceptLabeledGroup=function u(n){return backtrackOnFailure(function(e){return e.eat("(")?n(e)?acceptDisjunction(e,")"):{matched:!1}:{matched:!1}})},acceptQuantifiableAssertion=acceptLabeledGroup(function(u){return!!u.eatAny("?=","?!")}),acceptAssertion=function u(n){return n.eatAny("^","$","\\b","\\B")?{matched:!0}:acceptLabeledGroup(function(e){return e.unicode?!!e.eatAny("?=","?!","?<=","?<!"):!!e.eatAny("?<=","?<!")})(n)},acceptDecimal=function u(n){return{matched:n.eatNaturalNumber()!==null}},acceptQuantified=function u(n){return backtrackOnFailure(function(e){if(!n(e).matched)return{matched:!1};if(e.match("{")){var r=backtrackOnFailure(function(a){a.eat("{");var s=a.eatNaturalNumber();if(s===null)return{matched:!1};if(a.eat(",")&&a.matchAny.apply(a,_toConsumableArray$6(decimalDigits))){var o=a.eatNaturalNumber();if(o===null||parseInt(s)>parseInt(o))return{matched:!1}}return a.eat("}")?(a.eat("?"),{matched:!0}):{matched:!1}})(e);return r.matched?r:{matched:!e.unicode}}else e.eatAny("*","+","?")&&e.eat("?");return{matched:!0}})},acceptCharacterExcept=function u(n){return function(e){var r=e.nextCodePoint();return r===null||n.indexOf(r)!==-1?{matched:!1}:(e.skipCodePoint(),{matched:!0})}},acceptPatternCharacter=acceptCharacterExcept(syntaxCharacters),acceptExtendedPatternCharacter=acceptCharacterExcept(extendedSyntaxCharacters),acceptInvalidBracedQuantifier=function u(n){return backtrackOnFailure(function(e){return{matched:!!(e.eat("{")&&acceptDecimal(e).matched&&(!e.eat(",")||e.match("}")||acceptDecimal(e).matched)&&e.eat("}"))}})(n)},acceptAtom=function u(n){if(n.unicode)return anyOf(acceptPatternCharacter,function(r){return{matched:!!r.eat(".")}},backtrackOnFailure(function(r){return r.eat("\\")?acceptAtomEscape(r):{matched:!1}}),acceptCharacterClass,acceptLabeledGroup(function(r){return r.eat("?:")}),acceptGrouping)(n);var e=anyOf(function(r){return{matched:!!r.eat(".")}},backtrackOnFailure(function(r){return r.eat("\\")?acceptAtomEscape(r):{matched:!1}}),backtrackOnFailure(function(r){return{matched:r.eat("\\")&&r.match("c")}}),acceptCharacterClass,acceptLabeledGroup(function(r){return r.eat("?:")}),acceptGrouping)(n);return!e.matched&&acceptInvalidBracedQuantifier(n).matched?{matched:!1}:e.matched?e:acceptExtendedPatternCharacter(n)},acceptGrouping=backtrackOnFailure(function(u){if(!u.eat("("))return{matched:!1};var n=backtrackOnFailure(function(e){return u.eat("?")?acceptGroupName(e):{matched:!1}})(u);if(!acceptDisjunction(u,")").matched)return{matched:!1};if(n.matched){if(u.groupingNames.indexOf(n.data)!==-1)return{matched:!1};u.groupingNames.push(n.data)}return u.capturingGroups++,{matched:!0}}),acceptDecimalEscape=backtrackOnFailure(function(u){var n=u.eatAny.apply(u,_toConsumableArray$6(decimalDigits));return n===null?{matched:!1}:n==="0"?{matched:!0}:(u.backreference(parseInt(n+(u.eatNaturalNumber()||""))),{matched:!0})}),acceptCharacterClassEscape=function u(n){return n.eatAny("d","D","s","S","w","W")?{matched:!0}:n.unicode?backtrackOnFailure(function(e){return!e.eat("p{")&&!e.eat("P{")?{matched:!1}:acceptUnicodePropertyValueExpression(e).matched?{matched:!!e.eat("}")}:{matched:!1}})(n):{matched:!1}},acceptUnicodePropertyName=function u(n){for(var e=[],r=void 0;r=n.eatAny.apply(n,_toConsumableArray$6(controlCharacters).concat(["_"]));)e.push(r);return{matched:e.length>0,data:e.join("")}},acceptUnicodePropertyValue=function u(n){for(var e=[],r=void 0;r=n.eatAny.apply(n,_toConsumableArray$6(controlCharacters).concat(_toConsumableArray$6(decimalDigits),["_"]));)e.push(r);return{matched:e.length>0,data:e.join("")}},illegalLoneUnicodePropertyNames=["General_Category","Script","Script_Extensions","scx","sc","gc"],generalCategoryValues=_mappings2.default.get("General_Category"),acceptLoneUnicodePropertyNameOrValue=function u(n){var e=acceptUnicodePropertyValue(n);return!e.matched||illegalLoneUnicodePropertyNames.includes(e.data)?{matched:!1}:{matched:catchIsFalse(function(){return(0,_unicodeMatchPropertyEcmascript2.default)(e.data)})||generalCategoryValues.get(e.data)!=null}},acceptUnicodePropertyValueExpression=function u(n){return anyOf(backtrackOnFailure(function(e){var r=acceptUnicodePropertyName(e);if(!r.matched||!e.eat("="))return{matched:!1};var a=acceptUnicodePropertyValue(e);return a.matched?{matched:catchIsFalse(function(){return(0,_unicodeMatchPropertyValueEcmascript2.default)(_unicodePropertyAliasesEcmascript2.default.get(r.data)||r.data,a.data)})}:{matched:!1}}),backtrackOnFailure(acceptLoneUnicodePropertyNameOrValue))(n)},acceptCharacterEscape=anyOf(function(u){var n=u.eatAny.apply(u,_toConsumableArray$6(controlEscapeCharacters));return n===null?{matched:!1}:{matched:!0,value:controlEscapeCharacterValues[n]}},backtrackOnFailure(function(u){if(!u.eat("c"))return{matched:!1};var n=u.eatAny.apply(u,_toConsumableArray$6(controlCharacters));return n===null?{matched:!1}:{matched:!0,value:n.charCodeAt(0)%32}}),backtrackOnFailure(function(u){return!u.eat("0")||u.eatAny.apply(u,_toConsumableArray$6(decimalDigits))?{matched:!1}:{matched:!0,value:0}}),backtrackOnFailure(function(u){if(!u.eat("x"))return{matched:!1};var n=[0,0].map(function(){return u.eatAny.apply(u,_toConsumableArray$6(hexDigits))});return n.some(function(e){return e===null})?{matched:!1}:{matched:!0,value:parseInt(n.join(""),16)}}),acceptUnicodeEscape,backtrackOnFailure(function(u){if(u.unicode)return{matched:!1};var n=u.eatAny.apply(u,_toConsumableArray$6(octalDigits));if(n===null)return{matched:!1};var e=parseInt(n,8);if(octalDigits.indexOf(u.nextCodePoint())===-1)return{matched:!0,value:e};var r=u.eatAny.apply(u,_toConsumableArray$6(octalDigits)),a=parseInt(r,8);if(e<4){if(octalDigits.indexOf(u.nextCodePoint())===-1)return{matched:!0,value:e<<3|a};var s=u.eatAny.apply(u,_toConsumableArray$6(octalDigits)),o=parseInt(s,8);return{matched:!0,value:e<<6|a<<3|o}}return{matched:!0,value:e<<3|a}}),backtrackOnFailure(function(u){if(!u.unicode)return{matched:!1};var n=u.eatAny.apply(u,_toConsumableArray$6(syntaxCharacters));return n===null?{matched:!1}:{matched:!0,value:n.charCodeAt(0)}}),function(u){return!u.unicode||!u.eat("/")?{matched:!1}:{matched:!0,value:"/".charCodeAt(0)}},backtrackOnFailure(function(u){if(u.unicode)return{matched:!1};var n=u.nextCodePoint();return n!==null&&n!=="c"&&n!=="k"?(u.skipCodePoint(),{matched:!0,value:n.codePointAt(0)}):{matched:!1}})),acceptGroupNameBackreference=backtrackOnFailure(function(u){if(!u.eat("k"))return{matched:!1};var n=acceptGroupName(u);return n.matched?(u.backreferenceNames.push(n.data),{matched:!0}):(u.backreferenceNames.push(INVALID_NAMED_BACKREFERENCE_SENTINEL),{matched:!0})}),acceptGroupName=backtrackOnFailure(function(u){if(!u.eat("<"))return{matched:!1};var n=[],e=u.eatIdentifierStart();if(!e)return{matched:!1};n.push(e);for(var r=void 0;r=u.eatIdentifierPart();)n.push(r);return u.eat(">")?{matched:n.length>0,data:n.join("")}:{matched:!1}}),acceptAtomEscape=anyOf(acceptDecimalEscape,acceptCharacterClassEscape,acceptCharacterEscape,acceptGroupNameBackreference),acceptCharacterClass=backtrackOnFailure(function(u){if(!u.eat("["))return{matched:!1};u.eat("^");var n=anyOf(function(l){return{matched:!!l.eat("b"),value:8}},function(l){return{matched:l.unicode&&!!l.eat("-"),value:"-".charCodeAt(0)}},backtrackOnFailure(function(l){if(l.unicode||!l.eat("c"))return{matched:!1};var m=l.eatAny.apply(l,_toConsumableArray$6(decimalDigits).concat(["_"]));return m===null?{matched:!1}:{matched:!0,value:m.charCodeAt(0)%32}}),acceptCharacterClassEscape,acceptCharacterEscape,function(l){return{matched:!l.unicode&&!!l.eat("k"),value:107}}),e=function(m){var E=m.nextCodePoint();if(E==="]"||E==="-"||E===null)return{matched:!1};if(E!=="\\")return m.skipCodePoint(),{matched:!0,value:E.codePointAt(0)};m.eat("\\");var A=n(m);return!A.matched&&m.nextCodePoint()==="c"&&!m.unicode?{matched:!0,value:"\\".charCodeAt(0)}:A},r=function(m){return m.eat("-")?{matched:!0,value:"-".charCodeAt(0)}:e(m)},a=function(m,E){var A=function(S){return S.value===void 0&&S.matched};if(m.eat("-")){if(m.match("]"))return{matched:!0};var _=r(m);return _.matched?m.unicode&&(A(E)||A(_))?{matched:!1}:!(!m.unicode&&(A(E)||A(_)))&&E.value>_.value?{matched:!1}:m.match("]")?{matched:!0}:s(m):{matched:!1}}return m.match("]")?{matched:!0}:o(m)},s=function(m){var E=r(m);return E.matched?a(m,E):{matched:!1}},o=function(m){var E=e(m);return E.matched?a(m,E):{matched:!1}};if(u.eat("]"))return{matched:!0};var c=s(u);return c.matched&&u.eat("]"),c});const dist$9=_mergeNamespaces({__proto__:null,default:_default$b},[dist$a]),require$$1$5=getAugmentedNamespace(dist$9);var dist$8={},YieldGeneratorExpression_1$1,YieldExpression_1$1,WithStatement_1$1,WhileStatement_1$1,VariableDeclarator_1$1,VariableDeclarationStatement_1$1,VariableDeclaration_1$1,UpdateExpression_1$1,UnaryExpression_1$1,TryFinallyStatement_1$1,TryCatchStatement_1$1,ThrowStatement_1$1,ThisExpression_1$1,TemplateExpression_1$1,TemplateElement_1$1,SwitchStatementWithDefault_1$1,SwitchStatement_1$1,SwitchDefault_1$1,SwitchCase_1$1,Super_1$1,StaticPropertyName_1$1,StaticMemberExpression_1$1,StaticMemberAssignmentTarget_1$1,SpreadProperty_1$1,SpreadElement_1$1,ShorthandProperty_1$1,Setter_1$1,Script_1$1,ReturnStatement_1$1,ObjectExpression_1$1,ObjectBinding_1$1,ObjectAssignmentTarget_1$1,NewTargetExpression_1$1,NewExpression_1$1,Module_1$1,Method_1$1,LiteralStringExpression_1$1,LiteralRegExpExpression_1$1,LiteralNumericExpression_1$1,LiteralNullExpression_1$1,LiteralInfinityExpression_1$1,LiteralBooleanExpression_1$1,LabeledStatement_1$1,ImportSpecifier_1$1,ImportNamespace_1$1,Import_1$1,IfStatement_1$1,IdentifierExpression_1$1,Getter_1$1,FunctionExpression_1$1,FunctionDeclaration_1$1,FunctionBody_1$1,FormalParameters_1$1,ForStatement_1$1,ForOfStatement_1$1,ForInStatement_1$1,ForAwaitStatement_1$1,ExpressionStatement_1$1,ExportLocals_1$1,ExportLocalSpecifier_1$1,ExportFromSpecifier_1$1,ExportFrom_1$1,ExportDefault_1$1,ExportAllFrom_1$1,Export_1$1,EmptyStatement_1$1,DoWhileStatement_1$1,Directive_1$1,DebuggerStatement_1$1,DataProperty_1$1,ContinueStatement_1$1,ConditionalExpression_1$1,ComputedPropertyName_1$1,ComputedMemberExpression_1$1,ComputedMemberAssignmentTarget_1$1,CompoundAssignmentExpression_1$1,ClassExpression_1$1,ClassElement_1$1,ClassDeclaration_1$1,CatchClause_1$1,CallExpression_1$1,BreakStatement_1$1,BlockStatement_1$1,Block_1$1,BindingWithDefault_1$1,BindingPropertyProperty_1$1,BindingPropertyIdentifier_1$1,BindingIdentifier_1$1,BinaryExpression_1$1,AwaitExpression_1$1,AssignmentTargetWithDefault_1$1,AssignmentTargetPropertyProperty_1$1,AssignmentTargetPropertyIdentifier_1$1,AssignmentTargetIdentifier_1$1,AssignmentExpression_1$1,ArrowExpression_1$1,ArrayExpression_1$1,ArrayBinding_1$1,ArrayAssignmentTarget_1$1;Object.defineProperty(dist$8,"__esModule",{value:!0});function _classCallCheck$g(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}ArrayAssignmentTarget_1$1=dist$8.ArrayAssignmentTarget=function u(n){var e=n.elements,r=n.rest;_classCallCheck$g(this,u),this.type="ArrayAssignmentTarget",this.elements=e,this.rest=r};ArrayBinding_1$1=dist$8.ArrayBinding=function u(n){var e=n.elements,r=n.rest;_classCallCheck$g(this,u),this.type="ArrayBinding",this.elements=e,this.rest=r};ArrayExpression_1$1=dist$8.ArrayExpression=function u(n){var e=n.elements;_classCallCheck$g(this,u),this.type="ArrayExpression",this.elements=e};ArrowExpression_1$1=dist$8.ArrowExpression=function u(n){var e=n.isAsync,r=n.params,a=n.body;_classCallCheck$g(this,u),this.type="ArrowExpression",this.isAsync=e,this.params=r,this.body=a};AssignmentExpression_1$1=dist$8.AssignmentExpression=function u(n){var e=n.binding,r=n.expression;_classCallCheck$g(this,u),this.type="AssignmentExpression",this.binding=e,this.expression=r};AssignmentTargetIdentifier_1$1=dist$8.AssignmentTargetIdentifier=function u(n){var e=n.name;_classCallCheck$g(this,u),this.type="AssignmentTargetIdentifier",this.name=e};AssignmentTargetPropertyIdentifier_1$1=dist$8.AssignmentTargetPropertyIdentifier=function u(n){var e=n.binding,r=n.init;_classCallCheck$g(this,u),this.type="AssignmentTargetPropertyIdentifier",this.binding=e,this.init=r};AssignmentTargetPropertyProperty_1$1=dist$8.AssignmentTargetPropertyProperty=function u(n){var e=n.name,r=n.binding;_classCallCheck$g(this,u),this.type="AssignmentTargetPropertyProperty",this.name=e,this.binding=r};AssignmentTargetWithDefault_1$1=dist$8.AssignmentTargetWithDefault=function u(n){var e=n.binding,r=n.init;_classCallCheck$g(this,u),this.type="AssignmentTargetWithDefault",this.binding=e,this.init=r};AwaitExpression_1$1=dist$8.AwaitExpression=function u(n){var e=n.expression;_classCallCheck$g(this,u),this.type="AwaitExpression",this.expression=e};BinaryExpression_1$1=dist$8.BinaryExpression=function u(n){var e=n.left,r=n.operator,a=n.right;_classCallCheck$g(this,u),this.type="BinaryExpression",this.left=e,this.operator=r,this.right=a};BindingIdentifier_1$1=dist$8.BindingIdentifier=function u(n){var e=n.name;_classCallCheck$g(this,u),this.type="BindingIdentifier",this.name=e};BindingPropertyIdentifier_1$1=dist$8.BindingPropertyIdentifier=function u(n){var e=n.binding,r=n.init;_classCallCheck$g(this,u),this.type="BindingPropertyIdentifier",this.binding=e,this.init=r};BindingPropertyProperty_1$1=dist$8.BindingPropertyProperty=function u(n){var e=n.name,r=n.binding;_classCallCheck$g(this,u),this.type="BindingPropertyProperty",this.name=e,this.binding=r};BindingWithDefault_1$1=dist$8.BindingWithDefault=function u(n){var e=n.binding,r=n.init;_classCallCheck$g(this,u),this.type="BindingWithDefault",this.binding=e,this.init=r};Block_1$1=dist$8.Block=function u(n){var e=n.statements;_classCallCheck$g(this,u),this.type="Block",this.statements=e};BlockStatement_1$1=dist$8.BlockStatement=function u(n){var e=n.block;_classCallCheck$g(this,u),this.type="BlockStatement",this.block=e};BreakStatement_1$1=dist$8.BreakStatement=function u(n){var e=n.label;_classCallCheck$g(this,u),this.type="BreakStatement",this.label=e};CallExpression_1$1=dist$8.CallExpression=function u(n){var e=n.callee,r=n.arguments;_classCallCheck$g(this,u),this.type="CallExpression",this.callee=e,this.arguments=r};CatchClause_1$1=dist$8.CatchClause=function u(n){var e=n.binding,r=n.body;_classCallCheck$g(this,u),this.type="CatchClause",this.binding=e,this.body=r};ClassDeclaration_1$1=dist$8.ClassDeclaration=function u(n){var e=n.name,r=n.super,a=n.elements;_classCallCheck$g(this,u),this.type="ClassDeclaration",this.name=e,this.super=r,this.elements=a};ClassElement_1$1=dist$8.ClassElement=function u(n){var e=n.isStatic,r=n.method;_classCallCheck$g(this,u),this.type="ClassElement",this.isStatic=e,this.method=r};ClassExpression_1$1=dist$8.ClassExpression=function u(n){var e=n.name,r=n.super,a=n.elements;_classCallCheck$g(this,u),this.type="ClassExpression",this.name=e,this.super=r,this.elements=a};CompoundAssignmentExpression_1$1=dist$8.CompoundAssignmentExpression=function u(n){var e=n.binding,r=n.operator,a=n.expression;_classCallCheck$g(this,u),this.type="CompoundAssignmentExpression",this.binding=e,this.operator=r,this.expression=a};ComputedMemberAssignmentTarget_1$1=dist$8.ComputedMemberAssignmentTarget=function u(n){var e=n.object,r=n.expression;_classCallCheck$g(this,u),this.type="ComputedMemberAssignmentTarget",this.object=e,this.expression=r};ComputedMemberExpression_1$1=dist$8.ComputedMemberExpression=function u(n){var e=n.object,r=n.expression;_classCallCheck$g(this,u),this.type="ComputedMemberExpression",this.object=e,this.expression=r};ComputedPropertyName_1$1=dist$8.ComputedPropertyName=function u(n){var e=n.expression;_classCallCheck$g(this,u),this.type="ComputedPropertyName",this.expression=e};ConditionalExpression_1$1=dist$8.ConditionalExpression=function u(n){var e=n.test,r=n.consequent,a=n.alternate;_classCallCheck$g(this,u),this.type="ConditionalExpression",this.test=e,this.consequent=r,this.alternate=a};ContinueStatement_1$1=dist$8.ContinueStatement=function u(n){var e=n.label;_classCallCheck$g(this,u),this.type="ContinueStatement",this.label=e};DataProperty_1$1=dist$8.DataProperty=function u(n){var e=n.name,r=n.expression;_classCallCheck$g(this,u),this.type="DataProperty",this.name=e,this.expression=r};DebuggerStatement_1$1=dist$8.DebuggerStatement=function u(){_classCallCheck$g(this,u),this.type="DebuggerStatement"};Directive_1$1=dist$8.Directive=function u(n){var e=n.rawValue;_classCallCheck$g(this,u),this.type="Directive",this.rawValue=e};DoWhileStatement_1$1=dist$8.DoWhileStatement=function u(n){var e=n.body,r=n.test;_classCallCheck$g(this,u),this.type="DoWhileStatement",this.body=e,this.test=r};EmptyStatement_1$1=dist$8.EmptyStatement=function u(){_classCallCheck$g(this,u),this.type="EmptyStatement"};Export_1$1=dist$8.Export=function u(n){var e=n.declaration;_classCallCheck$g(this,u),this.type="Export",this.declaration=e};ExportAllFrom_1$1=dist$8.ExportAllFrom=function u(n){var e=n.moduleSpecifier;_classCallCheck$g(this,u),this.type="ExportAllFrom",this.moduleSpecifier=e};ExportDefault_1$1=dist$8.ExportDefault=function u(n){var e=n.body;_classCallCheck$g(this,u),this.type="ExportDefault",this.body=e};ExportFrom_1$1=dist$8.ExportFrom=function u(n){var e=n.namedExports,r=n.moduleSpecifier;_classCallCheck$g(this,u),this.type="ExportFrom",this.namedExports=e,this.moduleSpecifier=r};ExportFromSpecifier_1$1=dist$8.ExportFromSpecifier=function u(n){var e=n.name,r=n.exportedName;_classCallCheck$g(this,u),this.type="ExportFromSpecifier",this.name=e,this.exportedName=r};ExportLocalSpecifier_1$1=dist$8.ExportLocalSpecifier=function u(n){var e=n.name,r=n.exportedName;_classCallCheck$g(this,u),this.type="ExportLocalSpecifier",this.name=e,this.exportedName=r};ExportLocals_1$1=dist$8.ExportLocals=function u(n){var e=n.namedExports;_classCallCheck$g(this,u),this.type="ExportLocals",this.namedExports=e};ExpressionStatement_1$1=dist$8.ExpressionStatement=function u(n){var e=n.expression;_classCallCheck$g(this,u),this.type="ExpressionStatement",this.expression=e};ForAwaitStatement_1$1=dist$8.ForAwaitStatement=function u(n){var e=n.left,r=n.right,a=n.body;_classCallCheck$g(this,u),this.type="ForAwaitStatement",this.left=e,this.right=r,this.body=a};ForInStatement_1$1=dist$8.ForInStatement=function u(n){var e=n.left,r=n.right,a=n.body;_classCallCheck$g(this,u),this.type="ForInStatement",this.left=e,this.right=r,this.body=a};ForOfStatement_1$1=dist$8.ForOfStatement=function u(n){var e=n.left,r=n.right,a=n.body;_classCallCheck$g(this,u),this.type="ForOfStatement",this.left=e,this.right=r,this.body=a};ForStatement_1$1=dist$8.ForStatement=function u(n){var e=n.init,r=n.test,a=n.update,s=n.body;_classCallCheck$g(this,u),this.type="ForStatement",this.init=e,this.test=r,this.update=a,this.body=s};FormalParameters_1$1=dist$8.FormalParameters=function u(n){var e=n.items,r=n.rest;_classCallCheck$g(this,u),this.type="FormalParameters",this.items=e,this.rest=r};FunctionBody_1$1=dist$8.FunctionBody=function u(n){var e=n.directives,r=n.statements;_classCallCheck$g(this,u),this.type="FunctionBody",this.directives=e,this.statements=r};FunctionDeclaration_1$1=dist$8.FunctionDeclaration=function u(n){var e=n.isAsync,r=n.isGenerator,a=n.name,s=n.params,o=n.body;_classCallCheck$g(this,u),this.type="FunctionDeclaration",this.isAsync=e,this.isGenerator=r,this.name=a,this.params=s,this.body=o};FunctionExpression_1$1=dist$8.FunctionExpression=function u(n){var e=n.isAsync,r=n.isGenerator,a=n.name,s=n.params,o=n.body;_classCallCheck$g(this,u),this.type="FunctionExpression",this.isAsync=e,this.isGenerator=r,this.name=a,this.params=s,this.body=o};Getter_1$1=dist$8.Getter=function u(n){var e=n.name,r=n.body;_classCallCheck$g(this,u),this.type="Getter",this.name=e,this.body=r};IdentifierExpression_1$1=dist$8.IdentifierExpression=function u(n){var e=n.name;_classCallCheck$g(this,u),this.type="IdentifierExpression",this.name=e};IfStatement_1$1=dist$8.IfStatement=function u(n){var e=n.test,r=n.consequent,a=n.alternate;_classCallCheck$g(this,u),this.type="IfStatement",this.test=e,this.consequent=r,this.alternate=a};Import_1$1=dist$8.Import=function u(n){var e=n.defaultBinding,r=n.namedImports,a=n.moduleSpecifier;_classCallCheck$g(this,u),this.type="Import",this.defaultBinding=e,this.namedImports=r,this.moduleSpecifier=a};ImportNamespace_1$1=dist$8.ImportNamespace=function u(n){var e=n.defaultBinding,r=n.namespaceBinding,a=n.moduleSpecifier;_classCallCheck$g(this,u),this.type="ImportNamespace",this.defaultBinding=e,this.namespaceBinding=r,this.moduleSpecifier=a};ImportSpecifier_1$1=dist$8.ImportSpecifier=function u(n){var e=n.name,r=n.binding;_classCallCheck$g(this,u),this.type="ImportSpecifier",this.name=e,this.binding=r};LabeledStatement_1$1=dist$8.LabeledStatement=function u(n){var e=n.label,r=n.body;_classCallCheck$g(this,u),this.type="LabeledStatement",this.label=e,this.body=r};LiteralBooleanExpression_1$1=dist$8.LiteralBooleanExpression=function u(n){var e=n.value;_classCallCheck$g(this,u),this.type="LiteralBooleanExpression",this.value=e};LiteralInfinityExpression_1$1=dist$8.LiteralInfinityExpression=function u(){_classCallCheck$g(this,u),this.type="LiteralInfinityExpression"};LiteralNullExpression_1$1=dist$8.LiteralNullExpression=function u(){_classCallCheck$g(this,u),this.type="LiteralNullExpression"};LiteralNumericExpression_1$1=dist$8.LiteralNumericExpression=function u(n){var e=n.value;_classCallCheck$g(this,u),this.type="LiteralNumericExpression",this.value=e};LiteralRegExpExpression_1$1=dist$8.LiteralRegExpExpression=function u(n){var e=n.pattern,r=n.global,a=n.ignoreCase,s=n.multiLine,o=n.dotAll,c=n.unicode,l=n.sticky;_classCallCheck$g(this,u),this.type="LiteralRegExpExpression",this.pattern=e,this.global=r,this.ignoreCase=a,this.multiLine=s,this.dotAll=o,this.unicode=c,this.sticky=l};LiteralStringExpression_1$1=dist$8.LiteralStringExpression=function u(n){var e=n.value;_classCallCheck$g(this,u),this.type="LiteralStringExpression",this.value=e};Method_1$1=dist$8.Method=function u(n){var e=n.isAsync,r=n.isGenerator,a=n.name,s=n.params,o=n.body;_classCallCheck$g(this,u),this.type="Method",this.isAsync=e,this.isGenerator=r,this.name=a,this.params=s,this.body=o};Module_1$1=dist$8.Module=function u(n){var e=n.directives,r=n.items;_classCallCheck$g(this,u),this.type="Module",this.directives=e,this.items=r};NewExpression_1$1=dist$8.NewExpression=function u(n){var e=n.callee,r=n.arguments;_classCallCheck$g(this,u),this.type="NewExpression",this.callee=e,this.arguments=r};NewTargetExpression_1$1=dist$8.NewTargetExpression=function u(){_classCallCheck$g(this,u),this.type="NewTargetExpression"};ObjectAssignmentTarget_1$1=dist$8.ObjectAssignmentTarget=function u(n){var e=n.properties,r=n.rest;_classCallCheck$g(this,u),this.type="ObjectAssignmentTarget",this.properties=e,this.rest=r};ObjectBinding_1$1=dist$8.ObjectBinding=function u(n){var e=n.properties,r=n.rest;_classCallCheck$g(this,u),this.type="ObjectBinding",this.properties=e,this.rest=r};ObjectExpression_1$1=dist$8.ObjectExpression=function u(n){var e=n.properties;_classCallCheck$g(this,u),this.type="ObjectExpression",this.properties=e};ReturnStatement_1$1=dist$8.ReturnStatement=function u(n){var e=n.expression;_classCallCheck$g(this,u),this.type="ReturnStatement",this.expression=e};Script_1$1=dist$8.Script=function u(n){var e=n.directives,r=n.statements;_classCallCheck$g(this,u),this.type="Script",this.directives=e,this.statements=r};Setter_1$1=dist$8.Setter=function u(n){var e=n.name,r=n.param,a=n.body;_classCallCheck$g(this,u),this.type="Setter",this.name=e,this.param=r,this.body=a};ShorthandProperty_1$1=dist$8.ShorthandProperty=function u(n){var e=n.name;_classCallCheck$g(this,u),this.type="ShorthandProperty",this.name=e};SpreadElement_1$1=dist$8.SpreadElement=function u(n){var e=n.expression;_classCallCheck$g(this,u),this.type="SpreadElement",this.expression=e};SpreadProperty_1$1=dist$8.SpreadProperty=function u(n){var e=n.expression;_classCallCheck$g(this,u),this.type="SpreadProperty",this.expression=e};StaticMemberAssignmentTarget_1$1=dist$8.StaticMemberAssignmentTarget=function u(n){var e=n.object,r=n.property;_classCallCheck$g(this,u),this.type="StaticMemberAssignmentTarget",this.object=e,this.property=r};StaticMemberExpression_1$1=dist$8.StaticMemberExpression=function u(n){var e=n.object,r=n.property;_classCallCheck$g(this,u),this.type="StaticMemberExpression",this.object=e,this.property=r};StaticPropertyName_1$1=dist$8.StaticPropertyName=function u(n){var e=n.value;_classCallCheck$g(this,u),this.type="StaticPropertyName",this.value=e};Super_1$1=dist$8.Super=function u(){_classCallCheck$g(this,u),this.type="Super"};SwitchCase_1$1=dist$8.SwitchCase=function u(n){var e=n.test,r=n.consequent;_classCallCheck$g(this,u),this.type="SwitchCase",this.test=e,this.consequent=r};SwitchDefault_1$1=dist$8.SwitchDefault=function u(n){var e=n.consequent;_classCallCheck$g(this,u),this.type="SwitchDefault",this.consequent=e};SwitchStatement_1$1=dist$8.SwitchStatement=function u(n){var e=n.discriminant,r=n.cases;_classCallCheck$g(this,u),this.type="SwitchStatement",this.discriminant=e,this.cases=r};SwitchStatementWithDefault_1$1=dist$8.SwitchStatementWithDefault=function u(n){var e=n.discriminant,r=n.preDefaultCases,a=n.defaultCase,s=n.postDefaultCases;_classCallCheck$g(this,u),this.type="SwitchStatementWithDefault",this.discriminant=e,this.preDefaultCases=r,this.defaultCase=a,this.postDefaultCases=s};TemplateElement_1$1=dist$8.TemplateElement=function u(n){var e=n.rawValue;_classCallCheck$g(this,u),this.type="TemplateElement",this.rawValue=e};TemplateExpression_1$1=dist$8.TemplateExpression=function u(n){var e=n.tag,r=n.elements;_classCallCheck$g(this,u),this.type="TemplateExpression",this.tag=e,this.elements=r};ThisExpression_1$1=dist$8.ThisExpression=function u(){_classCallCheck$g(this,u),this.type="ThisExpression"};ThrowStatement_1$1=dist$8.ThrowStatement=function u(n){var e=n.expression;_classCallCheck$g(this,u),this.type="ThrowStatement",this.expression=e};TryCatchStatement_1$1=dist$8.TryCatchStatement=function u(n){var e=n.body,r=n.catchClause;_classCallCheck$g(this,u),this.type="TryCatchStatement",this.body=e,this.catchClause=r};TryFinallyStatement_1$1=dist$8.TryFinallyStatement=function u(n){var e=n.body,r=n.catchClause,a=n.finalizer;_classCallCheck$g(this,u),this.type="TryFinallyStatement",this.body=e,this.catchClause=r,this.finalizer=a};UnaryExpression_1$1=dist$8.UnaryExpression=function u(n){var e=n.operator,r=n.operand;_classCallCheck$g(this,u),this.type="UnaryExpression",this.operator=e,this.operand=r};UpdateExpression_1$1=dist$8.UpdateExpression=function u(n){var e=n.isPrefix,r=n.operator,a=n.operand;_classCallCheck$g(this,u),this.type="UpdateExpression",this.isPrefix=e,this.operator=r,this.operand=a};VariableDeclaration_1$1=dist$8.VariableDeclaration=function u(n){var e=n.kind,r=n.declarators;_classCallCheck$g(this,u),this.type="VariableDeclaration",this.kind=e,this.declarators=r};VariableDeclarationStatement_1$1=dist$8.VariableDeclarationStatement=function u(n){var e=n.declaration;_classCallCheck$g(this,u),this.type="VariableDeclarationStatement",this.declaration=e};VariableDeclarator_1$1=dist$8.VariableDeclarator=function u(n){var e=n.binding,r=n.init;_classCallCheck$g(this,u),this.type="VariableDeclarator",this.binding=e,this.init=r};WhileStatement_1$1=dist$8.WhileStatement=function u(n){var e=n.test,r=n.body;_classCallCheck$g(this,u),this.type="WhileStatement",this.test=e,this.body=r};WithStatement_1$1=dist$8.WithStatement=function u(n){var e=n.object,r=n.body;_classCallCheck$g(this,u),this.type="WithStatement",this.object=e,this.body=r};YieldExpression_1$1=dist$8.YieldExpression=function u(n){var e=n.expression;_classCallCheck$g(this,u),this.type="YieldExpression",this.expression=e};YieldGeneratorExpression_1$1=dist$8.YieldGeneratorExpression=function u(n){var e=n.expression;_classCallCheck$g(this,u),this.type="YieldGeneratorExpression",this.expression=e};const dist$7=_mergeNamespaces({__proto__:null,get ArrayAssignmentTarget(){return ArrayAssignmentTarget_1$1},get ArrayBinding(){return ArrayBinding_1$1},get ArrayExpression(){return ArrayExpression_1$1},get ArrowExpression(){return ArrowExpression_1$1},get AssignmentExpression(){return AssignmentExpression_1$1},get AssignmentTargetIdentifier(){return AssignmentTargetIdentifier_1$1},get AssignmentTargetPropertyIdentifier(){return AssignmentTargetPropertyIdentifier_1$1},get AssignmentTargetPropertyProperty(){return AssignmentTargetPropertyProperty_1$1},get AssignmentTargetWithDefault(){return AssignmentTargetWithDefault_1$1},get AwaitExpression(){return AwaitExpression_1$1},get BinaryExpression(){return BinaryExpression_1$1},get BindingIdentifier(){return BindingIdentifier_1$1},get BindingPropertyIdentifier(){return BindingPropertyIdentifier_1$1},get BindingPropertyProperty(){return BindingPropertyProperty_1$1},get BindingWithDefault(){return BindingWithDefault_1$1},get Block(){return Block_1$1},get BlockStatement(){return BlockStatement_1$1},get BreakStatement(){return BreakStatement_1$1},get CallExpression(){return CallExpression_1$1},get CatchClause(){return CatchClause_1$1},get ClassDeclaration(){return ClassDeclaration_1$1},get ClassElement(){return ClassElement_1$1},get ClassExpression(){return ClassExpression_1$1},get CompoundAssignmentExpression(){return CompoundAssignmentExpression_1$1},get ComputedMemberAssignmentTarget(){return ComputedMemberAssignmentTarget_1$1},get ComputedMemberExpression(){return ComputedMemberExpression_1$1},get ComputedPropertyName(){return ComputedPropertyName_1$1},get ConditionalExpression(){return ConditionalExpression_1$1},get ContinueStatement(){return ContinueStatement_1$1},get DataProperty(){return DataProperty_1$1},get DebuggerStatement(){return DebuggerStatement_1$1},get Directive(){return Directive_1$1},get DoWhileStatement(){return DoWhileStatement_1$1},get EmptyStatement(){return EmptyStatement_1$1},get Export(){return Export_1$1},get ExportAllFrom(){return ExportAllFrom_1$1},get ExportDefault(){return ExportDefault_1$1},get ExportFrom(){return ExportFrom_1$1},get ExportFromSpecifier(){return ExportFromSpecifier_1$1},get ExportLocalSpecifier(){return ExportLocalSpecifier_1$1},get ExportLocals(){return ExportLocals_1$1},get ExpressionStatement(){return ExpressionStatement_1$1},get ForAwaitStatement(){return ForAwaitStatement_1$1},get ForInStatement(){return ForInStatement_1$1},get ForOfStatement(){return ForOfStatement_1$1},get ForStatement(){return ForStatement_1$1},get FormalParameters(){return FormalParameters_1$1},get FunctionBody(){return FunctionBody_1$1},get FunctionDeclaration(){return FunctionDeclaration_1$1},get FunctionExpression(){return FunctionExpression_1$1},get Getter(){return Getter_1$1},get IdentifierExpression(){return IdentifierExpression_1$1},get IfStatement(){return IfStatement_1$1},get Import(){return Import_1$1},get ImportNamespace(){return ImportNamespace_1$1},get ImportSpecifier(){return ImportSpecifier_1$1},get LabeledStatement(){return LabeledStatement_1$1},get LiteralBooleanExpression(){return LiteralBooleanExpression_1$1},get LiteralInfinityExpression(){return LiteralInfinityExpression_1$1},get LiteralNullExpression(){return LiteralNullExpression_1$1},get LiteralNumericExpression(){return LiteralNumericExpression_1$1},get LiteralRegExpExpression(){return LiteralRegExpExpression_1$1},get LiteralStringExpression(){return LiteralStringExpression_1$1},get Method(){return Method_1$1},get Module(){return Module_1$1},get NewExpression(){return NewExpression_1$1},get NewTargetExpression(){return NewTargetExpression_1$1},get ObjectAssignmentTarget(){return ObjectAssignmentTarget_1$1},get ObjectBinding(){return ObjectBinding_1$1},get ObjectExpression(){return ObjectExpression_1$1},get ReturnStatement(){return ReturnStatement_1$1},get Script(){return Script_1$1},get Setter(){return Setter_1$1},get ShorthandProperty(){return ShorthandProperty_1$1},get SpreadElement(){return SpreadElement_1$1},get SpreadProperty(){return SpreadProperty_1$1},get StaticMemberAssignmentTarget(){return StaticMemberAssignmentTarget_1$1},get StaticMemberExpression(){return StaticMemberExpression_1$1},get StaticPropertyName(){return StaticPropertyName_1$1},get Super(){return Super_1$1},get SwitchCase(){return SwitchCase_1$1},get SwitchDefault(){return SwitchDefault_1$1},get SwitchStatement(){return SwitchStatement_1$1},get SwitchStatementWithDefault(){return SwitchStatementWithDefault_1$1},get TemplateElement(){return TemplateElement_1$1},get TemplateExpression(){return TemplateExpression_1$1},get ThisExpression(){return ThisExpression_1$1},get ThrowStatement(){return ThrowStatement_1$1},get TryCatchStatement(){return TryCatchStatement_1$1},get TryFinallyStatement(){return TryFinallyStatement_1$1},get UnaryExpression(){return UnaryExpression_1$1},get UpdateExpression(){return UpdateExpression_1$1},get VariableDeclaration(){return VariableDeclaration_1$1},get VariableDeclarationStatement(){return VariableDeclarationStatement_1$1},get VariableDeclarator(){return VariableDeclarator_1$1},get WhileStatement(){return WhileStatement_1$1},get WithStatement(){return WithStatement_1$1},get YieldExpression(){return YieldExpression_1$1},get YieldGeneratorExpression(){return YieldGeneratorExpression_1$1},default:dist$8},[dist$8]),require$$3$3=getAugmentedNamespace(dist$7);Object.defineProperty(parser$1,"__esModule",{value:!0});var GenericParser_1=parser$1.GenericParser=void 0,_createClass$c=function(){function u(n,e){for(var r=0;r<e.length;r++){var a=e[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(n,e,r){return e&&u(n.prototype,e),r&&u(n,r),n}}(),_errors$1=require$$2$5,_shiftRegexpAcceptor=require$$1$5,_shiftRegexpAcceptor2=_interopRequireDefault$8(_shiftRegexpAcceptor),_tokenizer=require$$0$9,_tokenizer2=_interopRequireDefault$8(_tokenizer),_shiftAst$6=require$$3$3,AST=_interopRequireWildcard$4(_shiftAst$6);function _interopRequireWildcard$4(u){if(u&&u.__esModule)return u;var n={};if(u!=null)for(var e in u)Object.prototype.hasOwnProperty.call(u,e)&&(n[e]=u[e]);return n.default=u,n}function _interopRequireDefault$8(u){return u&&u.__esModule?u:{default:u}}function _classCallCheck$f(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn$7(u,n){if(!u)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n&&(typeof n=="object"||typeof n=="function")?n:u}function _inherits$7(u,n){if(typeof n!="function"&&n!==null)throw new TypeError("Super expression must either be null or a function, not "+typeof n);u.prototype=Object.create(n&&n.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(u,n):u.__proto__=n)}var ARROW_EXPRESSION_PARAMS="CoverParenthesizedExpressionAndArrowParameterList",EXPORT_UNKNOWN_SPECIFIER="ExportNameOfUnknownType",Precedence$1={Sequence:0,Yield:1,Assignment:1,Conditional:2,ArrowFunction:2,LogicalOR:3,LogicalAND:4,BitwiseOR:5,BitwiseXOR:6,BitwiseAND:7,Equality:8,Relational:9,BitwiseSHIFT:10,Additive:11,Multiplicative:12,Unary:13,Postfix:14,Call:15,New:16,TaggedTemplate:17,Member:18,Primary:19},BinaryPrecedence$1={"||":Precedence$1.LogicalOR,"&&":Precedence$1.LogicalAND,"|":Precedence$1.BitwiseOR,"^":Precedence$1.BitwiseXOR,"&":Precedence$1.BitwiseAND,"==":Precedence$1.Equality,"!=":Precedence$1.Equality,"===":Precedence$1.Equality,"!==":Precedence$1.Equality,"<":Precedence$1.Relational,">":Precedence$1.Relational,"<=":Precedence$1.Relational,">=":Precedence$1.Relational,in:Precedence$1.Relational,instanceof:Precedence$1.Relational,"<<":Precedence$1.BitwiseSHIFT,">>":Precedence$1.BitwiseSHIFT,">>>":Precedence$1.BitwiseSHIFT,"+":Precedence$1.Additive,"-":Precedence$1.Additive,"*":Precedence$1.Multiplicative,"%":Precedence$1.Multiplicative,"/":Precedence$1.Multiplicative};function isValidSimpleAssignmentTarget(u){if(u==null)return!1;switch(u.type){case"IdentifierExpression":case"ComputedMemberExpression":case"StaticMemberExpression":return!0}return!1}function isPrefixOperator(u){switch(u.type){case _tokenizer.TokenType.INC:case _tokenizer.TokenType.DEC:case _tokenizer.TokenType.ADD:case _tokenizer.TokenType.SUB:case _tokenizer.TokenType.BIT_NOT:case _tokenizer.TokenType.NOT:case _tokenizer.TokenType.DELETE:case _tokenizer.TokenType.VOID:case _tokenizer.TokenType.TYPEOF:return!0}return!1}function isUpdateOperator(u){return u.type===_tokenizer.TokenType.INC||u.type===_tokenizer.TokenType.DEC}GenericParser_1=parser$1.GenericParser=function(u){_inherits$7(n,u);function n(e){_classCallCheck$f(this,n);var r=_possibleConstructorReturn$7(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));return r.allowIn=!0,r.inFunctionBody=!1,r.inParameter=!1,r.allowYieldExpression=!1,r.allowAwaitExpression=!1,r.firstAwaitLocation=null,r.module=!1,r.moduleIsTheGoalSymbol=!1,r.strict=!1,r.isBindingElement=!0,r.isAssignmentTarget=!0,r.firstExprError=null,r}return _createClass$c(n,[{key:"match",value:function(r){return this.lookahead.type===r}},{key:"matchIdentifier",value:function(){switch(this.lookahead.type){case _tokenizer.TokenType.IDENTIFIER:case _tokenizer.TokenType.LET:case _tokenizer.TokenType.YIELD:case _tokenizer.TokenType.ASYNC:return!0;case _tokenizer.TokenType.AWAIT:return this.moduleIsTheGoalSymbol?!1:(this.firstAwaitLocation===null&&(this.firstAwaitLocation=this.getLocation()),!0);case _tokenizer.TokenType.ESCAPED_KEYWORD:return this.lookahead.value==="await"&&!this.moduleIsTheGoalSymbol?(this.firstAwaitLocation===null&&(this.firstAwaitLocation=this.getLocation()),!0):this.lookahead.value==="let"||this.lookahead.value==="yield"||this.lookahead.value==="async"}return!1}},{key:"eat",value:function(r){return this.lookahead.type===r?this.lex():null}},{key:"expect",value:function(r){if(this.lookahead.type===r)return this.lex();throw this.createUnexpected(this.lookahead)}},{key:"matchContextualKeyword",value:function(r){return this.lookahead.type===_tokenizer.TokenType.IDENTIFIER&&!this.lookahead.escaped&&this.lookahead.value===r}},{key:"expectContextualKeyword",value:function(r){if(this.lookahead.type===_tokenizer.TokenType.IDENTIFIER&&!this.lookahead.escaped&&this.lookahead.value===r)return this.lex();throw this.createUnexpected(this.lookahead)}},{key:"eatContextualKeyword",value:function(r){return this.lookahead.type===_tokenizer.TokenType.IDENTIFIER&&!this.lookahead.escaped&&this.lookahead.value===r?this.lex():null}},{key:"consumeSemicolon",value:function(){if(!this.eat(_tokenizer.TokenType.SEMICOLON)&&!this.hasLineTerminatorBeforeNext&&!this.eof()&&!this.match(_tokenizer.TokenType.RBRACE))throw this.createUnexpected(this.lookahead)}},{key:"startNode",value:function(r){return r}},{key:"copyNode",value:function(r,a){return a}},{key:"finishNode",value:function(r){return r}},{key:"parseModule",value:function(){this.moduleIsTheGoalSymbol=this.module=this.strict=!0,this.lookahead=this.advance();var r=this.startNode(),a=this.parseBody(),s=a.directives,o=a.statements;if(!this.match(_tokenizer.TokenType.EOS))throw this.createUnexpected(this.lookahead);return this.finishNode(new AST.Module({directives:s,items:o}),r)}},{key:"parseScript",value:function(){this.lookahead=this.advance();var r=this.startNode(),a=this.parseBody(),s=a.directives,o=a.statements;if(!this.match(_tokenizer.TokenType.EOS))throw this.createUnexpected(this.lookahead);return this.finishNode(new AST.Script({directives:s,statements:o}),r)}},{key:"parseFunctionBody",value:function(){var r=this.inFunctionBody,a=this.module,s=this.strict;this.inFunctionBody=!0,this.module=!1;var o=this.startNode();this.expect(_tokenizer.TokenType.LBRACE);var c=new AST.FunctionBody(this.parseBody());return this.expect(_tokenizer.TokenType.RBRACE),c=this.finishNode(c,o),this.inFunctionBody=r,this.module=a,this.strict=s,c}},{key:"parseBody",value:function(){for(var r=[],a=[],s=!0,o=null;!(this.eof()||this.match(_tokenizer.TokenType.RBRACE));){var c=this.lookahead,l=c.slice.text,m=c.type===_tokenizer.TokenType.STRING,E=this.module,A=this.getLocation(),_=this.startNode(),v=E?this.parseModuleItem():this.parseStatementListItem();if(s)if(m&&v.type==="ExpressionStatement"&&v.expression.type==="LiteralStringExpression"){!o&&c.octal&&(o=this.createErrorWithLocation(A,"Unexpected legacy octal escape sequence: \\"+c.octal));var S=l.slice(1,-1);S==="use strict"&&(this.strict=!0),r.push(this.finishNode(new AST.Directive({rawValue:S}),_))}else{if(s=!1,o&&this.strict)throw o;a.push(v)}else a.push(v)}if(o&&this.strict)throw o;return{directives:r,statements:a}}},{key:"parseImportSpecifier",value:function(){var r=this.startNode(),a=void 0;if(this.matchIdentifier()){if(a=this.parseIdentifier(),!this.eatContextualKeyword("as"))return this.finishNode(new AST.ImportSpecifier({name:null,binding:this.finishNode(new AST.BindingIdentifier({name:a}),r)}),r)}else this.lookahead.type.klass.isIdentifierName&&(a=this.parseIdentifierName(),this.expectContextualKeyword("as"));return this.finishNode(new AST.ImportSpecifier({name:a,binding:this.parseBindingIdentifier()}),r)}},{key:"parseNameSpaceBinding",value:function(){return this.expect(_tokenizer.TokenType.MUL),this.expectContextualKeyword("as"),this.parseBindingIdentifier()}},{key:"parseNamedImports",value:function(){var r=[];for(this.expect(_tokenizer.TokenType.LBRACE);!this.eat(_tokenizer.TokenType.RBRACE);)if(r.push(this.parseImportSpecifier()),!this.eat(_tokenizer.TokenType.COMMA)){this.expect(_tokenizer.TokenType.RBRACE);break}return r}},{key:"parseFromClause",value:function(){this.expectContextualKeyword("from");var r=this.expect(_tokenizer.TokenType.STRING).str;return r}},{key:"parseImportDeclaration",value:function(){var r=this.startNode(),a=null,s=void 0;if(this.expect(_tokenizer.TokenType.IMPORT),this.match(_tokenizer.TokenType.STRING))return s=this.lex().str,this.consumeSemicolon(),this.finishNode(new AST.Import({defaultBinding:null,namedImports:[],moduleSpecifier:s}),r);if(this.matchIdentifier()&&(a=this.parseBindingIdentifier(),!this.eat(_tokenizer.TokenType.COMMA))){var o=new AST.Import({defaultBinding:a,namedImports:[],moduleSpecifier:this.parseFromClause()});return this.consumeSemicolon(),this.finishNode(o,r)}if(this.match(_tokenizer.TokenType.MUL)){var c=new AST.ImportNamespace({defaultBinding:a,namespaceBinding:this.parseNameSpaceBinding(),moduleSpecifier:this.parseFromClause()});return this.consumeSemicolon(),this.finishNode(c,r)}else if(this.match(_tokenizer.TokenType.LBRACE)){var l=new AST.Import({defaultBinding:a,namedImports:this.parseNamedImports(),moduleSpecifier:this.parseFromClause()});return this.consumeSemicolon(),this.finishNode(l,r)}throw this.createUnexpected(this.lookahead)}},{key:"parseExportSpecifier",value:function(){var r=this.startNode(),a=this.finishNode({type:EXPORT_UNKNOWN_SPECIFIER,isIdentifier:this.matchIdentifier(),value:this.parseIdentifierName()},r);if(this.eatContextualKeyword("as")){var s=this.parseIdentifierName();return this.finishNode({name:a,exportedName:s},r)}return this.finishNode({name:a,exportedName:null},r)}},{key:"parseExportClause",value:function(){this.expect(_tokenizer.TokenType.LBRACE);for(var r=[];!this.eat(_tokenizer.TokenType.RBRACE);)if(r.push(this.parseExportSpecifier()),!this.eat(_tokenizer.TokenType.COMMA)){this.expect(_tokenizer.TokenType.RBRACE);break}return r}},{key:"parseExportDeclaration",value:function(){var r=this,a=this.startNode(),s=void 0;switch(this.expect(_tokenizer.TokenType.EXPORT),this.lookahead.type){case _tokenizer.TokenType.MUL:this.lex(),s=new AST.ExportAllFrom({moduleSpecifier:this.parseFromClause()}),this.consumeSemicolon();break;case _tokenizer.TokenType.LBRACE:{var o=this.parseExportClause(),c=null;this.matchContextualKeyword("from")?(c=this.parseFromClause(),s=new AST.ExportFrom({namedExports:o.map(function(A){return r.copyNode(A,new AST.ExportFromSpecifier({name:A.name.value,exportedName:A.exportedName}))}),moduleSpecifier:c})):(o.forEach(function(A){var _=A.name;if(!_.isIdentifier)throw r.createError(_errors$1.ErrorMessages.ILLEGAL_EXPORTED_NAME)}),s=new AST.ExportLocals({namedExports:o.map(function(A){return r.copyNode(A,new AST.ExportLocalSpecifier({name:r.copyNode(A.name,new AST.IdentifierExpression({name:A.name.value})),exportedName:A.exportedName}))})})),this.consumeSemicolon();break}case _tokenizer.TokenType.CLASS:s=new AST.Export({declaration:this.parseClass({isExpr:!1,inDefault:!1})});break;case _tokenizer.TokenType.FUNCTION:s=new AST.Export({declaration:this.parseFunction({isExpr:!1,inDefault:!1,allowGenerator:!0,isAsync:!1})});break;case _tokenizer.TokenType.ASYNC:{var l=this.startNode();this.lex(),s=new AST.Export({declaration:this.parseFunction({isExpr:!1,inDefault:!1,allowGenerator:!0,isAsync:!0,startState:l})});break}case _tokenizer.TokenType.DEFAULT:switch(this.lex(),this.lookahead.type){case _tokenizer.TokenType.FUNCTION:s=new AST.ExportDefault({body:this.parseFunction({isExpr:!1,inDefault:!0,allowGenerator:!0,isAsync:!1})});break;case _tokenizer.TokenType.CLASS:s=new AST.ExportDefault({body:this.parseClass({isExpr:!1,inDefault:!0})});break;case _tokenizer.TokenType.ASYNC:{var m=this.startNode(),E=this.saveLexerState();if(this.lex(),!this.hasLineTerminatorBeforeNext&&this.match(_tokenizer.TokenType.FUNCTION)){s=new AST.ExportDefault({body:this.parseFunction({isExpr:!1,inDefault:!0,allowGenerator:!1,isAsync:!0,startState:m})});break}this.restoreLexerState(E)}default:s=new AST.ExportDefault({body:this.parseAssignmentExpression()}),this.consumeSemicolon();break}break;case _tokenizer.TokenType.VAR:case _tokenizer.TokenType.LET:case _tokenizer.TokenType.CONST:s=new AST.Export({declaration:this.parseVariableDeclaration(!0)}),this.consumeSemicolon();break;default:throw this.createUnexpected(this.lookahead)}return this.finishNode(s,a)}},{key:"parseModuleItem",value:function(){switch(this.lookahead.type){case _tokenizer.TokenType.IMPORT:return this.parseImportDeclaration();case _tokenizer.TokenType.EXPORT:return this.parseExportDeclaration();default:return this.parseStatementListItem()}}},{key:"lookaheadLexicalDeclaration",value:function(){if(this.match(_tokenizer.TokenType.LET)||this.match(_tokenizer.TokenType.CONST)){var r=this.saveLexerState();if(this.lex(),this.matchIdentifier()||this.match(_tokenizer.TokenType.LBRACE)||this.match(_tokenizer.TokenType.LBRACK))return this.restoreLexerState(r),!0;this.restoreLexerState(r)}return!1}},{key:"parseStatementListItem",value:function(){if(this.eof())throw this.createUnexpected(this.lookahead);switch(this.lookahead.type){case _tokenizer.TokenType.FUNCTION:return this.parseFunction({isExpr:!1,inDefault:!1,allowGenerator:!0,isAsync:!1});case _tokenizer.TokenType.CLASS:return this.parseClass({isExpr:!1,inDefault:!1});case _tokenizer.TokenType.ASYNC:{var r=this.getLocation(),a=this.saveLexerState();return this.lex(),!this.hasLineTerminatorBeforeNext&&this.match(_tokenizer.TokenType.FUNCTION)?this.parseFunction({isExpr:!1,inDefault:!1,allowGenerator:!0,isAsync:!0,startState:r}):(this.restoreLexerState(a),this.parseStatement())}default:if(this.lookaheadLexicalDeclaration()){var s=this.startNode();return this.finishNode(this.parseVariableDeclarationStatement(),s)}return this.parseStatement()}}},{key:"parseStatement",value:function(){var r=this.startNode(),a=this.isolateCoverGrammar(this.parseStatementHelper);return this.finishNode(a,r)}},{key:"parseStatementHelper",value:function(){if(this.eof())throw this.createUnexpected(this.lookahead);switch(this.lookahead.type){case _tokenizer.TokenType.SEMICOLON:return this.parseEmptyStatement();case _tokenizer.TokenType.LBRACE:return this.parseBlockStatement();case _tokenizer.TokenType.LPAREN:return this.parseExpressionStatement();case _tokenizer.TokenType.BREAK:return this.parseBreakStatement();case _tokenizer.TokenType.CONTINUE:return this.parseContinueStatement();case _tokenizer.TokenType.DEBUGGER:return this.parseDebuggerStatement();case _tokenizer.TokenType.DO:return this.parseDoWhileStatement();case _tokenizer.TokenType.FOR:return this.parseForStatement();case _tokenizer.TokenType.IF:return this.parseIfStatement();case _tokenizer.TokenType.RETURN:return this.parseReturnStatement();case _tokenizer.TokenType.SWITCH:return this.parseSwitchStatement();case _tokenizer.TokenType.THROW:return this.parseThrowStatement();case _tokenizer.TokenType.TRY:return this.parseTryStatement();case _tokenizer.TokenType.VAR:return this.parseVariableDeclarationStatement();case _tokenizer.TokenType.WHILE:return this.parseWhileStatement();case _tokenizer.TokenType.WITH:return this.parseWithStatement();case _tokenizer.TokenType.FUNCTION:case _tokenizer.TokenType.CLASS:throw this.createUnexpected(this.lookahead);default:{var r=this.saveLexerState();if(this.eat(_tokenizer.TokenType.LET)){if(this.match(_tokenizer.TokenType.LBRACK))throw this.restoreLexerState(r),this.createUnexpected(this.lookahead);this.restoreLexerState(r)}else if(this.eat(_tokenizer.TokenType.ASYNC)){if(!this.hasLineTerminatorBeforeNext&&this.match(_tokenizer.TokenType.FUNCTION))throw this.createUnexpected(this.lookahead);this.restoreLexerState(r)}var a=this.parseExpression();if(a.type==="IdentifierExpression"&&this.eat(_tokenizer.TokenType.COLON)){var s=this.match(_tokenizer.TokenType.FUNCTION)?this.parseFunction({isExpr:!1,inDefault:!1,allowGenerator:!1,isAsync:!1}):this.parseStatement();return new AST.LabeledStatement({label:a.name,body:s})}return this.consumeSemicolon(),new AST.ExpressionStatement({expression:a})}}}},{key:"parseEmptyStatement",value:function(){return this.lex(),new AST.EmptyStatement}},{key:"parseBlockStatement",value:function(){return new AST.BlockStatement({block:this.parseBlock()})}},{key:"parseExpressionStatement",value:function(){var r=this.parseExpression();return this.consumeSemicolon(),new AST.ExpressionStatement({expression:r})}},{key:"parseBreakStatement",value:function(){if(this.lex(),this.eat(_tokenizer.TokenType.SEMICOLON)||this.hasLineTerminatorBeforeNext)return new AST.BreakStatement({label:null});var r=null;return this.matchIdentifier()&&(r=this.parseIdentifier()),this.consumeSemicolon(),new AST.BreakStatement({label:r})}},{key:"parseContinueStatement",value:function(){if(this.lex(),this.eat(_tokenizer.TokenType.SEMICOLON)||this.hasLineTerminatorBeforeNext)return new AST.ContinueStatement({label:null});var r=null;return this.matchIdentifier()&&(r=this.parseIdentifier()),this.consumeSemicolon(),new AST.ContinueStatement({label:r})}},{key:"parseDebuggerStatement",value:function(){return this.lex(),this.consumeSemicolon(),new AST.DebuggerStatement}},{key:"parseDoWhileStatement",value:function(){this.lex();var r=this.parseStatement();this.expect(_tokenizer.TokenType.WHILE),this.expect(_tokenizer.TokenType.LPAREN);var a=this.parseExpression();return this.expect(_tokenizer.TokenType.RPAREN),this.eat(_tokenizer.TokenType.SEMICOLON),new AST.DoWhileStatement({body:r,test:a})}},{key:"parseForStatement",value:function(){this.lex();var r=this.allowAwaitExpression&&this.eat(_tokenizer.TokenType.AWAIT);this.expect(_tokenizer.TokenType.LPAREN);var a=null,s=null;if(r&&this.match(_tokenizer.TokenType.SEMICOLON))throw this.createUnexpected(this.lookahead);if(this.eat(_tokenizer.TokenType.SEMICOLON))return this.match(_tokenizer.TokenType.SEMICOLON)||(a=this.parseExpression()),this.expect(_tokenizer.TokenType.SEMICOLON),this.match(_tokenizer.TokenType.RPAREN)||(s=this.parseExpression()),new AST.ForStatement({init:null,test:a,update:s,body:this.getIteratorStatementEpilogue()});var o=this.match(_tokenizer.TokenType.LET),c=this.lookaheadLexicalDeclaration(),l=this.startNode();if(this.match(_tokenizer.TokenType.VAR)||c){var m=this.allowIn;this.allowIn=!1;var E=this.parseVariableDeclaration(!1);if(this.allowIn=m,E.declarators.length===1&&(this.match(_tokenizer.TokenType.IN)||this.matchContextualKeyword("of"))){var A=void 0,_=E.declarators[0];if(this.match(_tokenizer.TokenType.IN)){if(r)throw this.createUnexpected(this.lookahead);if(_.init!==null&&(this.strict||E.kind!=="var"||_.binding.type!=="BindingIdentifier"))throw this.createError(_errors$1.ErrorMessages.INVALID_VAR_INIT_FOR_IN);A=AST.ForInStatement,this.lex(),s=this.parseExpression()}else{if(_.init!==null)throw this.createError(r?_errors$1.ErrorMessages.INVALID_VAR_INIT_FOR_AWAIT:_errors$1.ErrorMessages.INVALID_VAR_INIT_FOR_OF);r?A=AST.ForAwaitStatement:A=AST.ForOfStatement,this.lex(),s=this.parseAssignmentExpression()}var v=this.getIteratorStatementEpilogue();return new A({left:E,right:s,body:v})}else if(r)throw this.createUnexpected(this.lookahead);if(this.expect(_tokenizer.TokenType.SEMICOLON),E.declarators.some(function(k){return k.binding.type!=="BindingIdentifier"&&k.init===null}))throw this.createError(_errors$1.ErrorMessages.UNINITIALIZED_BINDINGPATTERN_IN_FOR_INIT);return this.match(_tokenizer.TokenType.SEMICOLON)||(a=this.parseExpression()),this.expect(_tokenizer.TokenType.SEMICOLON),this.match(_tokenizer.TokenType.RPAREN)||(s=this.parseExpression()),new AST.ForStatement({init:E,test:a,update:s,body:this.getIteratorStatementEpilogue()})}var S=this.allowIn;this.allowIn=!1;var g=this.inheritCoverGrammar(this.parseAssignmentExpressionOrTarget);if(this.allowIn=S,this.isAssignmentTarget&&g.type!=="AssignmentExpression"&&(this.match(_tokenizer.TokenType.IN)||this.matchContextualKeyword("of"))){if((g.type==="ObjectAssignmentTarget"||g.type==="ArrayAssignmentTarget")&&(this.firstExprError=null),o&&this.matchContextualKeyword("of"))throw this.createError(r?_errors$1.ErrorMessages.INVALID_LHS_IN_FOR_AWAIT:_errors$1.ErrorMessages.INVALID_LHS_IN_FOR_OF);var D=void 0;if(this.match(_tokenizer.TokenType.IN)){if(r)throw this.createUnexpected(this.lookahead);D=AST.ForInStatement,this.lex(),s=this.parseExpression()}else r?D=AST.ForAwaitStatement:D=AST.ForOfStatement,this.lex(),s=this.parseAssignmentExpression();return new D({left:this.transformDestructuring(g),right:s,body:this.getIteratorStatementEpilogue()})}else if(r)throw this.createError(_errors$1.ErrorMessages.INVALID_LHS_IN_FOR_AWAIT);if(this.firstExprError)throw this.firstExprError;for(;this.eat(_tokenizer.TokenType.COMMA);){var x=this.parseAssignmentExpression();g=this.finishNode(new AST.BinaryExpression({left:g,operator:",",right:x}),l)}if(this.match(_tokenizer.TokenType.IN))throw this.createError(_errors$1.ErrorMessages.INVALID_LHS_IN_FOR_IN);if(this.matchContextualKeyword("of"))throw this.createError(_errors$1.ErrorMessages.INVALID_LHS_IN_FOR_OF);return this.expect(_tokenizer.TokenType.SEMICOLON),this.match(_tokenizer.TokenType.SEMICOLON)||(a=this.parseExpression()),this.expect(_tokenizer.TokenType.SEMICOLON),this.match(_tokenizer.TokenType.RPAREN)||(s=this.parseExpression()),new AST.ForStatement({init:g,test:a,update:s,body:this.getIteratorStatementEpilogue()})}},{key:"getIteratorStatementEpilogue",value:function(){this.expect(_tokenizer.TokenType.RPAREN);var r=this.parseStatement();return r}},{key:"parseIfStatementChild",value:function(){return this.match(_tokenizer.TokenType.FUNCTION)?this.parseFunction({isExpr:!1,inDefault:!1,allowGenerator:!1,isAsync:!1}):this.parseStatement()}},{key:"parseIfStatement",value:function(){this.lex(),this.expect(_tokenizer.TokenType.LPAREN);var r=this.parseExpression();this.expect(_tokenizer.TokenType.RPAREN);var a=this.parseIfStatementChild(),s=null;return this.eat(_tokenizer.TokenType.ELSE)&&(s=this.parseIfStatementChild()),new AST.IfStatement({test:r,consequent:a,alternate:s})}},{key:"parseReturnStatement",value:function(){if(!this.inFunctionBody)throw this.createError(_errors$1.ErrorMessages.ILLEGAL_RETURN);if(this.lex(),this.eat(_tokenizer.TokenType.SEMICOLON)||this.hasLineTerminatorBeforeNext)return new AST.ReturnStatement({expression:null});var r=null;return!this.match(_tokenizer.TokenType.RBRACE)&&!this.eof()&&(r=this.parseExpression()),this.consumeSemicolon(),new AST.ReturnStatement({expression:r})}},{key:"parseSwitchStatement",value:function(){this.lex(),this.expect(_tokenizer.TokenType.LPAREN);var r=this.parseExpression();if(this.expect(_tokenizer.TokenType.RPAREN),this.expect(_tokenizer.TokenType.LBRACE),this.eat(_tokenizer.TokenType.RBRACE))return new AST.SwitchStatement({discriminant:r,cases:[]});var a=this.parseSwitchCases();if(this.match(_tokenizer.TokenType.DEFAULT)){var s=this.parseSwitchDefault(),o=this.parseSwitchCases();if(this.match(_tokenizer.TokenType.DEFAULT))throw this.createError(_errors$1.ErrorMessages.MULTIPLE_DEFAULTS_IN_SWITCH);return this.expect(_tokenizer.TokenType.RBRACE),new AST.SwitchStatementWithDefault({discriminant:r,preDefaultCases:a,defaultCase:s,postDefaultCases:o})}return this.expect(_tokenizer.TokenType.RBRACE),new AST.SwitchStatement({discriminant:r,cases:a})}},{key:"parseSwitchCases",value:function(){for(var r=[];!(this.eof()||this.match(_tokenizer.TokenType.RBRACE)||this.match(_tokenizer.TokenType.DEFAULT));)r.push(this.parseSwitchCase());return r}},{key:"parseSwitchCase",value:function(){var r=this.startNode();return this.expect(_tokenizer.TokenType.CASE),this.finishNode(new AST.SwitchCase({test:this.parseExpression(),consequent:this.parseSwitchCaseBody()}),r)}},{key:"parseSwitchDefault",value:function(){var r=this.startNode();return this.expect(_tokenizer.TokenType.DEFAULT),this.finishNode(new AST.SwitchDefault({consequent:this.parseSwitchCaseBody()}),r)}},{key:"parseSwitchCaseBody",value:function(){return this.expect(_tokenizer.TokenType.COLON),this.parseStatementListInSwitchCaseBody()}},{key:"parseStatementListInSwitchCaseBody",value:function(){for(var r=[];!(this.eof()||this.match(_tokenizer.TokenType.RBRACE)||this.match(_tokenizer.TokenType.DEFAULT)||this.match(_tokenizer.TokenType.CASE));)r.push(this.parseStatementListItem());return r}},{key:"parseThrowStatement",value:function(){var r=this.lex();if(this.hasLineTerminatorBeforeNext)throw this.createErrorWithLocation(r,_errors$1.ErrorMessages.NEWLINE_AFTER_THROW);var a=this.parseExpression();return this.consumeSemicolon(),new AST.ThrowStatement({expression:a})}},{key:"parseTryStatement",value:function(){this.lex();var r=this.parseBlock();if(this.match(_tokenizer.TokenType.CATCH)){var a=this.parseCatchClause();if(this.eat(_tokenizer.TokenType.FINALLY)){var s=this.parseBlock();return new AST.TryFinallyStatement({body:r,catchClause:a,finalizer:s})}return new AST.TryCatchStatement({body:r,catchClause:a})}if(this.eat(_tokenizer.TokenType.FINALLY)){var o=this.parseBlock();return new AST.TryFinallyStatement({body:r,catchClause:null,finalizer:o})}throw this.createError(_errors$1.ErrorMessages.NO_CATCH_OR_FINALLY)}},{key:"parseVariableDeclarationStatement",value:function(){var r=this.parseVariableDeclaration(!0);return this.consumeSemicolon(),new AST.VariableDeclarationStatement({declaration:r})}},{key:"parseWhileStatement",value:function(){this.lex(),this.expect(_tokenizer.TokenType.LPAREN);var r=this.parseExpression(),a=this.getIteratorStatementEpilogue();return new AST.WhileStatement({test:r,body:a})}},{key:"parseWithStatement",value:function(){this.lex(),this.expect(_tokenizer.TokenType.LPAREN);var r=this.parseExpression();this.expect(_tokenizer.TokenType.RPAREN);var a=this.parseStatement();return new AST.WithStatement({object:r,body:a})}},{key:"parseCatchClause",value:function(){var r=this.startNode();if(this.lex(),this.expect(_tokenizer.TokenType.LPAREN),this.match(_tokenizer.TokenType.RPAREN)||this.match(_tokenizer.TokenType.LPAREN))throw this.createUnexpected(this.lookahead);var a=this.parseBindingTarget();this.expect(_tokenizer.TokenType.RPAREN);var s=this.parseBlock();return this.finishNode(new AST.CatchClause({binding:a,body:s}),r)}},{key:"parseBlock",value:function(){var r=this.startNode();this.expect(_tokenizer.TokenType.LBRACE);for(var a=[];!this.match(_tokenizer.TokenType.RBRACE);)a.push(this.parseStatementListItem());return this.expect(_tokenizer.TokenType.RBRACE),this.finishNode(new AST.Block({statements:a}),r)}},{key:"parseVariableDeclaration",value:function(r){var a=this.startNode(),s=this.lex(),o=s.type===_tokenizer.TokenType.VAR?"var":s.type===_tokenizer.TokenType.CONST?"const":"let",c=this.parseVariableDeclaratorList(r);return this.finishNode(new AST.VariableDeclaration({kind:o,declarators:c}),a)}},{key:"parseVariableDeclaratorList",value:function(r){var a=[];do a.push(this.parseVariableDeclarator(r));while(this.eat(_tokenizer.TokenType.COMMA));return a}},{key:"parseVariableDeclarator",value:function(r){var a=this.startNode();if(this.match(_tokenizer.TokenType.LPAREN))throw this.createUnexpected(this.lookahead);var s=this.allowIn;this.allowIn=!0;var o=this.parseBindingTarget();this.allowIn=s,r&&o.type!=="BindingIdentifier"&&!this.match(_tokenizer.TokenType.ASSIGN)&&this.expect(_tokenizer.TokenType.ASSIGN);var c=null;return this.eat(_tokenizer.TokenType.ASSIGN)&&(c=this.parseAssignmentExpression()),this.finishNode(new AST.VariableDeclarator({binding:o,init:c}),a)}},{key:"isolateCoverGrammar",value:function(r){var a=this.isBindingElement,s=this.isAssignmentTarget,o=this.firstExprError,c=void 0;if(this.isBindingElement=this.isAssignmentTarget=!0,this.firstExprError=null,c=r.call(this),this.firstExprError!==null)throw this.firstExprError;return this.isBindingElement=a,this.isAssignmentTarget=s,this.firstExprError=o,c}},{key:"inheritCoverGrammar",value:function(r){var a=this.isBindingElement,s=this.isAssignmentTarget,o=this.firstExprError,c=void 0;return this.isBindingElement=this.isAssignmentTarget=!0,this.firstExprError=null,c=r.call(this),this.isBindingElement=this.isBindingElement&&a,this.isAssignmentTarget=this.isAssignmentTarget&&s,this.firstExprError=o||this.firstExprError,c}},{key:"parseExpression",value:function(){var r=this.startNode(),a=this.parseAssignmentExpression();if(this.match(_tokenizer.TokenType.COMMA))for(;!this.eof()&&this.match(_tokenizer.TokenType.COMMA);){this.lex();var s=this.parseAssignmentExpression();a=this.finishNode(new AST.BinaryExpression({left:a,operator:",",right:s}),r)}return a}},{key:"finishArrowParams",value:function(r){var a=r.params,s=a===void 0?null:a,o=r.rest,c=o===void 0?null:o;if(r.type!==ARROW_EXPRESSION_PARAMS)if(r.type==="IdentifierExpression")s=[this.targetToBinding(this.transformDestructuring(r))];else throw this.createUnexpected(this.lookahead);return this.copyNode(r,new AST.FormalParameters({items:s,rest:c}))}},{key:"parseArrowExpressionTail",value:function(r,a,s){this.expect(_tokenizer.TokenType.ARROW);var o=this.allowYieldExpression,c=this.allowAwaitExpression,l=this.firstAwaitLocation;this.allowYieldExpression=!1,this.allowAwaitExpression=a,this.firstAwaitLocation=null;var m=void 0;if(this.match(_tokenizer.TokenType.LBRACE)){var E=this.allowIn;this.allowIn=!0,m=this.parseFunctionBody(),this.allowIn=E}else m=this.parseAssignmentExpression();return this.allowYieldExpression=o,this.allowAwaitExpression=c,this.firstAwaitLocation=l,this.finishNode(new AST.ArrowExpression({isAsync:a,params:r,body:m}),s)}},{key:"parseAssignmentExpression",value:function(){return this.isolateCoverGrammar(this.parseAssignmentExpressionOrTarget)}},{key:"parseAssignmentExpressionOrTarget",value:function(){var r=this.startNode();if(this.allowYieldExpression&&this.match(_tokenizer.TokenType.YIELD))return this.isBindingElement=this.isAssignmentTarget=!1,this.parseYieldExpression();var a=this.parseConditionalExpression();if(!this.hasLineTerminatorBeforeNext&&this.match(_tokenizer.TokenType.ARROW)){this.isBindingElement=this.isAssignmentTarget=!1,this.firstExprError=null;var s=a.type===ARROW_EXPRESSION_PARAMS&&a.isAsync;return this.parseArrowExpressionTail(this.finishArrowParams(a),s,r)}var o=!1,c=this.lookahead;switch(c.type){case _tokenizer.TokenType.ASSIGN_BIT_OR:case _tokenizer.TokenType.ASSIGN_BIT_XOR:case _tokenizer.TokenType.ASSIGN_BIT_AND:case _tokenizer.TokenType.ASSIGN_SHL:case _tokenizer.TokenType.ASSIGN_SHR:case _tokenizer.TokenType.ASSIGN_SHR_UNSIGNED:case _tokenizer.TokenType.ASSIGN_ADD:case _tokenizer.TokenType.ASSIGN_SUB:case _tokenizer.TokenType.ASSIGN_MUL:case _tokenizer.TokenType.ASSIGN_DIV:case _tokenizer.TokenType.ASSIGN_MOD:case _tokenizer.TokenType.ASSIGN_EXP:o=!0;break}if(o){if(!this.isAssignmentTarget||!isValidSimpleAssignmentTarget(a))throw this.createError(_errors$1.ErrorMessages.INVALID_LHS_IN_ASSIGNMENT);a=this.transformDestructuring(a)}else if(c.type===_tokenizer.TokenType.ASSIGN){if(!this.isAssignmentTarget)throw this.createError(_errors$1.ErrorMessages.INVALID_LHS_IN_ASSIGNMENT);a=this.transformDestructuring(a)}else return a;this.lex();var l=this.parseAssignmentExpression();this.firstExprError=null;var m=void 0;return c.type===_tokenizer.TokenType.ASSIGN?m=new AST.AssignmentExpression({binding:a,expression:l}):(m=new AST.CompoundAssignmentExpression({binding:a,operator:c.type.name,expression:l}),this.isBindingElement=this.isAssignmentTarget=!1),this.finishNode(m,r)}},{key:"targetToBinding",value:function(r){var a=this;if(r===null)return null;switch(r.type){case"AssignmentTargetIdentifier":return this.copyNode(r,new AST.BindingIdentifier({name:r.name}));case"ArrayAssignmentTarget":return this.copyNode(r,new AST.ArrayBinding({elements:r.elements.map(function(s){return a.targetToBinding(s)}),rest:this.targetToBinding(r.rest)}));case"ObjectAssignmentTarget":return this.copyNode(r,new AST.ObjectBinding({properties:r.properties.map(function(s){return a.targetToBinding(s)}),rest:this.targetToBinding(r.rest)}));case"AssignmentTargetPropertyIdentifier":return this.copyNode(r,new AST.BindingPropertyIdentifier({binding:this.targetToBinding(r.binding),init:r.init}));case"AssignmentTargetPropertyProperty":return this.copyNode(r,new AST.BindingPropertyProperty({name:r.name,binding:this.targetToBinding(r.binding)}));case"AssignmentTargetWithDefault":return this.copyNode(r,new AST.BindingWithDefault({binding:this.targetToBinding(r.binding),init:r.init}))}throw new Error("Not reached")}},{key:"transformDestructuring",value:function(r){var a=this;switch(r.type){case"DataProperty":return this.copyNode(r,new AST.AssignmentTargetPropertyProperty({name:r.name,binding:this.transformDestructuringWithDefault(r.expression)}));case"ShorthandProperty":return this.copyNode(r,new AST.AssignmentTargetPropertyIdentifier({binding:this.copyNode(r,new AST.AssignmentTargetIdentifier({name:r.name.name})),init:null}));case"ObjectExpression":{var s=r.properties.length>0?r.properties[r.properties.length-1]:void 0;return s!=null&&s.type==="SpreadProperty"?this.copyNode(r,new AST.ObjectAssignmentTarget({properties:r.properties.slice(0,-1).map(function(c){return c&&a.transformDestructuringWithDefault(c)}),rest:this.transformDestructuring(s.expression)})):this.copyNode(r,new AST.ObjectAssignmentTarget({properties:r.properties.map(function(c){return c&&a.transformDestructuringWithDefault(c)}),rest:null}))}case"ArrayExpression":{var o=r.elements[r.elements.length-1];return o!=null&&o.type==="SpreadElement"?this.copyNode(r,new AST.ArrayAssignmentTarget({elements:r.elements.slice(0,-1).map(function(c){return c&&a.transformDestructuringWithDefault(c)}),rest:this.copyNode(o.expression,this.transformDestructuring(o.expression))})):this.copyNode(r,new AST.ArrayAssignmentTarget({elements:r.elements.map(function(c){return c&&a.transformDestructuringWithDefault(c)}),rest:null}))}case"IdentifierExpression":return this.copyNode(r,new AST.AssignmentTargetIdentifier({name:r.name}));case"StaticPropertyName":return this.copyNode(r,new AST.AssignmentTargetIdentifier({name:r.value}));case"ComputedMemberExpression":return this.copyNode(r,new AST.ComputedMemberAssignmentTarget({object:r.object,expression:r.expression}));case"StaticMemberExpression":return this.copyNode(r,new AST.StaticMemberAssignmentTarget({object:r.object,property:r.property}));case"ArrayAssignmentTarget":case"ObjectAssignmentTarget":case"ComputedMemberAssignmentTarget":case"StaticMemberAssignmentTarget":case"AssignmentTargetIdentifier":case"AssignmentTargetPropertyIdentifier":case"AssignmentTargetPropertyProperty":case"AssignmentTargetWithDefault":return r}throw new Error("Not reached")}},{key:"transformDestructuringWithDefault",value:function(r){switch(r.type){case"AssignmentExpression":return this.copyNode(r,new AST.AssignmentTargetWithDefault({binding:this.transformDestructuring(r.binding),init:r.expression}))}return this.transformDestructuring(r)}},{key:"lookaheadAssignmentExpression",value:function(){if(this.matchIdentifier())return!0;switch(this.lookahead.type){case _tokenizer.TokenType.ADD:case _tokenizer.TokenType.ASSIGN_DIV:case _tokenizer.TokenType.BIT_NOT:case _tokenizer.TokenType.CLASS:case _tokenizer.TokenType.DEC:case _tokenizer.TokenType.DELETE:case _tokenizer.TokenType.DIV:case _tokenizer.TokenType.FALSE:case _tokenizer.TokenType.FUNCTION:case _tokenizer.TokenType.INC:case _tokenizer.TokenType.LBRACE:case _tokenizer.TokenType.LBRACK:case _tokenizer.TokenType.LPAREN:case _tokenizer.TokenType.NEW:case _tokenizer.TokenType.NOT:case _tokenizer.TokenType.NULL:case _tokenizer.TokenType.NUMBER:case _tokenizer.TokenType.STRING:case _tokenizer.TokenType.SUB:case _tokenizer.TokenType.SUPER:case _tokenizer.TokenType.THIS:case _tokenizer.TokenType.TRUE:case _tokenizer.TokenType.TYPEOF:case _tokenizer.TokenType.VOID:case _tokenizer.TokenType.TEMPLATE:return!0}return!1}},{key:"parseYieldExpression",value:function(){var r=this.startNode();if(this.lex(),this.hasLineTerminatorBeforeNext)return this.finishNode(new AST.YieldExpression({expression:null}),r);var a=!!this.eat(_tokenizer.TokenType.MUL),s=null;(a||this.lookaheadAssignmentExpression())&&(s=this.parseAssignmentExpression());var o=a?AST.YieldGeneratorExpression:AST.YieldExpression;return this.finishNode(new o({expression:s}),r)}},{key:"parseConditionalExpression",value:function(){var r=this.startNode(),a=this.parseBinaryExpression();if(this.firstExprError)return a;if(this.eat(_tokenizer.TokenType.CONDITIONAL)){this.isBindingElement=this.isAssignmentTarget=!1;var s=this.allowIn;this.allowIn=!0;var o=this.isolateCoverGrammar(this.parseAssignmentExpression);this.allowIn=s,this.expect(_tokenizer.TokenType.COLON);var c=this.isolateCoverGrammar(this.parseAssignmentExpression);return this.finishNode(new AST.ConditionalExpression({test:a,consequent:o,alternate:c}),r)}return a}},{key:"isBinaryOperator",value:function(r){switch(r){case _tokenizer.TokenType.OR:case _tokenizer.TokenType.AND:case _tokenizer.TokenType.BIT_OR:case _tokenizer.TokenType.BIT_XOR:case _tokenizer.TokenType.BIT_AND:case _tokenizer.TokenType.EQ:case _tokenizer.TokenType.NE:case _tokenizer.TokenType.EQ_STRICT:case _tokenizer.TokenType.NE_STRICT:case _tokenizer.TokenType.LT:case _tokenizer.TokenType.GT:case _tokenizer.TokenType.LTE:case _tokenizer.TokenType.GTE:case _tokenizer.TokenType.INSTANCEOF:case _tokenizer.TokenType.SHL:case _tokenizer.TokenType.SHR:case _tokenizer.TokenType.SHR_UNSIGNED:case _tokenizer.TokenType.ADD:case _tokenizer.TokenType.SUB:case _tokenizer.TokenType.MUL:case _tokenizer.TokenType.DIV:case _tokenizer.TokenType.MOD:return!0;case _tokenizer.TokenType.IN:return this.allowIn;default:return!1}}},{key:"parseBinaryExpression",value:function(){var r=this,a=this.startNode(),s=this.parseExponentiationExpression();if(this.firstExprError)return s;var o=this.lookahead.type;if(!this.isBinaryOperator(o))return s;this.isBindingElement=this.isAssignmentTarget=!1,this.lex();var c=[];c.push({startState:a,left:s,operator:o,precedence:BinaryPrecedence$1[o.name]}),a=this.startNode();var l=this.isolateCoverGrammar(this.parseExponentiationExpression);for(o=this.lookahead.type;this.isBinaryOperator(o);){for(var m=BinaryPrecedence$1[o.name];c.length&&m<=c[c.length-1].precedence;){var E=c[c.length-1],A=E.operator;s=E.left,c.pop(),a=E.startState,l=this.finishNode(new AST.BinaryExpression({left:s,operator:A.name,right:l}),a)}this.lex(),c.push({startState:a,left:l,operator:o,precedence:m}),a=this.startNode(),l=this.isolateCoverGrammar(this.parseExponentiationExpression),o=this.lookahead.type}return c.reduceRight(function(_,v){return r.finishNode(new AST.BinaryExpression({left:v.left,operator:v.operator.name,right:_}),v.startState)},l)}},{key:"parseExponentiationExpression",value:function(){var r=this.startNode(),a=this.lookahead.type===_tokenizer.TokenType.LPAREN,s=this.parseUnaryExpression();if(this.lookahead.type!==_tokenizer.TokenType.EXP)return s;if(s.type==="UnaryExpression"&&!a)throw this.createError(_errors$1.ErrorMessages.INVALID_EXPONENTIATION_LHS);this.lex(),this.isBindingElement=this.isAssignmentTarget=!1;var o=this.isolateCoverGrammar(this.parseExponentiationExpression);return this.finishNode(new AST.BinaryExpression({left:s,operator:"**",right:o}),r)}},{key:"parseUnaryExpression",value:function(){if(this.lookahead.type.klass!==_tokenizer.TokenClass.Punctuator&&this.lookahead.type.klass!==_tokenizer.TokenClass.Keyword)return this.parseUpdateExpression();var r=this.startNode();if(this.allowAwaitExpression&&this.eat(_tokenizer.TokenType.AWAIT)){this.isBindingElement=this.isAssignmentTarget=!1;var a=this.isolateCoverGrammar(this.parseUnaryExpression);return this.finishNode(new AST.AwaitExpression({expression:a}),r)}var s=this.lookahead;if(!isPrefixOperator(s))return this.parseUpdateExpression();this.lex(),this.isBindingElement=this.isAssignmentTarget=!1;var o=void 0;if(isUpdateOperator(s)){var c=this.getLocation(),l=this.isolateCoverGrammar(this.parseUnaryExpression);if(!isValidSimpleAssignmentTarget(l))throw this.createErrorWithLocation(c,_errors$1.ErrorMessages.INVALID_UPDATE_OPERAND);l=this.transformDestructuring(l),o=new AST.UpdateExpression({isPrefix:!0,operator:s.value,operand:l})}else{var m=this.isolateCoverGrammar(this.parseUnaryExpression);o=new AST.UnaryExpression({operator:s.value,operand:m})}return this.finishNode(o,r)}},{key:"parseUpdateExpression",value:function(){var r=this.getLocation(),a=this.startNode(),s=this.parseLeftHandSideExpression({allowCall:!0});if(this.firstExprError||this.hasLineTerminatorBeforeNext)return s;var o=this.lookahead;if(!isUpdateOperator(o))return s;if(this.lex(),this.isBindingElement=this.isAssignmentTarget=!1,!isValidSimpleAssignmentTarget(s))throw this.createErrorWithLocation(r,_errors$1.ErrorMessages.INVALID_UPDATE_OPERAND);return s=this.transformDestructuring(s),this.finishNode(new AST.UpdateExpression({isPrefix:!1,operator:o.value,operand:s}),a)}},{key:"parseLeftHandSideExpression",value:function(r){var a=this,s=r.allowCall,o=this.startNode(),c=this.allowIn;this.allowIn=!0;var l=void 0,m=this.lookahead;if(this.eat(_tokenizer.TokenType.SUPER))if(this.isBindingElement=!1,this.isAssignmentTarget=!1,l=this.finishNode(new AST.Super,o),this.match(_tokenizer.TokenType.LPAREN))if(s)l=this.finishNode(new AST.CallExpression({callee:l,arguments:this.parseArgumentList().args}),o);else throw this.createUnexpected(m);else if(this.match(_tokenizer.TokenType.LBRACK))l=this.finishNode(new AST.ComputedMemberExpression({object:l,expression:this.parseComputedMember()}),o),this.isAssignmentTarget=!0;else if(this.match(_tokenizer.TokenType.PERIOD))l=this.finishNode(new AST.StaticMemberExpression({object:l,property:this.parseStaticMember()}),o),this.isAssignmentTarget=!0;else throw this.createUnexpected(m);else if(this.match(_tokenizer.TokenType.NEW))this.isBindingElement=this.isAssignmentTarget=!1,l=this.parseNewExpression();else if(this.match(_tokenizer.TokenType.ASYNC)){if(l=this.parsePrimaryExpression(),l.type==="IdentifierExpression"&&s&&!this.hasLineTerminatorBeforeNext){if(this.matchIdentifier()){var E=this.startNode(),A=this.allowAwaitExpression;this.allowAwaitExpression=!0;var _=this.parseBindingIdentifier();return this.allowAwaitExpression=A,this.ensureArrow(),this.finishNode({type:ARROW_EXPRESSION_PARAMS,params:[_],rest:null,isAsync:!0},E)}if(this.match(_tokenizer.TokenType.LPAREN)){var v=this.startNode(),S=this.firstAwaitLocation;this.firstAwaitLocation=null;var g=this.parseArgumentList(),D=g.args,x=g.locationFollowingFirstSpread;if(this.isBindingElement&&!this.hasLineTerminatorBeforeNext&&this.match(_tokenizer.TokenType.ARROW)){if(x!==null)throw this.createErrorWithLocation(x,_errors$1.ErrorMessages.UNEXPECTED_TOKEN(","));if(this.firstAwaitLocation!==null)throw this.createErrorWithLocation(this.firstAwaitLocation,_errors$1.ErrorMessages.NO_AWAIT_IN_ASYNC_PARAMS);var k=null;if(D.length>0&&D[D.length-1].type==="SpreadElement"){if(k=this.targetToBinding(this.transformDestructuringWithDefault(D[D.length-1].expression)),k.init!=null)throw this.createError(_errors$1.ErrorMessages.UNEXPECTED_REST_PARAMETERS_INITIALIZATION);D=D.slice(0,-1)}var N=D.map(function(j){return a.targetToBinding(a.transformDestructuringWithDefault(j))});return this.finishNode({type:ARROW_EXPRESSION_PARAMS,params:N,rest:k,isAsync:!0},v)}this.firstAwaitLocation=S||this.firstAwaitLocation,this.isBindingElement=this.isAssignmentTarget=!1,l=this.finishNode(new AST.CallExpression({callee:l,arguments:D}),o)}}}else if(l=this.parsePrimaryExpression(),this.firstExprError)return l;for(;;)if(s&&this.match(_tokenizer.TokenType.LPAREN))this.isBindingElement=this.isAssignmentTarget=!1,l=this.finishNode(new AST.CallExpression({callee:l,arguments:this.parseArgumentList().args}),o);else if(this.match(_tokenizer.TokenType.LBRACK))this.isBindingElement=!1,this.isAssignmentTarget=!0,l=this.finishNode(new AST.ComputedMemberExpression({object:l,expression:this.parseComputedMember()}),o);else if(this.match(_tokenizer.TokenType.PERIOD))this.isBindingElement=!1,this.isAssignmentTarget=!0,l=this.finishNode(new AST.StaticMemberExpression({object:l,property:this.parseStaticMember()}),o);else if(this.match(_tokenizer.TokenType.TEMPLATE))this.isBindingElement=this.isAssignmentTarget=!1,l=this.finishNode(new AST.TemplateExpression({tag:l,elements:this.parseTemplateElements()}),o);else break;return this.allowIn=c,l}},{key:"parseTemplateElements",value:function(){var r=this.startNode(),a=this.lookahead;if(a.tail)return this.lex(),[this.finishNode(new AST.TemplateElement({rawValue:a.slice.text.slice(1,-1)}),r)];for(var s=[this.finishNode(new AST.TemplateElement({rawValue:this.lex().slice.text.slice(1,-2)}),r)];;){if(s.push(this.parseExpression()),!this.match(_tokenizer.TokenType.RBRACE))throw this.createILLEGAL();if(this.index=this.startIndex,this.line=this.startLine,this.lineStart=this.startLineStart,this.lookahead=this.scanTemplateElement(),r=this.startNode(),a=this.lex(),a.tail)return s.push(this.finishNode(new AST.TemplateElement({rawValue:a.slice.text.slice(1,-1)}),r)),s;s.push(this.finishNode(new AST.TemplateElement({rawValue:a.slice.text.slice(1,-2)}),r))}}},{key:"parseStaticMember",value:function(){if(this.lex(),this.lookahead.type.klass.isIdentifierName)return this.lex().value;throw this.createUnexpected(this.lookahead)}},{key:"parseComputedMember",value:function(){this.lex();var r=this.parseExpression();return this.expect(_tokenizer.TokenType.RBRACK),r}},{key:"parseNewExpression",value:function(){var r=this,a=this.startNode();if(this.lex(),this.eat(_tokenizer.TokenType.PERIOD))return this.expectContextualKeyword("target"),this.finishNode(new AST.NewTargetExpression,a);var s=this.isolateCoverGrammar(function(){return r.parseLeftHandSideExpression({allowCall:!1})});return this.finishNode(new AST.NewExpression({callee:s,arguments:this.match(_tokenizer.TokenType.LPAREN)?this.parseArgumentList().args:[]}),a)}},{key:"parseRegexFlags",value:function(r){for(var a=!1,s=!1,o=!1,c=!1,l=!1,m=!1,E=0;E<r.length;++E){var A=r[E];switch(A){case"g":if(a)throw this.createError("Duplicate regular expression flag 'g'");a=!0;break;case"i":if(s)throw this.createError("Duplicate regular expression flag 'i'");s=!0;break;case"m":if(o)throw this.createError("Duplicate regular expression flag 'm'");o=!0;break;case"u":if(c)throw this.createError("Duplicate regular expression flag 'u'");c=!0;break;case"y":if(l)throw this.createError("Duplicate regular expression flag 'y'");l=!0;break;case"s":if(m)throw this.createError("Duplicate regular expression flag 's'");m=!0;break;default:throw this.createError("Invalid regular expression flag '"+A+"'")}}return{global:a,ignoreCase:s,multiLine:o,unicode:c,sticky:l,dotAll:m}}},{key:"parsePrimaryExpression",value:function(){if(this.match(_tokenizer.TokenType.LPAREN))return this.parseGroupExpression();var r=this.startNode();if(this.eat(_tokenizer.TokenType.ASYNC))return!this.hasLineTerminatorBeforeNext&&this.match(_tokenizer.TokenType.FUNCTION)?(this.isBindingElement=this.isAssignmentTarget=!1,this.finishNode(this.parseFunction({isExpr:!0,inDefault:!1,allowGenerator:!0,isAsync:!0}),r)):this.finishNode(new AST.IdentifierExpression({name:"async"}),r);if(this.matchIdentifier())return this.finishNode(new AST.IdentifierExpression({name:this.parseIdentifier()}),r);switch(this.lookahead.type){case _tokenizer.TokenType.STRING:return this.isBindingElement=this.isAssignmentTarget=!1,this.parseStringLiteral();case _tokenizer.TokenType.NUMBER:return this.isBindingElement=this.isAssignmentTarget=!1,this.parseNumericLiteral();case _tokenizer.TokenType.THIS:return this.lex(),this.isBindingElement=this.isAssignmentTarget=!1,this.finishNode(new AST.ThisExpression,r);case _tokenizer.TokenType.FUNCTION:return this.isBindingElement=this.isAssignmentTarget=!1,this.finishNode(this.parseFunction({isExpr:!0,inDefault:!1,allowGenerator:!0,isAsync:!1}),r);case _tokenizer.TokenType.TRUE:return this.lex(),this.isBindingElement=this.isAssignmentTarget=!1,this.finishNode(new AST.LiteralBooleanExpression({value:!0}),r);case _tokenizer.TokenType.FALSE:return this.lex(),this.isBindingElement=this.isAssignmentTarget=!1,this.finishNode(new AST.LiteralBooleanExpression({value:!1}),r);case _tokenizer.TokenType.NULL:return this.lex(),this.isBindingElement=this.isAssignmentTarget=!1,this.finishNode(new AST.LiteralNullExpression,r);case _tokenizer.TokenType.LBRACK:return this.parseArrayExpression();case _tokenizer.TokenType.LBRACE:return this.parseObjectExpression();case _tokenizer.TokenType.TEMPLATE:return this.isBindingElement=this.isAssignmentTarget=!1,this.finishNode(new AST.TemplateExpression({tag:null,elements:this.parseTemplateElements()}),r);case _tokenizer.TokenType.DIV:case _tokenizer.TokenType.ASSIGN_DIV:{this.isBindingElement=this.isAssignmentTarget=!1,this.lookahead=this.scanRegExp(this.match(_tokenizer.TokenType.DIV)?"/":"/=");var a=this.lex(),s=a.value.lastIndexOf("/"),o=a.value.slice(1,s),c=a.value.slice(s+1),l=this.parseRegexFlags(c);if(!(0,_shiftRegexpAcceptor2.default)(o,l))throw this.createError(_errors$1.ErrorMessages.INVALID_REGEX);return l.pattern=o,this.finishNode(new AST.LiteralRegExpExpression(l),r)}case _tokenizer.TokenType.CLASS:return this.isBindingElement=this.isAssignmentTarget=!1,this.parseClass({isExpr:!0,inDefault:!1});default:throw this.createUnexpected(this.lookahead)}}},{key:"parseNumericLiteral",value:function(){var r=this.getLocation(),a=this.startNode(),s=this.lex();if(s.octal&&this.strict)throw s.noctal?this.createErrorWithLocation(r,"Unexpected noctal integer literal"):this.createErrorWithLocation(r,"Unexpected legacy octal integer literal");var o=s.value===1/0?new AST.LiteralInfinityExpression:new AST.LiteralNumericExpression({value:s.value});return this.finishNode(o,a)}},{key:"parseStringLiteral",value:function(){var r=this.getLocation(),a=this.startNode(),s=this.lex();if(s.octal!=null&&this.strict)throw this.createErrorWithLocation(r,"Unexpected legacy octal escape sequence: \\"+s.octal);return this.finishNode(new AST.LiteralStringExpression({value:s.str}),a)}},{key:"parseIdentifierName",value:function(){if(this.lookahead.type.klass.isIdentifierName)return this.lex().value;throw this.createUnexpected(this.lookahead)}},{key:"parseBindingIdentifier",value:function(){var r=this.startNode();return this.finishNode(new AST.BindingIdentifier({name:this.parseIdentifier()}),r)}},{key:"parseIdentifier",value:function(){if(this.lookahead.value==="yield"&&this.allowYieldExpression)throw this.createError(_errors$1.ErrorMessages.ILLEGAL_YIELD_IDENTIFIER);if(this.lookahead.value==="await"&&this.allowAwaitExpression)throw this.createError(_errors$1.ErrorMessages.ILLEGAL_AWAIT_IDENTIFIER);if(this.matchIdentifier())return this.lex().value;throw this.createUnexpected(this.lookahead)}},{key:"parseArgumentList",value:function(){this.lex();var r=this.parseArguments();return this.expect(_tokenizer.TokenType.RPAREN),r}},{key:"parseArguments",value:function(){for(var r=[],a=null;!this.match(_tokenizer.TokenType.RPAREN);){var s=void 0,o=this.startNode();if(this.eat(_tokenizer.TokenType.ELLIPSIS)){if(s=this.finishNode(new AST.SpreadElement({expression:this.inheritCoverGrammar(this.parseAssignmentExpressionOrTarget)}),o),a===null){if(r.push(s),this.match(_tokenizer.TokenType.RPAREN))break;a=this.getLocation(),this.expect(_tokenizer.TokenType.COMMA);continue}}else s=this.inheritCoverGrammar(this.parseAssignmentExpressionOrTarget);if(r.push(s),this.match(_tokenizer.TokenType.RPAREN))break;this.expect(_tokenizer.TokenType.COMMA)}return{args:r,locationFollowingFirstSpread:a}}},{key:"ensureArrow",value:function(){if(this.hasLineTerminatorBeforeNext)throw this.createError(_errors$1.ErrorMessages.UNEXPECTED_LINE_TERMINATOR);this.match(_tokenizer.TokenType.ARROW)||this.expect(_tokenizer.TokenType.ARROW)}},{key:"parseGroupExpression",value:function(){var r=null,a=this.startNode(),s=this.expect(_tokenizer.TokenType.LPAREN),o=this.startNode();if(this.match(_tokenizer.TokenType.RPAREN)){this.lex();var c=this.finishNode({type:ARROW_EXPRESSION_PARAMS,params:[],rest:null,isAsync:!1},a);return this.ensureArrow(),this.isBindingElement=this.isAssignmentTarget=!1,c}else if(this.eat(_tokenizer.TokenType.ELLIPSIS)){if(r=this.parseBindingTarget(),this.match(_tokenizer.TokenType.ASSIGN))throw this.createError(_errors$1.ErrorMessages.INVALID_REST_PARAMETERS_INITIALIZATION);if(this.match(_tokenizer.TokenType.COMMA))throw this.createError(_errors$1.ErrorMessages.INVALID_LAST_REST_PARAMETER);this.expect(_tokenizer.TokenType.RPAREN);var l=this.finishNode({type:ARROW_EXPRESSION_PARAMS,params:[],rest:r,isAsync:!1},a);return this.ensureArrow(),this.isBindingElement=this.isAssignmentTarget=!1,l}for(var m=this.inheritCoverGrammar(this.parseAssignmentExpressionOrTarget),E=this.isBindingElement?[this.targetToBinding(this.transformDestructuringWithDefault(m))]:null;this.eat(_tokenizer.TokenType.COMMA);){if(this.match(_tokenizer.TokenType.RPAREN)){if(!this.isBindingElement)throw this.createUnexpected(this.lookahead);this.firstExprError=this.firstExprError||this.createUnexpected(this.lookahead),m=null;break}if(this.isAssignmentTarget=!1,this.match(_tokenizer.TokenType.ELLIPSIS)){if(!this.isBindingElement)throw this.createUnexpected(this.lookahead);if(this.lex(),r=this.parseBindingTarget(),this.match(_tokenizer.TokenType.ASSIGN))throw this.createError(_errors$1.ErrorMessages.INVALID_REST_PARAMETERS_INITIALIZATION);if(this.match(_tokenizer.TokenType.COMMA))throw this.createError(_errors$1.ErrorMessages.INVALID_LAST_REST_PARAMETER);break}if(m){var A=this.inheritCoverGrammar(this.parseAssignmentExpressionOrTarget);this.isBindingElement?E.push(this.targetToBinding(this.transformDestructuringWithDefault(A))):E=null,this.firstExprError?m=null:m=this.finishNode(new AST.BinaryExpression({left:m,operator:",",right:A}),o)}else{var _=this.parseBindingElement();E.push(_)}}if(this.expect(_tokenizer.TokenType.RPAREN),!this.hasLineTerminatorBeforeNext&&this.match(_tokenizer.TokenType.ARROW)){if(!this.isBindingElement)throw this.createErrorWithLocation(s,_errors$1.ErrorMessages.ILLEGAL_ARROW_FUNCTION_PARAMS);return this.isBindingElement=!1,this.finishNode({type:ARROW_EXPRESSION_PARAMS,params:E,rest:r,isAsync:!1},a)}return r&&this.ensureArrow(),this.isBindingElement=!1,isValidSimpleAssignmentTarget(m)||(this.isAssignmentTarget=!1),m}},{key:"parseArrayExpression",value:function(){var r=this,a=this.getLocation(),s=this.startNode();this.lex();for(var o=[],c=null;!this.match(_tokenizer.TokenType.RBRACK);)if(this.eat(_tokenizer.TokenType.COMMA))o.push(null);else{var l=this.startNode(),m=void 0;if(this.eat(_tokenizer.TokenType.ELLIPSIS)){if(m=this.inheritCoverGrammar(this.parseAssignmentExpressionOrTarget),!this.isAssignmentTarget&&this.firstExprError)throw this.firstExprError;if(m.type==="ArrayAssignmentTarget"||m.type==="ObjectAssignmentTarget"){c=m;break}m.type!=="ArrayExpression"&&m.type!=="ObjectExpression"&&!isValidSimpleAssignmentTarget(m)&&(this.isBindingElement=this.isAssignmentTarget=!1),m=this.finishNode(new AST.SpreadElement({expression:m}),l),this.match(_tokenizer.TokenType.RBRACK)||(this.isBindingElement=this.isAssignmentTarget=!1)}else if(m=this.inheritCoverGrammar(this.parseAssignmentExpressionOrTarget),!this.isAssignmentTarget&&this.firstExprError)throw this.firstExprError;o.push(m),this.match(_tokenizer.TokenType.RBRACK)||this.expect(_tokenizer.TokenType.COMMA)}if(c&&this.match(_tokenizer.TokenType.COMMA))throw this.createErrorWithLocation(a,_errors$1.ErrorMessages.UNEXPECTED_COMMA_AFTER_REST);if(this.expect(_tokenizer.TokenType.RBRACK),c)return this.finishNode(new AST.ArrayAssignmentTarget({elements:o.map(function(A){return A&&r.transformDestructuringWithDefault(A)}),rest:c}),s);if(this.firstExprError){var E=o[o.length-1];return E!=null&&E.type==="SpreadElement"?this.finishNode(new AST.ArrayAssignmentTarget({elements:o.slice(0,-1).map(function(A){return A&&r.transformDestructuringWithDefault(A)}),rest:this.transformDestructuring(E.expression)}),s):this.finishNode(new AST.ArrayAssignmentTarget({elements:o.map(function(A){return A&&r.transformDestructuringWithDefault(A)}),rest:null}),s)}return this.finishNode(new AST.ArrayExpression({elements:o}),s)}},{key:"parseObjectExpression",value:function(){var r=this,a=this.startNode();this.lex();for(var s=[];!this.match(_tokenizer.TokenType.RBRACE);){var o=!1;if(this.match(_tokenizer.TokenType.ELLIPSIS)){o=!0;var c=this.parseSpreadPropertyDefinition();s.push(c)}else{var l=this.inheritCoverGrammar(this.parsePropertyDefinition);s.push(l)}this.match(_tokenizer.TokenType.RBRACE)||(this.expect(_tokenizer.TokenType.COMMA),o&&(this.isBindingElement=this.isAssignmentTarget=!1))}if(this.expect(_tokenizer.TokenType.RBRACE),this.firstExprError){if(!this.isAssignmentTarget)throw this.createError(_errors$1.ErrorMessages.INVALID_LHS_IN_BINDING);var m=s[s.length-1];return m!=null&&m.type==="SpreadProperty"?this.finishNode(new AST.ObjectAssignmentTarget({properties:s.slice(0,-1).map(function(E){return r.transformDestructuringWithDefault(E)}),rest:this.transformDestructuring(m.expression)}),a):this.finishNode(new AST.ObjectAssignmentTarget({properties:s.map(function(E){return r.transformDestructuringWithDefault(E)}),rest:null}),a)}return this.finishNode(new AST.ObjectExpression({properties:s}),a)}},{key:"parseSpreadPropertyDefinition",value:function(){var r=this.startNode();this.expect(_tokenizer.TokenType.ELLIPSIS);var a=this.parseAssignmentExpression();return isValidSimpleAssignmentTarget(a)?a.type!=="IdentifierExpression"&&(this.isBindingElement=!1):this.isBindingElement=this.isAssignmentTarget=!1,this.finishNode(new AST.SpreadProperty({expression:a}),r)}},{key:"parsePropertyDefinition",value:function(){var r=this.getLocation(),a=this.startNode(),s=this.lookahead,o=this.parseMethodDefinition(),c=o.methodOrKey,l=o.kind;switch(l){case"method":return this.isBindingElement=this.isAssignmentTarget=!1,c;case"identifier":if(s.value==="await"&&this.firstAwaitLocation==null&&(this.firstAwaitLocation=this.getLocation()),this.eat(_tokenizer.TokenType.ASSIGN)){if(this.allowYieldExpression&&s.value==="yield")throw this.createError(_errors$1.ErrorMessages.ILLEGAL_YIELD_IDENTIFIER);if(this.allowAwaitExpression&&s.value==="await")throw this.createError(_errors$1.ErrorMessages.ILLEGAL_AWAIT_IDENTIFIER);var m=this.isolateCoverGrammar(this.parseAssignmentExpression);return this.firstExprError=this.createErrorWithLocation(r,_errors$1.ErrorMessages.ILLEGAL_PROPERTY),this.finishNode(new AST.AssignmentTargetPropertyIdentifier({binding:this.transformDestructuring(c),init:m}),a)}else if(!this.match(_tokenizer.TokenType.COLON)){if(this.allowYieldExpression&&s.value==="yield")throw this.createError(_errors$1.ErrorMessages.ILLEGAL_YIELD_IDENTIFIER);if(this.allowAwaitExpression&&s.value==="await")throw this.createError(_errors$1.ErrorMessages.ILLEGAL_AWAIT_IDENTIFIER);if(s.type===_tokenizer.TokenType.IDENTIFIER||s.value==="let"||s.value==="yield"||s.value==="async"||s.value==="await")return this.finishNode(new AST.ShorthandProperty({name:this.finishNode(new AST.IdentifierExpression({name:c.value}),a)}),a);throw this.createUnexpected(s)}}this.expect(_tokenizer.TokenType.COLON);var E=this.inheritCoverGrammar(this.parseAssignmentExpressionOrTarget);return this.firstExprError?this.finishNode(new AST.AssignmentTargetPropertyProperty({name:c,binding:E}),a):this.finishNode(new AST.DataProperty({name:c,expression:E}),a)}},{key:"parsePropertyName",value:function(){var r=this.lookahead,a=this.startNode();if(this.eof())throw this.createUnexpected(r);switch(r.type){case _tokenizer.TokenType.STRING:return{name:this.finishNode(new AST.StaticPropertyName({value:this.parseStringLiteral().value}),a),binding:null};case _tokenizer.TokenType.NUMBER:{var s=this.parseNumericLiteral();return{name:this.finishNode(new AST.StaticPropertyName({value:""+(s.type==="LiteralInfinityExpression"?1/0:s.value)}),a),binding:null}}case _tokenizer.TokenType.LBRACK:{this.lex();var o=this.parseAssignmentExpression();return this.expect(_tokenizer.TokenType.RBRACK),{name:this.finishNode(new AST.ComputedPropertyName({expression:o}),a),binding:null}}}var c=this.parseIdentifierName();return{name:this.finishNode(new AST.StaticPropertyName({value:c}),a),binding:this.finishNode(new AST.BindingIdentifier({name:c}),a)}}},{key:"lookaheadPropertyName",value:function(){switch(this.lookahead.type){case _tokenizer.TokenType.NUMBER:case _tokenizer.TokenType.STRING:case _tokenizer.TokenType.LBRACK:return!0;default:return this.lookahead.type.klass.isIdentifierName}}},{key:"parseMethodDefinition",value:function(){var r=this.lookahead,a=this.startNode(),s=this.saveLexerState(),o=!!this.eat(_tokenizer.TokenType.ASYNC);o&&this.hasLineTerminatorBeforeNext&&(o=!1,this.restoreLexerState(s));var c=!!this.eat(_tokenizer.TokenType.MUL);o&&!this.lookaheadPropertyName()&&(o=!1,c=!1,this.restoreLexerState(s));var l=this.parsePropertyName(),m=l.name;if(!c&&!o&&r.type===_tokenizer.TokenType.IDENTIFIER&&r.value.length===3){if(r.value==="get"&&this.lookaheadPropertyName()&&!r.escaped){var E=this.parsePropertyName();m=E.name,this.expect(_tokenizer.TokenType.LPAREN),this.expect(_tokenizer.TokenType.RPAREN);var A=this.allowYieldExpression,_=this.allowAwaitExpression,v=this.firstAwaitLocation;this.allowYieldExpression=!1,this.allowAwaitExpression=!1,this.firstAwaitLocation=null;var S=this.parseFunctionBody();return this.allowYieldExpression=A,this.allowAwaitExpression=_,this.firstAwaitLocation=v,{methodOrKey:this.finishNode(new AST.Getter({name:m,body:S}),a),kind:"method"}}else if(r.value==="set"&&this.lookaheadPropertyName()&&!r.escaped){var g=this.parsePropertyName();m=g.name,this.expect(_tokenizer.TokenType.LPAREN);var D=this.allowYieldExpression,x=this.allowAwaitExpression,k=this.firstAwaitLocation;this.allowYieldExpression=!1,this.allowAwaitExpression=!1,this.firstAwaitLocation=null;var N=this.parseBindingElement();this.expect(_tokenizer.TokenType.RPAREN);var j=this.parseFunctionBody();return this.allowYieldExpression=D,this.allowAwaitExpression=x,this.firstAwaitLocation=k,{methodOrKey:this.finishNode(new AST.Setter({name:m,param:N,body:j}),a),kind:"method"}}}if(o){var O=this.allowYieldExpression,$=this.allowAwaitExpression;this.allowYieldExpression=c,this.allowAwaitExpression=!0;var R=this.parseParams();this.allowYieldExpression=c,this.allowAwaitExpression=!0;var B=this.parseFunctionBody();return this.allowYieldExpression=O,this.allowAwaitExpression=$,{methodOrKey:this.finishNode(new AST.Method({isAsync:o,isGenerator:c,name:m,params:R,body:B}),a),kind:"method"}}if(this.match(_tokenizer.TokenType.LPAREN)){var b=this.allowYieldExpression,G=this.allowAwaitExpression,U=this.firstAwaitLocation;this.allowYieldExpression=c,this.allowAwaitExpression=!1,this.firstAwaitLocation=null;var L=this.parseParams(),w=this.parseFunctionBody();return this.allowYieldExpression=b,this.allowAwaitExpression=G,this.firstAwaitLocation=U,{methodOrKey:this.finishNode(new AST.Method({isAsync:o,isGenerator:c,name:m,params:L,body:w}),a),kind:"method"}}if(c&&this.match(_tokenizer.TokenType.COLON))throw this.createUnexpected(this.lookahead);return{methodOrKey:m,kind:r.type.klass.isIdentifierName?"identifier":"property",escaped:r.escaped}}},{key:"parseClass",value:function(r){var a=this,s=r.isExpr,o=r.inDefault,c=this.startNode();this.lex();var l=null,m=null;if(this.matchIdentifier())l=this.parseBindingIdentifier();else if(!s)if(o)l=new AST.BindingIdentifier({name:"*default*"});else throw this.createUnexpected(this.lookahead);this.eat(_tokenizer.TokenType.EXTENDS)&&(m=this.isolateCoverGrammar(function(){return a.parseLeftHandSideExpression({allowCall:!0})})),this.expect(_tokenizer.TokenType.LBRACE);for(var E=[];!this.eat(_tokenizer.TokenType.RBRACE);)if(!this.eat(_tokenizer.TokenType.SEMICOLON)){var A=!1,_=this.startNode(),v=this.parseMethodDefinition(),S=v.methodOrKey,g=v.kind,D=v.escaped;if(g==="identifier"&&S.value==="static"&&!D){A=!0;var x=this.parseMethodDefinition();S=x.methodOrKey,g=x.kind}if(g==="method")E.push(this.finishNode(new AST.ClassElement({isStatic:A,method:S}),_));else throw this.createError("Only methods are allowed in classes")}return this.finishNode(new(s?AST.ClassExpression:AST.ClassDeclaration)({name:l,super:m,elements:E}),c)}},{key:"parseFunction",value:function(r){var a=r.isExpr,s=r.inDefault,o=r.allowGenerator,c=r.isAsync,l=r.startState,m=l===void 0?this.startNode():l;this.lex();var E=null,A=o&&!!this.eat(_tokenizer.TokenType.MUL),_=this.allowYieldExpression,v=this.allowAwaitExpression,S=this.firstAwaitLocation;if(a&&(this.allowYieldExpression=A,this.allowAwaitExpression=c),!this.match(_tokenizer.TokenType.LPAREN))E=this.parseBindingIdentifier();else if(!a)if(s)E=new AST.BindingIdentifier({name:"*default*"});else throw this.createUnexpected(this.lookahead);this.allowYieldExpression=A,this.allowAwaitExpression=c,this.firstAwaitLocation=null;var g=this.parseParams(),D=this.parseFunctionBody();return this.allowYieldExpression=_,this.allowAwaitExpression=v,this.firstAwaitLocation=S,this.finishNode(new(a?AST.FunctionExpression:AST.FunctionDeclaration)({isAsync:c,isGenerator:A,name:E,params:g,body:D}),m)}},{key:"parseArrayBinding",value:function(){var r=this.startNode();this.expect(_tokenizer.TokenType.LBRACK);for(var a=[],s=null;!this.match(_tokenizer.TokenType.RBRACK);){var o=void 0;if(this.eat(_tokenizer.TokenType.COMMA))o=null;else{if(this.eat(_tokenizer.TokenType.ELLIPSIS)){s=this.parseBindingTarget();break}else o=this.parseBindingElement();this.match(_tokenizer.TokenType.RBRACK)||this.expect(_tokenizer.TokenType.COMMA)}a.push(o)}return this.expect(_tokenizer.TokenType.RBRACK),this.finishNode(new AST.ArrayBinding({elements:a,rest:s}),r)}},{key:"parseBindingProperty",value:function(){var r=this.startNode(),a=this.matchIdentifier(),s=this.lookahead,o=this.parsePropertyName(),c=o.name,l=o.binding;if(a&&c.type==="StaticPropertyName"&&!this.match(_tokenizer.TokenType.COLON)){if(this.allowYieldExpression&&s.value==="yield")throw this.createError(_errors$1.ErrorMessages.ILLEGAL_YIELD_IDENTIFIER);if(this.allowAwaitExpression&&s.value==="await")throw this.createError(_errors$1.ErrorMessages.ILLEGAL_AWAIT_IDENTIFIER);var m=null;return this.eat(_tokenizer.TokenType.ASSIGN)&&(m=this.parseAssignmentExpression()),this.finishNode(new AST.BindingPropertyIdentifier({binding:l,init:m}),r)}return this.expect(_tokenizer.TokenType.COLON),l=this.parseBindingElement(),this.finishNode(new AST.BindingPropertyProperty({name:c,binding:l}),r)}},{key:"parseObjectBinding",value:function(){var r=this.startNode();this.expect(_tokenizer.TokenType.LBRACE);for(var a=[],s=null;!this.match(_tokenizer.TokenType.RBRACE);){if(this.eat(_tokenizer.TokenType.ELLIPSIS)){s=this.parseBindingIdentifier();break}a.push(this.parseBindingProperty()),this.match(_tokenizer.TokenType.RBRACE)||this.expect(_tokenizer.TokenType.COMMA)}return this.expect(_tokenizer.TokenType.RBRACE),this.finishNode(new AST.ObjectBinding({properties:a,rest:s}),r)}},{key:"parseBindingTarget",value:function(){if(this.matchIdentifier())return this.parseBindingIdentifier();switch(this.lookahead.type){case _tokenizer.TokenType.LBRACK:return this.parseArrayBinding();case _tokenizer.TokenType.LBRACE:return this.parseObjectBinding()}throw this.createUnexpected(this.lookahead)}},{key:"parseBindingElement",value:function(){var r=this.startNode(),a=this.parseBindingTarget();if(this.eat(_tokenizer.TokenType.ASSIGN)){var s=this.parseAssignmentExpression();a=this.finishNode(new AST.BindingWithDefault({binding:a,init:s}),r)}return a}},{key:"parseParam",value:function(){var r=this.inParameter;this.inParameter=!0;var a=this.parseBindingElement();return this.inParameter=r,a}},{key:"parseParams",value:function(){var r=this.startNode();this.expect(_tokenizer.TokenType.LPAREN);for(var a=[],s=null;!this.match(_tokenizer.TokenType.RPAREN);){if(this.eat(_tokenizer.TokenType.ELLIPSIS)){if(s=this.parseBindingTarget(),this.lookahead.type===_tokenizer.TokenType.ASSIGN)throw this.createError(_errors$1.ErrorMessages.UNEXPECTED_REST_PARAMETERS_INITIALIZATION);if(this.match(_tokenizer.TokenType.COMMA))throw this.createError(_errors$1.ErrorMessages.UNEXPECTED_COMMA_AFTER_REST);break}if(a.push(this.parseParam()),this.match(_tokenizer.TokenType.RPAREN))break;this.expect(_tokenizer.TokenType.COMMA)}return this.expect(_tokenizer.TokenType.RPAREN),this.finishNode(new AST.FormalParameters({items:a,rest:s}),r)}}]),n}(_tokenizer2.default);const parser=_mergeNamespaces({__proto__:null,get GenericParser(){return GenericParser_1},default:parser$1},[parser$1]),require$$1$4=getAugmentedNamespace(parser);var earlyErrors$1={},dist$6={},director$3={};Object.defineProperty(director$3,"__esModule",{value:!0});var reduce_1=director$3.reduce=reduce,director$1={ArrayAssignmentTarget:function u(n,e){var r=this;return n.reduceArrayAssignmentTarget(e,{elements:e.elements.map(function(a){return a&&r[a.type](n,a)}),rest:e.rest&&this[e.rest.type](n,e.rest)})},ArrayBinding:function u(n,e){var r=this;return n.reduceArrayBinding(e,{elements:e.elements.map(function(a){return a&&r[a.type](n,a)}),rest:e.rest&&this[e.rest.type](n,e.rest)})},ArrayExpression:function u(n,e){var r=this;return n.reduceArrayExpression(e,{elements:e.elements.map(function(a){return a&&r[a.type](n,a)})})},ArrowExpression:function u(n,e){return n.reduceArrowExpression(e,{params:this.FormalParameters(n,e.params),body:this[e.body.type](n,e.body)})},AssignmentExpression:function u(n,e){return n.reduceAssignmentExpression(e,{binding:this[e.binding.type](n,e.binding),expression:this[e.expression.type](n,e.expression)})},AssignmentTargetIdentifier:function u(n,e){return n.reduceAssignmentTargetIdentifier(e)},AssignmentTargetPropertyIdentifier:function u(n,e){return n.reduceAssignmentTargetPropertyIdentifier(e,{binding:this.AssignmentTargetIdentifier(n,e.binding),init:e.init&&this[e.init.type](n,e.init)})},AssignmentTargetPropertyProperty:function u(n,e){return n.reduceAssignmentTargetPropertyProperty(e,{name:this[e.name.type](n,e.name),binding:this[e.binding.type](n,e.binding)})},AssignmentTargetWithDefault:function u(n,e){return n.reduceAssignmentTargetWithDefault(e,{binding:this[e.binding.type](n,e.binding),init:this[e.init.type](n,e.init)})},AwaitExpression:function u(n,e){return n.reduceAwaitExpression(e,{expression:this[e.expression.type](n,e.expression)})},BinaryExpression:function u(n,e){return n.reduceBinaryExpression(e,{left:this[e.left.type](n,e.left),right:this[e.right.type](n,e.right)})},BindingIdentifier:function u(n,e){return n.reduceBindingIdentifier(e)},BindingPropertyIdentifier:function u(n,e){return n.reduceBindingPropertyIdentifier(e,{binding:this.BindingIdentifier(n,e.binding),init:e.init&&this[e.init.type](n,e.init)})},BindingPropertyProperty:function u(n,e){return n.reduceBindingPropertyProperty(e,{name:this[e.name.type](n,e.name),binding:this[e.binding.type](n,e.binding)})},BindingWithDefault:function u(n,e){return n.reduceBindingWithDefault(e,{binding:this[e.binding.type](n,e.binding),init:this[e.init.type](n,e.init)})},Block:function u(n,e){var r=this;return n.reduceBlock(e,{statements:e.statements.map(function(a){return r[a.type](n,a)})})},BlockStatement:function u(n,e){return n.reduceBlockStatement(e,{block:this.Block(n,e.block)})},BreakStatement:function u(n,e){return n.reduceBreakStatement(e)},CallExpression:function u(n,e){var r=this;return n.reduceCallExpression(e,{callee:this[e.callee.type](n,e.callee),arguments:e.arguments.map(function(a){return r[a.type](n,a)})})},CatchClause:function u(n,e){return n.reduceCatchClause(e,{binding:this[e.binding.type](n,e.binding),body:this.Block(n,e.body)})},ClassDeclaration:function u(n,e){var r=this;return n.reduceClassDeclaration(e,{name:this.BindingIdentifier(n,e.name),super:e.super&&this[e.super.type](n,e.super),elements:e.elements.map(function(a){return r.ClassElement(n,a)})})},ClassElement:function u(n,e){return n.reduceClassElement(e,{method:this[e.method.type](n,e.method)})},ClassExpression:function u(n,e){var r=this;return n.reduceClassExpression(e,{name:e.name&&this.BindingIdentifier(n,e.name),super:e.super&&this[e.super.type](n,e.super),elements:e.elements.map(function(a){return r.ClassElement(n,a)})})},CompoundAssignmentExpression:function u(n,e){return n.reduceCompoundAssignmentExpression(e,{binding:this[e.binding.type](n,e.binding),expression:this[e.expression.type](n,e.expression)})},ComputedMemberAssignmentTarget:function u(n,e){return n.reduceComputedMemberAssignmentTarget(e,{object:this[e.object.type](n,e.object),expression:this[e.expression.type](n,e.expression)})},ComputedMemberExpression:function u(n,e){return n.reduceComputedMemberExpression(e,{object:this[e.object.type](n,e.object),expression:this[e.expression.type](n,e.expression)})},ComputedPropertyName:function u(n,e){return n.reduceComputedPropertyName(e,{expression:this[e.expression.type](n,e.expression)})},ConditionalExpression:function u(n,e){return n.reduceConditionalExpression(e,{test:this[e.test.type](n,e.test),consequent:this[e.consequent.type](n,e.consequent),alternate:this[e.alternate.type](n,e.alternate)})},ContinueStatement:function u(n,e){return n.reduceContinueStatement(e)},DataProperty:function u(n,e){return n.reduceDataProperty(e,{name:this[e.name.type](n,e.name),expression:this[e.expression.type](n,e.expression)})},DebuggerStatement:function u(n,e){return n.reduceDebuggerStatement(e)},Directive:function u(n,e){return n.reduceDirective(e)},DoWhileStatement:function u(n,e){return n.reduceDoWhileStatement(e,{body:this[e.body.type](n,e.body),test:this[e.test.type](n,e.test)})},EmptyStatement:function u(n,e){return n.reduceEmptyStatement(e)},Export:function u(n,e){return n.reduceExport(e,{declaration:this[e.declaration.type](n,e.declaration)})},ExportAllFrom:function u(n,e){return n.reduceExportAllFrom(e)},ExportDefault:function u(n,e){return n.reduceExportDefault(e,{body:this[e.body.type](n,e.body)})},ExportFrom:function u(n,e){var r=this;return n.reduceExportFrom(e,{namedExports:e.namedExports.map(function(a){return r.ExportFromSpecifier(n,a)})})},ExportFromSpecifier:function u(n,e){return n.reduceExportFromSpecifier(e)},ExportLocalSpecifier:function u(n,e){return n.reduceExportLocalSpecifier(e,{name:this.IdentifierExpression(n,e.name)})},ExportLocals:function u(n,e){var r=this;return n.reduceExportLocals(e,{namedExports:e.namedExports.map(function(a){return r.ExportLocalSpecifier(n,a)})})},ExpressionStatement:function u(n,e){return n.reduceExpressionStatement(e,{expression:this[e.expression.type](n,e.expression)})},ForAwaitStatement:function u(n,e){return n.reduceForAwaitStatement(e,{left:this[e.left.type](n,e.left),right:this[e.right.type](n,e.right),body:this[e.body.type](n,e.body)})},ForInStatement:function u(n,e){return n.reduceForInStatement(e,{left:this[e.left.type](n,e.left),right:this[e.right.type](n,e.right),body:this[e.body.type](n,e.body)})},ForOfStatement:function u(n,e){return n.reduceForOfStatement(e,{left:this[e.left.type](n,e.left),right:this[e.right.type](n,e.right),body:this[e.body.type](n,e.body)})},ForStatement:function u(n,e){return n.reduceForStatement(e,{init:e.init&&this[e.init.type](n,e.init),test:e.test&&this[e.test.type](n,e.test),update:e.update&&this[e.update.type](n,e.update),body:this[e.body.type](n,e.body)})},FormalParameters:function u(n,e){var r=this;return n.reduceFormalParameters(e,{items:e.items.map(function(a){return r[a.type](n,a)}),rest:e.rest&&this[e.rest.type](n,e.rest)})},FunctionBody:function u(n,e){var r=this;return n.reduceFunctionBody(e,{directives:e.directives.map(function(a){return r.Directive(n,a)}),statements:e.statements.map(function(a){return r[a.type](n,a)})})},FunctionDeclaration:function u(n,e){return n.reduceFunctionDeclaration(e,{name:this.BindingIdentifier(n,e.name),params:this.FormalParameters(n,e.params),body:this.FunctionBody(n,e.body)})},FunctionExpression:function u(n,e){return n.reduceFunctionExpression(e,{name:e.name&&this.BindingIdentifier(n,e.name),params:this.FormalParameters(n,e.params),body:this.FunctionBody(n,e.body)})},Getter:function u(n,e){return n.reduceGetter(e,{name:this[e.name.type](n,e.name),body:this.FunctionBody(n,e.body)})},IdentifierExpression:function u(n,e){return n.reduceIdentifierExpression(e)},IfStatement:function u(n,e){return n.reduceIfStatement(e,{test:this[e.test.type](n,e.test),consequent:this[e.consequent.type](n,e.consequent),alternate:e.alternate&&this[e.alternate.type](n,e.alternate)})},Import:function u(n,e){var r=this;return n.reduceImport(e,{defaultBinding:e.defaultBinding&&this.BindingIdentifier(n,e.defaultBinding),namedImports:e.namedImports.map(function(a){return r.ImportSpecifier(n,a)})})},ImportNamespace:function u(n,e){return n.reduceImportNamespace(e,{defaultBinding:e.defaultBinding&&this.BindingIdentifier(n,e.defaultBinding),namespaceBinding:this.BindingIdentifier(n,e.namespaceBinding)})},ImportSpecifier:function u(n,e){return n.reduceImportSpecifier(e,{binding:this.BindingIdentifier(n,e.binding)})},LabeledStatement:function u(n,e){return n.reduceLabeledStatement(e,{body:this[e.body.type](n,e.body)})},LiteralBooleanExpression:function u(n,e){return n.reduceLiteralBooleanExpression(e)},LiteralInfinityExpression:function u(n,e){return n.reduceLiteralInfinityExpression(e)},LiteralNullExpression:function u(n,e){return n.reduceLiteralNullExpression(e)},LiteralNumericExpression:function u(n,e){return n.reduceLiteralNumericExpression(e)},LiteralRegExpExpression:function u(n,e){return n.reduceLiteralRegExpExpression(e)},LiteralStringExpression:function u(n,e){return n.reduceLiteralStringExpression(e)},Method:function u(n,e){return n.reduceMethod(e,{name:this[e.name.type](n,e.name),params:this.FormalParameters(n,e.params),body:this.FunctionBody(n,e.body)})},Module:function u(n,e){var r=this;return n.reduceModule(e,{directives:e.directives.map(function(a){return r.Directive(n,a)}),items:e.items.map(function(a){return r[a.type](n,a)})})},NewExpression:function u(n,e){var r=this;return n.reduceNewExpression(e,{callee:this[e.callee.type](n,e.callee),arguments:e.arguments.map(function(a){return r[a.type](n,a)})})},NewTargetExpression:function u(n,e){return n.reduceNewTargetExpression(e)},ObjectAssignmentTarget:function u(n,e){var r=this;return n.reduceObjectAssignmentTarget(e,{properties:e.properties.map(function(a){return r[a.type](n,a)}),rest:e.rest&&this[e.rest.type](n,e.rest)})},ObjectBinding:function u(n,e){var r=this;return n.reduceObjectBinding(e,{properties:e.properties.map(function(a){return r[a.type](n,a)}),rest:e.rest&&this[e.rest.type](n,e.rest)})},ObjectExpression:function u(n,e){var r=this;return n.reduceObjectExpression(e,{properties:e.properties.map(function(a){return r[a.type](n,a)})})},ReturnStatement:function u(n,e){return n.reduceReturnStatement(e,{expression:e.expression&&this[e.expression.type](n,e.expression)})},Script:function u(n,e){var r=this;return n.reduceScript(e,{directives:e.directives.map(function(a){return r.Directive(n,a)}),statements:e.statements.map(function(a){return r[a.type](n,a)})})},Setter:function u(n,e){return n.reduceSetter(e,{name:this[e.name.type](n,e.name),param:this[e.param.type](n,e.param),body:this.FunctionBody(n,e.body)})},ShorthandProperty:function u(n,e){return n.reduceShorthandProperty(e,{name:this.IdentifierExpression(n,e.name)})},SpreadElement:function u(n,e){return n.reduceSpreadElement(e,{expression:this[e.expression.type](n,e.expression)})},SpreadProperty:function u(n,e){return n.reduceSpreadProperty(e,{expression:this[e.expression.type](n,e.expression)})},StaticMemberAssignmentTarget:function u(n,e){return n.reduceStaticMemberAssignmentTarget(e,{object:this[e.object.type](n,e.object)})},StaticMemberExpression:function u(n,e){return n.reduceStaticMemberExpression(e,{object:this[e.object.type](n,e.object)})},StaticPropertyName:function u(n,e){return n.reduceStaticPropertyName(e)},Super:function u(n,e){return n.reduceSuper(e)},SwitchCase:function u(n,e){var r=this;return n.reduceSwitchCase(e,{test:this[e.test.type](n,e.test),consequent:e.consequent.map(function(a){return r[a.type](n,a)})})},SwitchDefault:function u(n,e){var r=this;return n.reduceSwitchDefault(e,{consequent:e.consequent.map(function(a){return r[a.type](n,a)})})},SwitchStatement:function u(n,e){var r=this;return n.reduceSwitchStatement(e,{discriminant:this[e.discriminant.type](n,e.discriminant),cases:e.cases.map(function(a){return r.SwitchCase(n,a)})})},SwitchStatementWithDefault:function u(n,e){var r=this;return n.reduceSwitchStatementWithDefault(e,{discriminant:this[e.discriminant.type](n,e.discriminant),preDefaultCases:e.preDefaultCases.map(function(a){return r.SwitchCase(n,a)}),defaultCase:this.SwitchDefault(n,e.defaultCase),postDefaultCases:e.postDefaultCases.map(function(a){return r.SwitchCase(n,a)})})},TemplateElement:function u(n,e){return n.reduceTemplateElement(e)},TemplateExpression:function u(n,e){var r=this;return n.reduceTemplateExpression(e,{tag:e.tag&&this[e.tag.type](n,e.tag),elements:e.elements.map(function(a){return r[a.type](n,a)})})},ThisExpression:function u(n,e){return n.reduceThisExpression(e)},ThrowStatement:function u(n,e){return n.reduceThrowStatement(e,{expression:this[e.expression.type](n,e.expression)})},TryCatchStatement:function u(n,e){return n.reduceTryCatchStatement(e,{body:this.Block(n,e.body),catchClause:this.CatchClause(n,e.catchClause)})},TryFinallyStatement:function u(n,e){return n.reduceTryFinallyStatement(e,{body:this.Block(n,e.body),catchClause:e.catchClause&&this.CatchClause(n,e.catchClause),finalizer:this.Block(n,e.finalizer)})},UnaryExpression:function u(n,e){return n.reduceUnaryExpression(e,{operand:this[e.operand.type](n,e.operand)})},UpdateExpression:function u(n,e){return n.reduceUpdateExpression(e,{operand:this[e.operand.type](n,e.operand)})},VariableDeclaration:function u(n,e){var r=this;return n.reduceVariableDeclaration(e,{declarators:e.declarators.map(function(a){return r.VariableDeclarator(n,a)})})},VariableDeclarationStatement:function u(n,e){return n.reduceVariableDeclarationStatement(e,{declaration:this.VariableDeclaration(n,e.declaration)})},VariableDeclarator:function u(n,e){return n.reduceVariableDeclarator(e,{binding:this[e.binding.type](n,e.binding),init:e.init&&this[e.init.type](n,e.init)})},WhileStatement:function u(n,e){return n.reduceWhileStatement(e,{test:this[e.test.type](n,e.test),body:this[e.body.type](n,e.body)})},WithStatement:function u(n,e){return n.reduceWithStatement(e,{object:this[e.object.type](n,e.object),body:this[e.body.type](n,e.body)})},YieldExpression:function u(n,e){return n.reduceYieldExpression(e,{expression:e.expression&&this[e.expression.type](n,e.expression)})},YieldGeneratorExpression:function u(n,e){return n.reduceYieldGeneratorExpression(e,{expression:this[e.expression.type](n,e.expression)})}};function reduce(u,n){return director$1[n.type](u,n)}const director$2=_mergeNamespaces({__proto__:null,reduce:reduce_1,default:director$3},[director$3]),require$$0$6=getAugmentedNamespace(director$2);var thunkedDirector$1={};Object.defineProperty(thunkedDirector$1,"__esModule",{value:!0});var thunkedReduce_1=thunkedDirector$1.thunkedReduce=thunkedReduce,director={ArrayAssignmentTarget:function u(n,e){var r=this;return n.reduceArrayAssignmentTarget(e,{elements:e.elements.map(function(a){return a&&function(){return r[a.type](n,a)}}),rest:e.rest&&function(){return r[e.rest.type](n,e.rest)}})},ArrayBinding:function u(n,e){var r=this;return n.reduceArrayBinding(e,{elements:e.elements.map(function(a){return a&&function(){return r[a.type](n,a)}}),rest:e.rest&&function(){return r[e.rest.type](n,e.rest)}})},ArrayExpression:function u(n,e){var r=this;return n.reduceArrayExpression(e,{elements:e.elements.map(function(a){return a&&function(){return r[a.type](n,a)}})})},ArrowExpression:function u(n,e){var r=this;return n.reduceArrowExpression(e,{params:function(){return r.FormalParameters(n,e.params)},body:function(){return r[e.body.type](n,e.body)}})},AssignmentExpression:function u(n,e){var r=this;return n.reduceAssignmentExpression(e,{binding:function(){return r[e.binding.type](n,e.binding)},expression:function(){return r[e.expression.type](n,e.expression)}})},AssignmentTargetIdentifier:function u(n,e){return n.reduceAssignmentTargetIdentifier(e)},AssignmentTargetPropertyIdentifier:function u(n,e){var r=this;return n.reduceAssignmentTargetPropertyIdentifier(e,{binding:function(){return r.AssignmentTargetIdentifier(n,e.binding)},init:e.init&&function(){return r[e.init.type](n,e.init)}})},AssignmentTargetPropertyProperty:function u(n,e){var r=this;return n.reduceAssignmentTargetPropertyProperty(e,{name:function(){return r[e.name.type](n,e.name)},binding:function(){return r[e.binding.type](n,e.binding)}})},AssignmentTargetWithDefault:function u(n,e){var r=this;return n.reduceAssignmentTargetWithDefault(e,{binding:function(){return r[e.binding.type](n,e.binding)},init:function(){return r[e.init.type](n,e.init)}})},AwaitExpression:function u(n,e){var r=this;return n.reduceAwaitExpression(e,{expression:function(){return r[e.expression.type](n,e.expression)}})},BinaryExpression:function u(n,e){var r=this;return n.reduceBinaryExpression(e,{left:function(){return r[e.left.type](n,e.left)},right:function(){return r[e.right.type](n,e.right)}})},BindingIdentifier:function u(n,e){return n.reduceBindingIdentifier(e)},BindingPropertyIdentifier:function u(n,e){var r=this;return n.reduceBindingPropertyIdentifier(e,{binding:function(){return r.BindingIdentifier(n,e.binding)},init:e.init&&function(){return r[e.init.type](n,e.init)}})},BindingPropertyProperty:function u(n,e){var r=this;return n.reduceBindingPropertyProperty(e,{name:function(){return r[e.name.type](n,e.name)},binding:function(){return r[e.binding.type](n,e.binding)}})},BindingWithDefault:function u(n,e){var r=this;return n.reduceBindingWithDefault(e,{binding:function(){return r[e.binding.type](n,e.binding)},init:function(){return r[e.init.type](n,e.init)}})},Block:function u(n,e){var r=this;return n.reduceBlock(e,{statements:e.statements.map(function(a){return function(){return r[a.type](n,a)}})})},BlockStatement:function u(n,e){var r=this;return n.reduceBlockStatement(e,{block:function(){return r.Block(n,e.block)}})},BreakStatement:function u(n,e){return n.reduceBreakStatement(e)},CallExpression:function u(n,e){var r=this;return n.reduceCallExpression(e,{callee:function(){return r[e.callee.type](n,e.callee)},arguments:e.arguments.map(function(a){return function(){return r[a.type](n,a)}})})},CatchClause:function u(n,e){var r=this;return n.reduceCatchClause(e,{binding:function(){return r[e.binding.type](n,e.binding)},body:function(){return r.Block(n,e.body)}})},ClassDeclaration:function u(n,e){var r=this;return n.reduceClassDeclaration(e,{name:function(){return r.BindingIdentifier(n,e.name)},super:e.super&&function(){return r[e.super.type](n,e.super)},elements:e.elements.map(function(a){return function(){return r.ClassElement(n,a)}})})},ClassElement:function u(n,e){var r=this;return n.reduceClassElement(e,{method:function(){return r[e.method.type](n,e.method)}})},ClassExpression:function u(n,e){var r=this;return n.reduceClassExpression(e,{name:e.name&&function(){return r.BindingIdentifier(n,e.name)},super:e.super&&function(){return r[e.super.type](n,e.super)},elements:e.elements.map(function(a){return function(){return r.ClassElement(n,a)}})})},CompoundAssignmentExpression:function u(n,e){var r=this;return n.reduceCompoundAssignmentExpression(e,{binding:function(){return r[e.binding.type](n,e.binding)},expression:function(){return r[e.expression.type](n,e.expression)}})},ComputedMemberAssignmentTarget:function u(n,e){var r=this;return n.reduceComputedMemberAssignmentTarget(e,{object:function(){return r[e.object.type](n,e.object)},expression:function(){return r[e.expression.type](n,e.expression)}})},ComputedMemberExpression:function u(n,e){var r=this;return n.reduceComputedMemberExpression(e,{object:function(){return r[e.object.type](n,e.object)},expression:function(){return r[e.expression.type](n,e.expression)}})},ComputedPropertyName:function u(n,e){var r=this;return n.reduceComputedPropertyName(e,{expression:function(){return r[e.expression.type](n,e.expression)}})},ConditionalExpression:function u(n,e){var r=this;return n.reduceConditionalExpression(e,{test:function(){return r[e.test.type](n,e.test)},consequent:function(){return r[e.consequent.type](n,e.consequent)},alternate:function(){return r[e.alternate.type](n,e.alternate)}})},ContinueStatement:function u(n,e){return n.reduceContinueStatement(e)},DataProperty:function u(n,e){var r=this;return n.reduceDataProperty(e,{name:function(){return r[e.name.type](n,e.name)},expression:function(){return r[e.expression.type](n,e.expression)}})},DebuggerStatement:function u(n,e){return n.reduceDebuggerStatement(e)},Directive:function u(n,e){return n.reduceDirective(e)},DoWhileStatement:function u(n,e){var r=this;return n.reduceDoWhileStatement(e,{body:function(){return r[e.body.type](n,e.body)},test:function(){return r[e.test.type](n,e.test)}})},EmptyStatement:function u(n,e){return n.reduceEmptyStatement(e)},Export:function u(n,e){var r=this;return n.reduceExport(e,{declaration:function(){return r[e.declaration.type](n,e.declaration)}})},ExportAllFrom:function u(n,e){return n.reduceExportAllFrom(e)},ExportDefault:function u(n,e){var r=this;return n.reduceExportDefault(e,{body:function(){return r[e.body.type](n,e.body)}})},ExportFrom:function u(n,e){var r=this;return n.reduceExportFrom(e,{namedExports:e.namedExports.map(function(a){return function(){return r.ExportFromSpecifier(n,a)}})})},ExportFromSpecifier:function u(n,e){return n.reduceExportFromSpecifier(e)},ExportLocalSpecifier:function u(n,e){var r=this;return n.reduceExportLocalSpecifier(e,{name:function(){return r.IdentifierExpression(n,e.name)}})},ExportLocals:function u(n,e){var r=this;return n.reduceExportLocals(e,{namedExports:e.namedExports.map(function(a){return function(){return r.ExportLocalSpecifier(n,a)}})})},ExpressionStatement:function u(n,e){var r=this;return n.reduceExpressionStatement(e,{expression:function(){return r[e.expression.type](n,e.expression)}})},ForAwaitStatement:function u(n,e){var r=this;return n.reduceForAwaitStatement(e,{left:function(){return r[e.left.type](n,e.left)},right:function(){return r[e.right.type](n,e.right)},body:function(){return r[e.body.type](n,e.body)}})},ForInStatement:function u(n,e){var r=this;return n.reduceForInStatement(e,{left:function(){return r[e.left.type](n,e.left)},right:function(){return r[e.right.type](n,e.right)},body:function(){return r[e.body.type](n,e.body)}})},ForOfStatement:function u(n,e){var r=this;return n.reduceForOfStatement(e,{left:function(){return r[e.left.type](n,e.left)},right:function(){return r[e.right.type](n,e.right)},body:function(){return r[e.body.type](n,e.body)}})},ForStatement:function u(n,e){var r=this;return n.reduceForStatement(e,{init:e.init&&function(){return r[e.init.type](n,e.init)},test:e.test&&function(){return r[e.test.type](n,e.test)},update:e.update&&function(){return r[e.update.type](n,e.update)},body:function(){return r[e.body.type](n,e.body)}})},FormalParameters:function u(n,e){var r=this;return n.reduceFormalParameters(e,{items:e.items.map(function(a){return function(){return r[a.type](n,a)}}),rest:e.rest&&function(){return r[e.rest.type](n,e.rest)}})},FunctionBody:function u(n,e){var r=this;return n.reduceFunctionBody(e,{directives:e.directives.map(function(a){return function(){return r.Directive(n,a)}}),statements:e.statements.map(function(a){return function(){return r[a.type](n,a)}})})},FunctionDeclaration:function u(n,e){var r=this;return n.reduceFunctionDeclaration(e,{name:function(){return r.BindingIdentifier(n,e.name)},params:function(){return r.FormalParameters(n,e.params)},body:function(){return r.FunctionBody(n,e.body)}})},FunctionExpression:function u(n,e){var r=this;return n.reduceFunctionExpression(e,{name:e.name&&function(){return r.BindingIdentifier(n,e.name)},params:function(){return r.FormalParameters(n,e.params)},body:function(){return r.FunctionBody(n,e.body)}})},Getter:function u(n,e){var r=this;return n.reduceGetter(e,{name:function(){return r[e.name.type](n,e.name)},body:function(){return r.FunctionBody(n,e.body)}})},IdentifierExpression:function u(n,e){return n.reduceIdentifierExpression(e)},IfStatement:function u(n,e){var r=this;return n.reduceIfStatement(e,{test:function(){return r[e.test.type](n,e.test)},consequent:function(){return r[e.consequent.type](n,e.consequent)},alternate:e.alternate&&function(){return r[e.alternate.type](n,e.alternate)}})},Import:function u(n,e){var r=this;return n.reduceImport(e,{defaultBinding:e.defaultBinding&&function(){return r.BindingIdentifier(n,e.defaultBinding)},namedImports:e.namedImports.map(function(a){return function(){return r.ImportSpecifier(n,a)}})})},ImportNamespace:function u(n,e){var r=this;return n.reduceImportNamespace(e,{defaultBinding:e.defaultBinding&&function(){return r.BindingIdentifier(n,e.defaultBinding)},namespaceBinding:function(){return r.BindingIdentifier(n,e.namespaceBinding)}})},ImportSpecifier:function u(n,e){var r=this;return n.reduceImportSpecifier(e,{binding:function(){return r.BindingIdentifier(n,e.binding)}})},LabeledStatement:function u(n,e){var r=this;return n.reduceLabeledStatement(e,{body:function(){return r[e.body.type](n,e.body)}})},LiteralBooleanExpression:function u(n,e){return n.reduceLiteralBooleanExpression(e)},LiteralInfinityExpression:function u(n,e){return n.reduceLiteralInfinityExpression(e)},LiteralNullExpression:function u(n,e){return n.reduceLiteralNullExpression(e)},LiteralNumericExpression:function u(n,e){return n.reduceLiteralNumericExpression(e)},LiteralRegExpExpression:function u(n,e){return n.reduceLiteralRegExpExpression(e)},LiteralStringExpression:function u(n,e){return n.reduceLiteralStringExpression(e)},Method:function u(n,e){var r=this;return n.reduceMethod(e,{name:function(){return r[e.name.type](n,e.name)},params:function(){return r.FormalParameters(n,e.params)},body:function(){return r.FunctionBody(n,e.body)}})},Module:function u(n,e){var r=this;return n.reduceModule(e,{directives:e.directives.map(function(a){return function(){return r.Directive(n,a)}}),items:e.items.map(function(a){return function(){return r[a.type](n,a)}})})},NewExpression:function u(n,e){var r=this;return n.reduceNewExpression(e,{callee:function(){return r[e.callee.type](n,e.callee)},arguments:e.arguments.map(function(a){return function(){return r[a.type](n,a)}})})},NewTargetExpression:function u(n,e){return n.reduceNewTargetExpression(e)},ObjectAssignmentTarget:function u(n,e){var r=this;return n.reduceObjectAssignmentTarget(e,{properties:e.properties.map(function(a){return function(){return r[a.type](n,a)}}),rest:e.rest&&function(){return r[e.rest.type](n,e.rest)}})},ObjectBinding:function u(n,e){var r=this;return n.reduceObjectBinding(e,{properties:e.properties.map(function(a){return function(){return r[a.type](n,a)}}),rest:e.rest&&function(){return r[e.rest.type](n,e.rest)}})},ObjectExpression:function u(n,e){var r=this;return n.reduceObjectExpression(e,{properties:e.properties.map(function(a){return function(){return r[a.type](n,a)}})})},ReturnStatement:function u(n,e){var r=this;return n.reduceReturnStatement(e,{expression:e.expression&&function(){return r[e.expression.type](n,e.expression)}})},Script:function u(n,e){var r=this;return n.reduceScript(e,{directives:e.directives.map(function(a){return function(){return r.Directive(n,a)}}),statements:e.statements.map(function(a){return function(){return r[a.type](n,a)}})})},Setter:function u(n,e){var r=this;return n.reduceSetter(e,{name:function(){return r[e.name.type](n,e.name)},param:function(){return r[e.param.type](n,e.param)},body:function(){return r.FunctionBody(n,e.body)}})},ShorthandProperty:function u(n,e){var r=this;return n.reduceShorthandProperty(e,{name:function(){return r.IdentifierExpression(n,e.name)}})},SpreadElement:function u(n,e){var r=this;return n.reduceSpreadElement(e,{expression:function(){return r[e.expression.type](n,e.expression)}})},SpreadProperty:function u(n,e){var r=this;return n.reduceSpreadProperty(e,{expression:function(){return r[e.expression.type](n,e.expression)}})},StaticMemberAssignmentTarget:function u(n,e){var r=this;return n.reduceStaticMemberAssignmentTarget(e,{object:function(){return r[e.object.type](n,e.object)}})},StaticMemberExpression:function u(n,e){var r=this;return n.reduceStaticMemberExpression(e,{object:function(){return r[e.object.type](n,e.object)}})},StaticPropertyName:function u(n,e){return n.reduceStaticPropertyName(e)},Super:function u(n,e){return n.reduceSuper(e)},SwitchCase:function u(n,e){var r=this;return n.reduceSwitchCase(e,{test:function(){return r[e.test.type](n,e.test)},consequent:e.consequent.map(function(a){return function(){return r[a.type](n,a)}})})},SwitchDefault:function u(n,e){var r=this;return n.reduceSwitchDefault(e,{consequent:e.consequent.map(function(a){return function(){return r[a.type](n,a)}})})},SwitchStatement:function u(n,e){var r=this;return n.reduceSwitchStatement(e,{discriminant:function(){return r[e.discriminant.type](n,e.discriminant)},cases:e.cases.map(function(a){return function(){return r.SwitchCase(n,a)}})})},SwitchStatementWithDefault:function u(n,e){var r=this;return n.reduceSwitchStatementWithDefault(e,{discriminant:function(){return r[e.discriminant.type](n,e.discriminant)},preDefaultCases:e.preDefaultCases.map(function(a){return function(){return r.SwitchCase(n,a)}}),defaultCase:function(){return r.SwitchDefault(n,e.defaultCase)},postDefaultCases:e.postDefaultCases.map(function(a){return function(){return r.SwitchCase(n,a)}})})},TemplateElement:function u(n,e){return n.reduceTemplateElement(e)},TemplateExpression:function u(n,e){var r=this;return n.reduceTemplateExpression(e,{tag:e.tag&&function(){return r[e.tag.type](n,e.tag)},elements:e.elements.map(function(a){return function(){return r[a.type](n,a)}})})},ThisExpression:function u(n,e){return n.reduceThisExpression(e)},ThrowStatement:function u(n,e){var r=this;return n.reduceThrowStatement(e,{expression:function(){return r[e.expression.type](n,e.expression)}})},TryCatchStatement:function u(n,e){var r=this;return n.reduceTryCatchStatement(e,{body:function(){return r.Block(n,e.body)},catchClause:function(){return r.CatchClause(n,e.catchClause)}})},TryFinallyStatement:function u(n,e){var r=this;return n.reduceTryFinallyStatement(e,{body:function(){return r.Block(n,e.body)},catchClause:e.catchClause&&function(){return r.CatchClause(n,e.catchClause)},finalizer:function(){return r.Block(n,e.finalizer)}})},UnaryExpression:function u(n,e){var r=this;return n.reduceUnaryExpression(e,{operand:function(){return r[e.operand.type](n,e.operand)}})},UpdateExpression:function u(n,e){var r=this;return n.reduceUpdateExpression(e,{operand:function(){return r[e.operand.type](n,e.operand)}})},VariableDeclaration:function u(n,e){var r=this;return n.reduceVariableDeclaration(e,{declarators:e.declarators.map(function(a){return function(){return r.VariableDeclarator(n,a)}})})},VariableDeclarationStatement:function u(n,e){var r=this;return n.reduceVariableDeclarationStatement(e,{declaration:function(){return r.VariableDeclaration(n,e.declaration)}})},VariableDeclarator:function u(n,e){var r=this;return n.reduceVariableDeclarator(e,{binding:function(){return r[e.binding.type](n,e.binding)},init:e.init&&function(){return r[e.init.type](n,e.init)}})},WhileStatement:function u(n,e){var r=this;return n.reduceWhileStatement(e,{test:function(){return r[e.test.type](n,e.test)},body:function(){return r[e.body.type](n,e.body)}})},WithStatement:function u(n,e){var r=this;return n.reduceWithStatement(e,{object:function(){return r[e.object.type](n,e.object)},body:function(){return r[e.body.type](n,e.body)}})},YieldExpression:function u(n,e){var r=this;return n.reduceYieldExpression(e,{expression:e.expression&&function(){return r[e.expression.type](n,e.expression)}})},YieldGeneratorExpression:function u(n,e){var r=this;return n.reduceYieldGeneratorExpression(e,{expression:function(){return r[e.expression.type](n,e.expression)}})}};function thunkedReduce(u,n){return director[n.type](u,n)}const thunkedDirector=_mergeNamespaces({__proto__:null,thunkedReduce:thunkedReduce_1,default:thunkedDirector$1},[thunkedDirector$1]),require$$1$3=getAugmentedNamespace(thunkedDirector);var thunkify$2={};Object.defineProperty(thunkify$2,"__esModule",{value:!0});var _default$a=thunkify$2.default=thunkify;function thunkify(u){return{reduceArrayAssignmentTarget:function(e,r){var a=r.elements,s=r.rest;return u.reduceArrayAssignmentTarget(e,{elements:a.map(function(o){return o==null?null:o()}),rest:s==null?null:s()})},reduceArrayBinding:function(e,r){var a=r.elements,s=r.rest;return u.reduceArrayBinding(e,{elements:a.map(function(o){return o==null?null:o()}),rest:s==null?null:s()})},reduceArrayExpression:function(e,r){var a=r.elements;return u.reduceArrayExpression(e,{elements:a.map(function(s){return s==null?null:s()})})},reduceArrowExpression:function(e,r){var a=r.params,s=r.body;return u.reduceArrowExpression(e,{params:a(),body:s()})},reduceAssignmentExpression:function(e,r){var a=r.binding,s=r.expression;return u.reduceAssignmentExpression(e,{binding:a(),expression:s()})},reduceAssignmentTargetIdentifier:function(e){return u.reduceAssignmentTargetIdentifier(e)},reduceAssignmentTargetPropertyIdentifier:function(e,r){var a=r.binding,s=r.init;return u.reduceAssignmentTargetPropertyIdentifier(e,{binding:a(),init:s==null?null:s()})},reduceAssignmentTargetPropertyProperty:function(e,r){var a=r.name,s=r.binding;return u.reduceAssignmentTargetPropertyProperty(e,{name:a(),binding:s()})},reduceAssignmentTargetWithDefault:function(e,r){var a=r.binding,s=r.init;return u.reduceAssignmentTargetWithDefault(e,{binding:a(),init:s()})},reduceAwaitExpression:function(e,r){var a=r.expression;return u.reduceAwaitExpression(e,{expression:a()})},reduceBinaryExpression:function(e,r){var a=r.left,s=r.right;return u.reduceBinaryExpression(e,{left:a(),right:s()})},reduceBindingIdentifier:function(e){return u.reduceBindingIdentifier(e)},reduceBindingPropertyIdentifier:function(e,r){var a=r.binding,s=r.init;return u.reduceBindingPropertyIdentifier(e,{binding:a(),init:s==null?null:s()})},reduceBindingPropertyProperty:function(e,r){var a=r.name,s=r.binding;return u.reduceBindingPropertyProperty(e,{name:a(),binding:s()})},reduceBindingWithDefault:function(e,r){var a=r.binding,s=r.init;return u.reduceBindingWithDefault(e,{binding:a(),init:s()})},reduceBlock:function(e,r){var a=r.statements;return u.reduceBlock(e,{statements:a.map(function(s){return s()})})},reduceBlockStatement:function(e,r){var a=r.block;return u.reduceBlockStatement(e,{block:a()})},reduceBreakStatement:function(e){return u.reduceBreakStatement(e)},reduceCallExpression:function(e,r){var a=r.callee,s=r.arguments;return u.reduceCallExpression(e,{callee:a(),arguments:s.map(function(o){return o()})})},reduceCatchClause:function(e,r){var a=r.binding,s=r.body;return u.reduceCatchClause(e,{binding:a(),body:s()})},reduceClassDeclaration:function(e,r){var a=r.name,s=r.super,o=r.elements;return u.reduceClassDeclaration(e,{name:a(),super:s==null?null:s(),elements:o.map(function(c){return c()})})},reduceClassElement:function(e,r){var a=r.method;return u.reduceClassElement(e,{method:a()})},reduceClassExpression:function(e,r){var a=r.name,s=r.super,o=r.elements;return u.reduceClassExpression(e,{name:a==null?null:a(),super:s==null?null:s(),elements:o.map(function(c){return c()})})},reduceCompoundAssignmentExpression:function(e,r){var a=r.binding,s=r.expression;return u.reduceCompoundAssignmentExpression(e,{binding:a(),expression:s()})},reduceComputedMemberAssignmentTarget:function(e,r){var a=r.object,s=r.expression;return u.reduceComputedMemberAssignmentTarget(e,{object:a(),expression:s()})},reduceComputedMemberExpression:function(e,r){var a=r.object,s=r.expression;return u.reduceComputedMemberExpression(e,{object:a(),expression:s()})},reduceComputedPropertyName:function(e,r){var a=r.expression;return u.reduceComputedPropertyName(e,{expression:a()})},reduceConditionalExpression:function(e,r){var a=r.test,s=r.consequent,o=r.alternate;return u.reduceConditionalExpression(e,{test:a(),consequent:s(),alternate:o()})},reduceContinueStatement:function(e){return u.reduceContinueStatement(e)},reduceDataProperty:function(e,r){var a=r.name,s=r.expression;return u.reduceDataProperty(e,{name:a(),expression:s()})},reduceDebuggerStatement:function(e){return u.reduceDebuggerStatement(e)},reduceDirective:function(e){return u.reduceDirective(e)},reduceDoWhileStatement:function(e,r){var a=r.body,s=r.test;return u.reduceDoWhileStatement(e,{body:a(),test:s()})},reduceEmptyStatement:function(e){return u.reduceEmptyStatement(e)},reduceExport:function(e,r){var a=r.declaration;return u.reduceExport(e,{declaration:a()})},reduceExportAllFrom:function(e){return u.reduceExportAllFrom(e)},reduceExportDefault:function(e,r){var a=r.body;return u.reduceExportDefault(e,{body:a()})},reduceExportFrom:function(e,r){var a=r.namedExports;return u.reduceExportFrom(e,{namedExports:a.map(function(s){return s()})})},reduceExportFromSpecifier:function(e){return u.reduceExportFromSpecifier(e)},reduceExportLocalSpecifier:function(e,r){var a=r.name;return u.reduceExportLocalSpecifier(e,{name:a()})},reduceExportLocals:function(e,r){var a=r.namedExports;return u.reduceExportLocals(e,{namedExports:a.map(function(s){return s()})})},reduceExpressionStatement:function(e,r){var a=r.expression;return u.reduceExpressionStatement(e,{expression:a()})},reduceForAwaitStatement:function(e,r){var a=r.left,s=r.right,o=r.body;return u.reduceForAwaitStatement(e,{left:a(),right:s(),body:o()})},reduceForInStatement:function(e,r){var a=r.left,s=r.right,o=r.body;return u.reduceForInStatement(e,{left:a(),right:s(),body:o()})},reduceForOfStatement:function(e,r){var a=r.left,s=r.right,o=r.body;return u.reduceForOfStatement(e,{left:a(),right:s(),body:o()})},reduceForStatement:function(e,r){var a=r.init,s=r.test,o=r.update,c=r.body;return u.reduceForStatement(e,{init:a==null?null:a(),test:s==null?null:s(),update:o==null?null:o(),body:c()})},reduceFormalParameters:function(e,r){var a=r.items,s=r.rest;return u.reduceFormalParameters(e,{items:a.map(function(o){return o()}),rest:s==null?null:s()})},reduceFunctionBody:function(e,r){var a=r.directives,s=r.statements;return u.reduceFunctionBody(e,{directives:a.map(function(o){return o()}),statements:s.map(function(o){return o()})})},reduceFunctionDeclaration:function(e,r){var a=r.name,s=r.params,o=r.body;return u.reduceFunctionDeclaration(e,{name:a(),params:s(),body:o()})},reduceFunctionExpression:function(e,r){var a=r.name,s=r.params,o=r.body;return u.reduceFunctionExpression(e,{name:a==null?null:a(),params:s(),body:o()})},reduceGetter:function(e,r){var a=r.name,s=r.body;return u.reduceGetter(e,{name:a(),body:s()})},reduceIdentifierExpression:function(e){return u.reduceIdentifierExpression(e)},reduceIfStatement:function(e,r){var a=r.test,s=r.consequent,o=r.alternate;return u.reduceIfStatement(e,{test:a(),consequent:s(),alternate:o==null?null:o()})},reduceImport:function(e,r){var a=r.defaultBinding,s=r.namedImports;return u.reduceImport(e,{defaultBinding:a==null?null:a(),namedImports:s.map(function(o){return o()})})},reduceImportNamespace:function(e,r){var a=r.defaultBinding,s=r.namespaceBinding;return u.reduceImportNamespace(e,{defaultBinding:a==null?null:a(),namespaceBinding:s()})},reduceImportSpecifier:function(e,r){var a=r.binding;return u.reduceImportSpecifier(e,{binding:a()})},reduceLabeledStatement:function(e,r){var a=r.body;return u.reduceLabeledStatement(e,{body:a()})},reduceLiteralBooleanExpression:function(e){return u.reduceLiteralBooleanExpression(e)},reduceLiteralInfinityExpression:function(e){return u.reduceLiteralInfinityExpression(e)},reduceLiteralNullExpression:function(e){return u.reduceLiteralNullExpression(e)},reduceLiteralNumericExpression:function(e){return u.reduceLiteralNumericExpression(e)},reduceLiteralRegExpExpression:function(e){return u.reduceLiteralRegExpExpression(e)},reduceLiteralStringExpression:function(e){return u.reduceLiteralStringExpression(e)},reduceMethod:function(e,r){var a=r.name,s=r.params,o=r.body;return u.reduceMethod(e,{name:a(),params:s(),body:o()})},reduceModule:function(e,r){var a=r.directives,s=r.items;return u.reduceModule(e,{directives:a.map(function(o){return o()}),items:s.map(function(o){return o()})})},reduceNewExpression:function(e,r){var a=r.callee,s=r.arguments;return u.reduceNewExpression(e,{callee:a(),arguments:s.map(function(o){return o()})})},reduceNewTargetExpression:function(e){return u.reduceNewTargetExpression(e)},reduceObjectAssignmentTarget:function(e,r){var a=r.properties,s=r.rest;return u.reduceObjectAssignmentTarget(e,{properties:a.map(function(o){return o()}),rest:s==null?null:s()})},reduceObjectBinding:function(e,r){var a=r.properties,s=r.rest;return u.reduceObjectBinding(e,{properties:a.map(function(o){return o()}),rest:s==null?null:s()})},reduceObjectExpression:function(e,r){var a=r.properties;return u.reduceObjectExpression(e,{properties:a.map(function(s){return s()})})},reduceReturnStatement:function(e,r){var a=r.expression;return u.reduceReturnStatement(e,{expression:a==null?null:a()})},reduceScript:function(e,r){var a=r.directives,s=r.statements;return u.reduceScript(e,{directives:a.map(function(o){return o()}),statements:s.map(function(o){return o()})})},reduceSetter:function(e,r){var a=r.name,s=r.param,o=r.body;return u.reduceSetter(e,{name:a(),param:s(),body:o()})},reduceShorthandProperty:function(e,r){var a=r.name;return u.reduceShorthandProperty(e,{name:a()})},reduceSpreadElement:function(e,r){var a=r.expression;return u.reduceSpreadElement(e,{expression:a()})},reduceSpreadProperty:function(e,r){var a=r.expression;return u.reduceSpreadProperty(e,{expression:a()})},reduceStaticMemberAssignmentTarget:function(e,r){var a=r.object;return u.reduceStaticMemberAssignmentTarget(e,{object:a()})},reduceStaticMemberExpression:function(e,r){var a=r.object;return u.reduceStaticMemberExpression(e,{object:a()})},reduceStaticPropertyName:function(e){return u.reduceStaticPropertyName(e)},reduceSuper:function(e){return u.reduceSuper(e)},reduceSwitchCase:function(e,r){var a=r.test,s=r.consequent;return u.reduceSwitchCase(e,{test:a(),consequent:s.map(function(o){return o()})})},reduceSwitchDefault:function(e,r){var a=r.consequent;return u.reduceSwitchDefault(e,{consequent:a.map(function(s){return s()})})},reduceSwitchStatement:function(e,r){var a=r.discriminant,s=r.cases;return u.reduceSwitchStatement(e,{discriminant:a(),cases:s.map(function(o){return o()})})},reduceSwitchStatementWithDefault:function(e,r){var a=r.discriminant,s=r.preDefaultCases,o=r.defaultCase,c=r.postDefaultCases;return u.reduceSwitchStatementWithDefault(e,{discriminant:a(),preDefaultCases:s.map(function(l){return l()}),defaultCase:o(),postDefaultCases:c.map(function(l){return l()})})},reduceTemplateElement:function(e){return u.reduceTemplateElement(e)},reduceTemplateExpression:function(e,r){var a=r.tag,s=r.elements;return u.reduceTemplateExpression(e,{tag:a==null?null:a(),elements:s.map(function(o){return o()})})},reduceThisExpression:function(e){return u.reduceThisExpression(e)},reduceThrowStatement:function(e,r){var a=r.expression;return u.reduceThrowStatement(e,{expression:a()})},reduceTryCatchStatement:function(e,r){var a=r.body,s=r.catchClause;return u.reduceTryCatchStatement(e,{body:a(),catchClause:s()})},reduceTryFinallyStatement:function(e,r){var a=r.body,s=r.catchClause,o=r.finalizer;return u.reduceTryFinallyStatement(e,{body:a(),catchClause:s==null?null:s(),finalizer:o()})},reduceUnaryExpression:function(e,r){var a=r.operand;return u.reduceUnaryExpression(e,{operand:a()})},reduceUpdateExpression:function(e,r){var a=r.operand;return u.reduceUpdateExpression(e,{operand:a()})},reduceVariableDeclaration:function(e,r){var a=r.declarators;return u.reduceVariableDeclaration(e,{declarators:a.map(function(s){return s()})})},reduceVariableDeclarationStatement:function(e,r){var a=r.declaration;return u.reduceVariableDeclarationStatement(e,{declaration:a()})},reduceVariableDeclarator:function(e,r){var a=r.binding,s=r.init;return u.reduceVariableDeclarator(e,{binding:a(),init:s==null?null:s()})},reduceWhileStatement:function(e,r){var a=r.test,s=r.body;return u.reduceWhileStatement(e,{test:a(),body:s()})},reduceWithStatement:function(e,r){var a=r.object,s=r.body;return u.reduceWithStatement(e,{object:a(),body:s()})},reduceYieldExpression:function(e,r){var a=r.expression;return u.reduceYieldExpression(e,{expression:a==null?null:a()})},reduceYieldGeneratorExpression:function(e,r){var a=r.expression;return u.reduceYieldGeneratorExpression(e,{expression:a()})}}}const thunkify$1=_mergeNamespaces({__proto__:null,default:_default$a},[thunkify$2]),require$$2$3=getAugmentedNamespace(thunkify$1);var thunkifyClass$2={};Object.defineProperty(thunkifyClass$2,"__esModule",{value:!0});var _createClass$b=function(){function u(n,e){for(var r=0;r<e.length;r++){var a=e[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(n,e,r){return e&&u(n.prototype,e),r&&u(n,r),n}}(),_get$3=function u(n,e,r){n===null&&(n=Function.prototype);var a=Object.getOwnPropertyDescriptor(n,e);if(a===void 0){var s=Object.getPrototypeOf(n);return s===null?void 0:u(s,e,r)}else{if("value"in a)return a.value;var o=a.get;return o===void 0?void 0:o.call(r)}},_default$9=thunkifyClass$2.default=thunkifyClass;function _classCallCheck$e(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn$6(u,n){if(!u)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n&&(typeof n=="object"||typeof n=="function")?n:u}function _inherits$6(u,n){if(typeof n!="function"&&n!==null)throw new TypeError("Super expression must either be null or a function, not "+typeof n);u.prototype=Object.create(n&&n.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(u,n):u.__proto__=n)}function thunkifyClass(u){return function(n){_inherits$6(e,n);function e(){return _classCallCheck$e(this,e),_possibleConstructorReturn$6(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return _createClass$b(e,[{key:"reduceArrayAssignmentTarget",value:function(a,s){var o=s.elements,c=s.rest;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceArrayAssignmentTarget",this).call(this,a,{elements:o.map(function(l){return l==null?null:l()}),rest:c==null?null:c()})}},{key:"reduceArrayBinding",value:function(a,s){var o=s.elements,c=s.rest;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceArrayBinding",this).call(this,a,{elements:o.map(function(l){return l==null?null:l()}),rest:c==null?null:c()})}},{key:"reduceArrayExpression",value:function(a,s){var o=s.elements;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceArrayExpression",this).call(this,a,{elements:o.map(function(c){return c==null?null:c()})})}},{key:"reduceArrowExpression",value:function(a,s){var o=s.params,c=s.body;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceArrowExpression",this).call(this,a,{params:o(),body:c()})}},{key:"reduceAssignmentExpression",value:function(a,s){var o=s.binding,c=s.expression;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceAssignmentExpression",this).call(this,a,{binding:o(),expression:c()})}},{key:"reduceAssignmentTargetIdentifier",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceAssignmentTargetIdentifier",this).call(this,a)}},{key:"reduceAssignmentTargetPropertyIdentifier",value:function(a,s){var o=s.binding,c=s.init;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceAssignmentTargetPropertyIdentifier",this).call(this,a,{binding:o(),init:c==null?null:c()})}},{key:"reduceAssignmentTargetPropertyProperty",value:function(a,s){var o=s.name,c=s.binding;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceAssignmentTargetPropertyProperty",this).call(this,a,{name:o(),binding:c()})}},{key:"reduceAssignmentTargetWithDefault",value:function(a,s){var o=s.binding,c=s.init;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceAssignmentTargetWithDefault",this).call(this,a,{binding:o(),init:c()})}},{key:"reduceAwaitExpression",value:function(a,s){var o=s.expression;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceAwaitExpression",this).call(this,a,{expression:o()})}},{key:"reduceBinaryExpression",value:function(a,s){var o=s.left,c=s.right;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceBinaryExpression",this).call(this,a,{left:o(),right:c()})}},{key:"reduceBindingIdentifier",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceBindingIdentifier",this).call(this,a)}},{key:"reduceBindingPropertyIdentifier",value:function(a,s){var o=s.binding,c=s.init;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceBindingPropertyIdentifier",this).call(this,a,{binding:o(),init:c==null?null:c()})}},{key:"reduceBindingPropertyProperty",value:function(a,s){var o=s.name,c=s.binding;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceBindingPropertyProperty",this).call(this,a,{name:o(),binding:c()})}},{key:"reduceBindingWithDefault",value:function(a,s){var o=s.binding,c=s.init;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceBindingWithDefault",this).call(this,a,{binding:o(),init:c()})}},{key:"reduceBlock",value:function(a,s){var o=s.statements;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceBlock",this).call(this,a,{statements:o.map(function(c){return c()})})}},{key:"reduceBlockStatement",value:function(a,s){var o=s.block;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceBlockStatement",this).call(this,a,{block:o()})}},{key:"reduceBreakStatement",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceBreakStatement",this).call(this,a)}},{key:"reduceCallExpression",value:function(a,s){var o=s.callee,c=s.arguments;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceCallExpression",this).call(this,a,{callee:o(),arguments:c.map(function(l){return l()})})}},{key:"reduceCatchClause",value:function(a,s){var o=s.binding,c=s.body;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceCatchClause",this).call(this,a,{binding:o(),body:c()})}},{key:"reduceClassDeclaration",value:function(a,s){var o=s.name,c=s.super,l=s.elements;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceClassDeclaration",this).call(this,a,{name:o(),super:c==null?null:c(),elements:l.map(function(m){return m()})})}},{key:"reduceClassElement",value:function(a,s){var o=s.method;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceClassElement",this).call(this,a,{method:o()})}},{key:"reduceClassExpression",value:function(a,s){var o=s.name,c=s.super,l=s.elements;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceClassExpression",this).call(this,a,{name:o==null?null:o(),super:c==null?null:c(),elements:l.map(function(m){return m()})})}},{key:"reduceCompoundAssignmentExpression",value:function(a,s){var o=s.binding,c=s.expression;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceCompoundAssignmentExpression",this).call(this,a,{binding:o(),expression:c()})}},{key:"reduceComputedMemberAssignmentTarget",value:function(a,s){var o=s.object,c=s.expression;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceComputedMemberAssignmentTarget",this).call(this,a,{object:o(),expression:c()})}},{key:"reduceComputedMemberExpression",value:function(a,s){var o=s.object,c=s.expression;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceComputedMemberExpression",this).call(this,a,{object:o(),expression:c()})}},{key:"reduceComputedPropertyName",value:function(a,s){var o=s.expression;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceComputedPropertyName",this).call(this,a,{expression:o()})}},{key:"reduceConditionalExpression",value:function(a,s){var o=s.test,c=s.consequent,l=s.alternate;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceConditionalExpression",this).call(this,a,{test:o(),consequent:c(),alternate:l()})}},{key:"reduceContinueStatement",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceContinueStatement",this).call(this,a)}},{key:"reduceDataProperty",value:function(a,s){var o=s.name,c=s.expression;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceDataProperty",this).call(this,a,{name:o(),expression:c()})}},{key:"reduceDebuggerStatement",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceDebuggerStatement",this).call(this,a)}},{key:"reduceDirective",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceDirective",this).call(this,a)}},{key:"reduceDoWhileStatement",value:function(a,s){var o=s.body,c=s.test;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceDoWhileStatement",this).call(this,a,{body:o(),test:c()})}},{key:"reduceEmptyStatement",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceEmptyStatement",this).call(this,a)}},{key:"reduceExport",value:function(a,s){var o=s.declaration;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceExport",this).call(this,a,{declaration:o()})}},{key:"reduceExportAllFrom",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceExportAllFrom",this).call(this,a)}},{key:"reduceExportDefault",value:function(a,s){var o=s.body;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceExportDefault",this).call(this,a,{body:o()})}},{key:"reduceExportFrom",value:function(a,s){var o=s.namedExports;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceExportFrom",this).call(this,a,{namedExports:o.map(function(c){return c()})})}},{key:"reduceExportFromSpecifier",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceExportFromSpecifier",this).call(this,a)}},{key:"reduceExportLocalSpecifier",value:function(a,s){var o=s.name;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceExportLocalSpecifier",this).call(this,a,{name:o()})}},{key:"reduceExportLocals",value:function(a,s){var o=s.namedExports;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceExportLocals",this).call(this,a,{namedExports:o.map(function(c){return c()})})}},{key:"reduceExpressionStatement",value:function(a,s){var o=s.expression;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceExpressionStatement",this).call(this,a,{expression:o()})}},{key:"reduceForAwaitStatement",value:function(a,s){var o=s.left,c=s.right,l=s.body;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceForAwaitStatement",this).call(this,a,{left:o(),right:c(),body:l()})}},{key:"reduceForInStatement",value:function(a,s){var o=s.left,c=s.right,l=s.body;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceForInStatement",this).call(this,a,{left:o(),right:c(),body:l()})}},{key:"reduceForOfStatement",value:function(a,s){var o=s.left,c=s.right,l=s.body;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceForOfStatement",this).call(this,a,{left:o(),right:c(),body:l()})}},{key:"reduceForStatement",value:function(a,s){var o=s.init,c=s.test,l=s.update,m=s.body;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceForStatement",this).call(this,a,{init:o==null?null:o(),test:c==null?null:c(),update:l==null?null:l(),body:m()})}},{key:"reduceFormalParameters",value:function(a,s){var o=s.items,c=s.rest;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceFormalParameters",this).call(this,a,{items:o.map(function(l){return l()}),rest:c==null?null:c()})}},{key:"reduceFunctionBody",value:function(a,s){var o=s.directives,c=s.statements;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceFunctionBody",this).call(this,a,{directives:o.map(function(l){return l()}),statements:c.map(function(l){return l()})})}},{key:"reduceFunctionDeclaration",value:function(a,s){var o=s.name,c=s.params,l=s.body;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceFunctionDeclaration",this).call(this,a,{name:o(),params:c(),body:l()})}},{key:"reduceFunctionExpression",value:function(a,s){var o=s.name,c=s.params,l=s.body;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceFunctionExpression",this).call(this,a,{name:o==null?null:o(),params:c(),body:l()})}},{key:"reduceGetter",value:function(a,s){var o=s.name,c=s.body;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceGetter",this).call(this,a,{name:o(),body:c()})}},{key:"reduceIdentifierExpression",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceIdentifierExpression",this).call(this,a)}},{key:"reduceIfStatement",value:function(a,s){var o=s.test,c=s.consequent,l=s.alternate;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceIfStatement",this).call(this,a,{test:o(),consequent:c(),alternate:l==null?null:l()})}},{key:"reduceImport",value:function(a,s){var o=s.defaultBinding,c=s.namedImports;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceImport",this).call(this,a,{defaultBinding:o==null?null:o(),namedImports:c.map(function(l){return l()})})}},{key:"reduceImportNamespace",value:function(a,s){var o=s.defaultBinding,c=s.namespaceBinding;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceImportNamespace",this).call(this,a,{defaultBinding:o==null?null:o(),namespaceBinding:c()})}},{key:"reduceImportSpecifier",value:function(a,s){var o=s.binding;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceImportSpecifier",this).call(this,a,{binding:o()})}},{key:"reduceLabeledStatement",value:function(a,s){var o=s.body;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceLabeledStatement",this).call(this,a,{body:o()})}},{key:"reduceLiteralBooleanExpression",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceLiteralBooleanExpression",this).call(this,a)}},{key:"reduceLiteralInfinityExpression",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceLiteralInfinityExpression",this).call(this,a)}},{key:"reduceLiteralNullExpression",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceLiteralNullExpression",this).call(this,a)}},{key:"reduceLiteralNumericExpression",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceLiteralNumericExpression",this).call(this,a)}},{key:"reduceLiteralRegExpExpression",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceLiteralRegExpExpression",this).call(this,a)}},{key:"reduceLiteralStringExpression",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceLiteralStringExpression",this).call(this,a)}},{key:"reduceMethod",value:function(a,s){var o=s.name,c=s.params,l=s.body;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceMethod",this).call(this,a,{name:o(),params:c(),body:l()})}},{key:"reduceModule",value:function(a,s){var o=s.directives,c=s.items;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceModule",this).call(this,a,{directives:o.map(function(l){return l()}),items:c.map(function(l){return l()})})}},{key:"reduceNewExpression",value:function(a,s){var o=s.callee,c=s.arguments;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceNewExpression",this).call(this,a,{callee:o(),arguments:c.map(function(l){return l()})})}},{key:"reduceNewTargetExpression",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceNewTargetExpression",this).call(this,a)}},{key:"reduceObjectAssignmentTarget",value:function(a,s){var o=s.properties,c=s.rest;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceObjectAssignmentTarget",this).call(this,a,{properties:o.map(function(l){return l()}),rest:c==null?null:c()})}},{key:"reduceObjectBinding",value:function(a,s){var o=s.properties,c=s.rest;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceObjectBinding",this).call(this,a,{properties:o.map(function(l){return l()}),rest:c==null?null:c()})}},{key:"reduceObjectExpression",value:function(a,s){var o=s.properties;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceObjectExpression",this).call(this,a,{properties:o.map(function(c){return c()})})}},{key:"reduceReturnStatement",value:function(a,s){var o=s.expression;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceReturnStatement",this).call(this,a,{expression:o==null?null:o()})}},{key:"reduceScript",value:function(a,s){var o=s.directives,c=s.statements;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceScript",this).call(this,a,{directives:o.map(function(l){return l()}),statements:c.map(function(l){return l()})})}},{key:"reduceSetter",value:function(a,s){var o=s.name,c=s.param,l=s.body;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceSetter",this).call(this,a,{name:o(),param:c(),body:l()})}},{key:"reduceShorthandProperty",value:function(a,s){var o=s.name;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceShorthandProperty",this).call(this,a,{name:o()})}},{key:"reduceSpreadElement",value:function(a,s){var o=s.expression;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceSpreadElement",this).call(this,a,{expression:o()})}},{key:"reduceSpreadProperty",value:function(a,s){var o=s.expression;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceSpreadProperty",this).call(this,a,{expression:o()})}},{key:"reduceStaticMemberAssignmentTarget",value:function(a,s){var o=s.object;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceStaticMemberAssignmentTarget",this).call(this,a,{object:o()})}},{key:"reduceStaticMemberExpression",value:function(a,s){var o=s.object;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceStaticMemberExpression",this).call(this,a,{object:o()})}},{key:"reduceStaticPropertyName",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceStaticPropertyName",this).call(this,a)}},{key:"reduceSuper",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceSuper",this).call(this,a)}},{key:"reduceSwitchCase",value:function(a,s){var o=s.test,c=s.consequent;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceSwitchCase",this).call(this,a,{test:o(),consequent:c.map(function(l){return l()})})}},{key:"reduceSwitchDefault",value:function(a,s){var o=s.consequent;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceSwitchDefault",this).call(this,a,{consequent:o.map(function(c){return c()})})}},{key:"reduceSwitchStatement",value:function(a,s){var o=s.discriminant,c=s.cases;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceSwitchStatement",this).call(this,a,{discriminant:o(),cases:c.map(function(l){return l()})})}},{key:"reduceSwitchStatementWithDefault",value:function(a,s){var o=s.discriminant,c=s.preDefaultCases,l=s.defaultCase,m=s.postDefaultCases;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceSwitchStatementWithDefault",this).call(this,a,{discriminant:o(),preDefaultCases:c.map(function(E){return E()}),defaultCase:l(),postDefaultCases:m.map(function(E){return E()})})}},{key:"reduceTemplateElement",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceTemplateElement",this).call(this,a)}},{key:"reduceTemplateExpression",value:function(a,s){var o=s.tag,c=s.elements;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceTemplateExpression",this).call(this,a,{tag:o==null?null:o(),elements:c.map(function(l){return l()})})}},{key:"reduceThisExpression",value:function(a){return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceThisExpression",this).call(this,a)}},{key:"reduceThrowStatement",value:function(a,s){var o=s.expression;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceThrowStatement",this).call(this,a,{expression:o()})}},{key:"reduceTryCatchStatement",value:function(a,s){var o=s.body,c=s.catchClause;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceTryCatchStatement",this).call(this,a,{body:o(),catchClause:c()})}},{key:"reduceTryFinallyStatement",value:function(a,s){var o=s.body,c=s.catchClause,l=s.finalizer;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceTryFinallyStatement",this).call(this,a,{body:o(),catchClause:c==null?null:c(),finalizer:l()})}},{key:"reduceUnaryExpression",value:function(a,s){var o=s.operand;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceUnaryExpression",this).call(this,a,{operand:o()})}},{key:"reduceUpdateExpression",value:function(a,s){var o=s.operand;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceUpdateExpression",this).call(this,a,{operand:o()})}},{key:"reduceVariableDeclaration",value:function(a,s){var o=s.declarators;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceVariableDeclaration",this).call(this,a,{declarators:o.map(function(c){return c()})})}},{key:"reduceVariableDeclarationStatement",value:function(a,s){var o=s.declaration;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceVariableDeclarationStatement",this).call(this,a,{declaration:o()})}},{key:"reduceVariableDeclarator",value:function(a,s){var o=s.binding,c=s.init;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceVariableDeclarator",this).call(this,a,{binding:o(),init:c==null?null:c()})}},{key:"reduceWhileStatement",value:function(a,s){var o=s.test,c=s.body;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceWhileStatement",this).call(this,a,{test:o(),body:c()})}},{key:"reduceWithStatement",value:function(a,s){var o=s.object,c=s.body;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceWithStatement",this).call(this,a,{object:o(),body:c()})}},{key:"reduceYieldExpression",value:function(a,s){var o=s.expression;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceYieldExpression",this).call(this,a,{expression:o==null?null:o()})}},{key:"reduceYieldGeneratorExpression",value:function(a,s){var o=s.expression;return _get$3(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reduceYieldGeneratorExpression",this).call(this,a,{expression:o()})}}]),e}(u)}const thunkifyClass$1=_mergeNamespaces({__proto__:null,default:_default$9},[thunkifyClass$2]),require$$3$2=getAugmentedNamespace(thunkifyClass$1);var memoize$2={},dist$5={},YieldGeneratorExpression_1,YieldExpression_1,WithStatement_1,WhileStatement_1,VariableDeclarator_1,VariableDeclarationStatement_1,VariableDeclaration_1,UpdateExpression_1,UnaryExpression_1,TryFinallyStatement_1,TryCatchStatement_1,ThrowStatement_1,ThisExpression_1,TemplateExpression_1,TemplateElement_1,SwitchStatementWithDefault_1,SwitchStatement_1,SwitchDefault_1,SwitchCase_1,Super_1,StaticPropertyName_1,StaticMemberExpression_1,StaticMemberAssignmentTarget_1,SpreadProperty_1,SpreadElement_1,ShorthandProperty_1,Setter_1,Script_1,ReturnStatement_1,ObjectExpression_1,ObjectBinding_1,ObjectAssignmentTarget_1,NewTargetExpression_1,NewExpression_1,Module_1,Method_1,LiteralStringExpression_1,LiteralRegExpExpression_1,LiteralNumericExpression_1,LiteralNullExpression_1,LiteralInfinityExpression_1,LiteralBooleanExpression_1,LabeledStatement_1,ImportSpecifier_1,ImportNamespace_1,Import_1,IfStatement_1,IdentifierExpression_1,Getter_1,FunctionExpression_1,FunctionDeclaration_1,FunctionBody_1,FormalParameters_1,ForStatement_1,ForOfStatement_1,ForInStatement_1,ForAwaitStatement_1,ExpressionStatement_1,ExportLocals_1,ExportLocalSpecifier_1,ExportFromSpecifier_1,ExportFrom_1,ExportDefault_1,ExportAllFrom_1,Export_1,EmptyStatement_1,DoWhileStatement_1,Directive_1,DebuggerStatement_1,DataProperty_1,ContinueStatement_1,ConditionalExpression_1,ComputedPropertyName_1,ComputedMemberExpression_1,ComputedMemberAssignmentTarget_1,CompoundAssignmentExpression_1,ClassExpression_1,ClassElement_1,ClassDeclaration_1,CatchClause_1,CallExpression_1,BreakStatement_1,BlockStatement_1,Block_1,BindingWithDefault_1,BindingPropertyProperty_1,BindingPropertyIdentifier_1,BindingIdentifier_1,BinaryExpression_1,AwaitExpression_1,AssignmentTargetWithDefault_1,AssignmentTargetPropertyProperty_1,AssignmentTargetPropertyIdentifier_1,AssignmentTargetIdentifier_1,AssignmentExpression_1,ArrowExpression_1,ArrayExpression_1,ArrayBinding_1,ArrayAssignmentTarget_1;Object.defineProperty(dist$5,"__esModule",{value:!0});function _classCallCheck$d(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}ArrayAssignmentTarget_1=dist$5.ArrayAssignmentTarget=function u(n){var e=n.elements,r=n.rest;_classCallCheck$d(this,u),this.type="ArrayAssignmentTarget",this.elements=e,this.rest=r};ArrayBinding_1=dist$5.ArrayBinding=function u(n){var e=n.elements,r=n.rest;_classCallCheck$d(this,u),this.type="ArrayBinding",this.elements=e,this.rest=r};ArrayExpression_1=dist$5.ArrayExpression=function u(n){var e=n.elements;_classCallCheck$d(this,u),this.type="ArrayExpression",this.elements=e};ArrowExpression_1=dist$5.ArrowExpression=function u(n){var e=n.isAsync,r=n.params,a=n.body;_classCallCheck$d(this,u),this.type="ArrowExpression",this.isAsync=e,this.params=r,this.body=a};AssignmentExpression_1=dist$5.AssignmentExpression=function u(n){var e=n.binding,r=n.expression;_classCallCheck$d(this,u),this.type="AssignmentExpression",this.binding=e,this.expression=r};AssignmentTargetIdentifier_1=dist$5.AssignmentTargetIdentifier=function u(n){var e=n.name;_classCallCheck$d(this,u),this.type="AssignmentTargetIdentifier",this.name=e};AssignmentTargetPropertyIdentifier_1=dist$5.AssignmentTargetPropertyIdentifier=function u(n){var e=n.binding,r=n.init;_classCallCheck$d(this,u),this.type="AssignmentTargetPropertyIdentifier",this.binding=e,this.init=r};AssignmentTargetPropertyProperty_1=dist$5.AssignmentTargetPropertyProperty=function u(n){var e=n.name,r=n.binding;_classCallCheck$d(this,u),this.type="AssignmentTargetPropertyProperty",this.name=e,this.binding=r};AssignmentTargetWithDefault_1=dist$5.AssignmentTargetWithDefault=function u(n){var e=n.binding,r=n.init;_classCallCheck$d(this,u),this.type="AssignmentTargetWithDefault",this.binding=e,this.init=r};AwaitExpression_1=dist$5.AwaitExpression=function u(n){var e=n.expression;_classCallCheck$d(this,u),this.type="AwaitExpression",this.expression=e};BinaryExpression_1=dist$5.BinaryExpression=function u(n){var e=n.left,r=n.operator,a=n.right;_classCallCheck$d(this,u),this.type="BinaryExpression",this.left=e,this.operator=r,this.right=a};BindingIdentifier_1=dist$5.BindingIdentifier=function u(n){var e=n.name;_classCallCheck$d(this,u),this.type="BindingIdentifier",this.name=e};BindingPropertyIdentifier_1=dist$5.BindingPropertyIdentifier=function u(n){var e=n.binding,r=n.init;_classCallCheck$d(this,u),this.type="BindingPropertyIdentifier",this.binding=e,this.init=r};BindingPropertyProperty_1=dist$5.BindingPropertyProperty=function u(n){var e=n.name,r=n.binding;_classCallCheck$d(this,u),this.type="BindingPropertyProperty",this.name=e,this.binding=r};BindingWithDefault_1=dist$5.BindingWithDefault=function u(n){var e=n.binding,r=n.init;_classCallCheck$d(this,u),this.type="BindingWithDefault",this.binding=e,this.init=r};Block_1=dist$5.Block=function u(n){var e=n.statements;_classCallCheck$d(this,u),this.type="Block",this.statements=e};BlockStatement_1=dist$5.BlockStatement=function u(n){var e=n.block;_classCallCheck$d(this,u),this.type="BlockStatement",this.block=e};BreakStatement_1=dist$5.BreakStatement=function u(n){var e=n.label;_classCallCheck$d(this,u),this.type="BreakStatement",this.label=e};CallExpression_1=dist$5.CallExpression=function u(n){var e=n.callee,r=n.arguments;_classCallCheck$d(this,u),this.type="CallExpression",this.callee=e,this.arguments=r};CatchClause_1=dist$5.CatchClause=function u(n){var e=n.binding,r=n.body;_classCallCheck$d(this,u),this.type="CatchClause",this.binding=e,this.body=r};ClassDeclaration_1=dist$5.ClassDeclaration=function u(n){var e=n.name,r=n.super,a=n.elements;_classCallCheck$d(this,u),this.type="ClassDeclaration",this.name=e,this.super=r,this.elements=a};ClassElement_1=dist$5.ClassElement=function u(n){var e=n.isStatic,r=n.method;_classCallCheck$d(this,u),this.type="ClassElement",this.isStatic=e,this.method=r};ClassExpression_1=dist$5.ClassExpression=function u(n){var e=n.name,r=n.super,a=n.elements;_classCallCheck$d(this,u),this.type="ClassExpression",this.name=e,this.super=r,this.elements=a};CompoundAssignmentExpression_1=dist$5.CompoundAssignmentExpression=function u(n){var e=n.binding,r=n.operator,a=n.expression;_classCallCheck$d(this,u),this.type="CompoundAssignmentExpression",this.binding=e,this.operator=r,this.expression=a};ComputedMemberAssignmentTarget_1=dist$5.ComputedMemberAssignmentTarget=function u(n){var e=n.object,r=n.expression;_classCallCheck$d(this,u),this.type="ComputedMemberAssignmentTarget",this.object=e,this.expression=r};ComputedMemberExpression_1=dist$5.ComputedMemberExpression=function u(n){var e=n.object,r=n.expression;_classCallCheck$d(this,u),this.type="ComputedMemberExpression",this.object=e,this.expression=r};ComputedPropertyName_1=dist$5.ComputedPropertyName=function u(n){var e=n.expression;_classCallCheck$d(this,u),this.type="ComputedPropertyName",this.expression=e};ConditionalExpression_1=dist$5.ConditionalExpression=function u(n){var e=n.test,r=n.consequent,a=n.alternate;_classCallCheck$d(this,u),this.type="ConditionalExpression",this.test=e,this.consequent=r,this.alternate=a};ContinueStatement_1=dist$5.ContinueStatement=function u(n){var e=n.label;_classCallCheck$d(this,u),this.type="ContinueStatement",this.label=e};DataProperty_1=dist$5.DataProperty=function u(n){var e=n.name,r=n.expression;_classCallCheck$d(this,u),this.type="DataProperty",this.name=e,this.expression=r};DebuggerStatement_1=dist$5.DebuggerStatement=function u(){_classCallCheck$d(this,u),this.type="DebuggerStatement"};Directive_1=dist$5.Directive=function u(n){var e=n.rawValue;_classCallCheck$d(this,u),this.type="Directive",this.rawValue=e};DoWhileStatement_1=dist$5.DoWhileStatement=function u(n){var e=n.body,r=n.test;_classCallCheck$d(this,u),this.type="DoWhileStatement",this.body=e,this.test=r};EmptyStatement_1=dist$5.EmptyStatement=function u(){_classCallCheck$d(this,u),this.type="EmptyStatement"};Export_1=dist$5.Export=function u(n){var e=n.declaration;_classCallCheck$d(this,u),this.type="Export",this.declaration=e};ExportAllFrom_1=dist$5.ExportAllFrom=function u(n){var e=n.moduleSpecifier;_classCallCheck$d(this,u),this.type="ExportAllFrom",this.moduleSpecifier=e};ExportDefault_1=dist$5.ExportDefault=function u(n){var e=n.body;_classCallCheck$d(this,u),this.type="ExportDefault",this.body=e};ExportFrom_1=dist$5.ExportFrom=function u(n){var e=n.namedExports,r=n.moduleSpecifier;_classCallCheck$d(this,u),this.type="ExportFrom",this.namedExports=e,this.moduleSpecifier=r};ExportFromSpecifier_1=dist$5.ExportFromSpecifier=function u(n){var e=n.name,r=n.exportedName;_classCallCheck$d(this,u),this.type="ExportFromSpecifier",this.name=e,this.exportedName=r};ExportLocalSpecifier_1=dist$5.ExportLocalSpecifier=function u(n){var e=n.name,r=n.exportedName;_classCallCheck$d(this,u),this.type="ExportLocalSpecifier",this.name=e,this.exportedName=r};ExportLocals_1=dist$5.ExportLocals=function u(n){var e=n.namedExports;_classCallCheck$d(this,u),this.type="ExportLocals",this.namedExports=e};ExpressionStatement_1=dist$5.ExpressionStatement=function u(n){var e=n.expression;_classCallCheck$d(this,u),this.type="ExpressionStatement",this.expression=e};ForAwaitStatement_1=dist$5.ForAwaitStatement=function u(n){var e=n.left,r=n.right,a=n.body;_classCallCheck$d(this,u),this.type="ForAwaitStatement",this.left=e,this.right=r,this.body=a};ForInStatement_1=dist$5.ForInStatement=function u(n){var e=n.left,r=n.right,a=n.body;_classCallCheck$d(this,u),this.type="ForInStatement",this.left=e,this.right=r,this.body=a};ForOfStatement_1=dist$5.ForOfStatement=function u(n){var e=n.left,r=n.right,a=n.body;_classCallCheck$d(this,u),this.type="ForOfStatement",this.left=e,this.right=r,this.body=a};ForStatement_1=dist$5.ForStatement=function u(n){var e=n.init,r=n.test,a=n.update,s=n.body;_classCallCheck$d(this,u),this.type="ForStatement",this.init=e,this.test=r,this.update=a,this.body=s};FormalParameters_1=dist$5.FormalParameters=function u(n){var e=n.items,r=n.rest;_classCallCheck$d(this,u),this.type="FormalParameters",this.items=e,this.rest=r};FunctionBody_1=dist$5.FunctionBody=function u(n){var e=n.directives,r=n.statements;_classCallCheck$d(this,u),this.type="FunctionBody",this.directives=e,this.statements=r};FunctionDeclaration_1=dist$5.FunctionDeclaration=function u(n){var e=n.isAsync,r=n.isGenerator,a=n.name,s=n.params,o=n.body;_classCallCheck$d(this,u),this.type="FunctionDeclaration",this.isAsync=e,this.isGenerator=r,this.name=a,this.params=s,this.body=o};FunctionExpression_1=dist$5.FunctionExpression=function u(n){var e=n.isAsync,r=n.isGenerator,a=n.name,s=n.params,o=n.body;_classCallCheck$d(this,u),this.type="FunctionExpression",this.isAsync=e,this.isGenerator=r,this.name=a,this.params=s,this.body=o};Getter_1=dist$5.Getter=function u(n){var e=n.name,r=n.body;_classCallCheck$d(this,u),this.type="Getter",this.name=e,this.body=r};IdentifierExpression_1=dist$5.IdentifierExpression=function u(n){var e=n.name;_classCallCheck$d(this,u),this.type="IdentifierExpression",this.name=e};IfStatement_1=dist$5.IfStatement=function u(n){var e=n.test,r=n.consequent,a=n.alternate;_classCallCheck$d(this,u),this.type="IfStatement",this.test=e,this.consequent=r,this.alternate=a};Import_1=dist$5.Import=function u(n){var e=n.defaultBinding,r=n.namedImports,a=n.moduleSpecifier;_classCallCheck$d(this,u),this.type="Import",this.defaultBinding=e,this.namedImports=r,this.moduleSpecifier=a};ImportNamespace_1=dist$5.ImportNamespace=function u(n){var e=n.defaultBinding,r=n.namespaceBinding,a=n.moduleSpecifier;_classCallCheck$d(this,u),this.type="ImportNamespace",this.defaultBinding=e,this.namespaceBinding=r,this.moduleSpecifier=a};ImportSpecifier_1=dist$5.ImportSpecifier=function u(n){var e=n.name,r=n.binding;_classCallCheck$d(this,u),this.type="ImportSpecifier",this.name=e,this.binding=r};LabeledStatement_1=dist$5.LabeledStatement=function u(n){var e=n.label,r=n.body;_classCallCheck$d(this,u),this.type="LabeledStatement",this.label=e,this.body=r};LiteralBooleanExpression_1=dist$5.LiteralBooleanExpression=function u(n){var e=n.value;_classCallCheck$d(this,u),this.type="LiteralBooleanExpression",this.value=e};LiteralInfinityExpression_1=dist$5.LiteralInfinityExpression=function u(){_classCallCheck$d(this,u),this.type="LiteralInfinityExpression"};LiteralNullExpression_1=dist$5.LiteralNullExpression=function u(){_classCallCheck$d(this,u),this.type="LiteralNullExpression"};LiteralNumericExpression_1=dist$5.LiteralNumericExpression=function u(n){var e=n.value;_classCallCheck$d(this,u),this.type="LiteralNumericExpression",this.value=e};LiteralRegExpExpression_1=dist$5.LiteralRegExpExpression=function u(n){var e=n.pattern,r=n.global,a=n.ignoreCase,s=n.multiLine,o=n.dotAll,c=n.unicode,l=n.sticky;_classCallCheck$d(this,u),this.type="LiteralRegExpExpression",this.pattern=e,this.global=r,this.ignoreCase=a,this.multiLine=s,this.dotAll=o,this.unicode=c,this.sticky=l};LiteralStringExpression_1=dist$5.LiteralStringExpression=function u(n){var e=n.value;_classCallCheck$d(this,u),this.type="LiteralStringExpression",this.value=e};Method_1=dist$5.Method=function u(n){var e=n.isAsync,r=n.isGenerator,a=n.name,s=n.params,o=n.body;_classCallCheck$d(this,u),this.type="Method",this.isAsync=e,this.isGenerator=r,this.name=a,this.params=s,this.body=o};Module_1=dist$5.Module=function u(n){var e=n.directives,r=n.items;_classCallCheck$d(this,u),this.type="Module",this.directives=e,this.items=r};NewExpression_1=dist$5.NewExpression=function u(n){var e=n.callee,r=n.arguments;_classCallCheck$d(this,u),this.type="NewExpression",this.callee=e,this.arguments=r};NewTargetExpression_1=dist$5.NewTargetExpression=function u(){_classCallCheck$d(this,u),this.type="NewTargetExpression"};ObjectAssignmentTarget_1=dist$5.ObjectAssignmentTarget=function u(n){var e=n.properties,r=n.rest;_classCallCheck$d(this,u),this.type="ObjectAssignmentTarget",this.properties=e,this.rest=r};ObjectBinding_1=dist$5.ObjectBinding=function u(n){var e=n.properties,r=n.rest;_classCallCheck$d(this,u),this.type="ObjectBinding",this.properties=e,this.rest=r};ObjectExpression_1=dist$5.ObjectExpression=function u(n){var e=n.properties;_classCallCheck$d(this,u),this.type="ObjectExpression",this.properties=e};ReturnStatement_1=dist$5.ReturnStatement=function u(n){var e=n.expression;_classCallCheck$d(this,u),this.type="ReturnStatement",this.expression=e};Script_1=dist$5.Script=function u(n){var e=n.directives,r=n.statements;_classCallCheck$d(this,u),this.type="Script",this.directives=e,this.statements=r};Setter_1=dist$5.Setter=function u(n){var e=n.name,r=n.param,a=n.body;_classCallCheck$d(this,u),this.type="Setter",this.name=e,this.param=r,this.body=a};ShorthandProperty_1=dist$5.ShorthandProperty=function u(n){var e=n.name;_classCallCheck$d(this,u),this.type="ShorthandProperty",this.name=e};SpreadElement_1=dist$5.SpreadElement=function u(n){var e=n.expression;_classCallCheck$d(this,u),this.type="SpreadElement",this.expression=e};SpreadProperty_1=dist$5.SpreadProperty=function u(n){var e=n.expression;_classCallCheck$d(this,u),this.type="SpreadProperty",this.expression=e};StaticMemberAssignmentTarget_1=dist$5.StaticMemberAssignmentTarget=function u(n){var e=n.object,r=n.property;_classCallCheck$d(this,u),this.type="StaticMemberAssignmentTarget",this.object=e,this.property=r};StaticMemberExpression_1=dist$5.StaticMemberExpression=function u(n){var e=n.object,r=n.property;_classCallCheck$d(this,u),this.type="StaticMemberExpression",this.object=e,this.property=r};StaticPropertyName_1=dist$5.StaticPropertyName=function u(n){var e=n.value;_classCallCheck$d(this,u),this.type="StaticPropertyName",this.value=e};Super_1=dist$5.Super=function u(){_classCallCheck$d(this,u),this.type="Super"};SwitchCase_1=dist$5.SwitchCase=function u(n){var e=n.test,r=n.consequent;_classCallCheck$d(this,u),this.type="SwitchCase",this.test=e,this.consequent=r};SwitchDefault_1=dist$5.SwitchDefault=function u(n){var e=n.consequent;_classCallCheck$d(this,u),this.type="SwitchDefault",this.consequent=e};SwitchStatement_1=dist$5.SwitchStatement=function u(n){var e=n.discriminant,r=n.cases;_classCallCheck$d(this,u),this.type="SwitchStatement",this.discriminant=e,this.cases=r};SwitchStatementWithDefault_1=dist$5.SwitchStatementWithDefault=function u(n){var e=n.discriminant,r=n.preDefaultCases,a=n.defaultCase,s=n.postDefaultCases;_classCallCheck$d(this,u),this.type="SwitchStatementWithDefault",this.discriminant=e,this.preDefaultCases=r,this.defaultCase=a,this.postDefaultCases=s};TemplateElement_1=dist$5.TemplateElement=function u(n){var e=n.rawValue;_classCallCheck$d(this,u),this.type="TemplateElement",this.rawValue=e};TemplateExpression_1=dist$5.TemplateExpression=function u(n){var e=n.tag,r=n.elements;_classCallCheck$d(this,u),this.type="TemplateExpression",this.tag=e,this.elements=r};ThisExpression_1=dist$5.ThisExpression=function u(){_classCallCheck$d(this,u),this.type="ThisExpression"};ThrowStatement_1=dist$5.ThrowStatement=function u(n){var e=n.expression;_classCallCheck$d(this,u),this.type="ThrowStatement",this.expression=e};TryCatchStatement_1=dist$5.TryCatchStatement=function u(n){var e=n.body,r=n.catchClause;_classCallCheck$d(this,u),this.type="TryCatchStatement",this.body=e,this.catchClause=r};TryFinallyStatement_1=dist$5.TryFinallyStatement=function u(n){var e=n.body,r=n.catchClause,a=n.finalizer;_classCallCheck$d(this,u),this.type="TryFinallyStatement",this.body=e,this.catchClause=r,this.finalizer=a};UnaryExpression_1=dist$5.UnaryExpression=function u(n){var e=n.operator,r=n.operand;_classCallCheck$d(this,u),this.type="UnaryExpression",this.operator=e,this.operand=r};UpdateExpression_1=dist$5.UpdateExpression=function u(n){var e=n.isPrefix,r=n.operator,a=n.operand;_classCallCheck$d(this,u),this.type="UpdateExpression",this.isPrefix=e,this.operator=r,this.operand=a};VariableDeclaration_1=dist$5.VariableDeclaration=function u(n){var e=n.kind,r=n.declarators;_classCallCheck$d(this,u),this.type="VariableDeclaration",this.kind=e,this.declarators=r};VariableDeclarationStatement_1=dist$5.VariableDeclarationStatement=function u(n){var e=n.declaration;_classCallCheck$d(this,u),this.type="VariableDeclarationStatement",this.declaration=e};VariableDeclarator_1=dist$5.VariableDeclarator=function u(n){var e=n.binding,r=n.init;_classCallCheck$d(this,u),this.type="VariableDeclarator",this.binding=e,this.init=r};WhileStatement_1=dist$5.WhileStatement=function u(n){var e=n.test,r=n.body;_classCallCheck$d(this,u),this.type="WhileStatement",this.test=e,this.body=r};WithStatement_1=dist$5.WithStatement=function u(n){var e=n.object,r=n.body;_classCallCheck$d(this,u),this.type="WithStatement",this.object=e,this.body=r};YieldExpression_1=dist$5.YieldExpression=function u(n){var e=n.expression;_classCallCheck$d(this,u),this.type="YieldExpression",this.expression=e};YieldGeneratorExpression_1=dist$5.YieldGeneratorExpression=function u(n){var e=n.expression;_classCallCheck$d(this,u),this.type="YieldGeneratorExpression",this.expression=e};const dist$4=_mergeNamespaces({__proto__:null,get ArrayAssignmentTarget(){return ArrayAssignmentTarget_1},get ArrayBinding(){return ArrayBinding_1},get ArrayExpression(){return ArrayExpression_1},get ArrowExpression(){return ArrowExpression_1},get AssignmentExpression(){return AssignmentExpression_1},get AssignmentTargetIdentifier(){return AssignmentTargetIdentifier_1},get AssignmentTargetPropertyIdentifier(){return AssignmentTargetPropertyIdentifier_1},get AssignmentTargetPropertyProperty(){return AssignmentTargetPropertyProperty_1},get AssignmentTargetWithDefault(){return AssignmentTargetWithDefault_1},get AwaitExpression(){return AwaitExpression_1},get BinaryExpression(){return BinaryExpression_1},get BindingIdentifier(){return BindingIdentifier_1},get BindingPropertyIdentifier(){return BindingPropertyIdentifier_1},get BindingPropertyProperty(){return BindingPropertyProperty_1},get BindingWithDefault(){return BindingWithDefault_1},get Block(){return Block_1},get BlockStatement(){return BlockStatement_1},get BreakStatement(){return BreakStatement_1},get CallExpression(){return CallExpression_1},get CatchClause(){return CatchClause_1},get ClassDeclaration(){return ClassDeclaration_1},get ClassElement(){return ClassElement_1},get ClassExpression(){return ClassExpression_1},get CompoundAssignmentExpression(){return CompoundAssignmentExpression_1},get ComputedMemberAssignmentTarget(){return ComputedMemberAssignmentTarget_1},get ComputedMemberExpression(){return ComputedMemberExpression_1},get ComputedPropertyName(){return ComputedPropertyName_1},get ConditionalExpression(){return ConditionalExpression_1},get ContinueStatement(){return ContinueStatement_1},get DataProperty(){return DataProperty_1},get DebuggerStatement(){return DebuggerStatement_1},get Directive(){return Directive_1},get DoWhileStatement(){return DoWhileStatement_1},get EmptyStatement(){return EmptyStatement_1},get Export(){return Export_1},get ExportAllFrom(){return ExportAllFrom_1},get ExportDefault(){return ExportDefault_1},get ExportFrom(){return ExportFrom_1},get ExportFromSpecifier(){return ExportFromSpecifier_1},get ExportLocalSpecifier(){return ExportLocalSpecifier_1},get ExportLocals(){return ExportLocals_1},get ExpressionStatement(){return ExpressionStatement_1},get ForAwaitStatement(){return ForAwaitStatement_1},get ForInStatement(){return ForInStatement_1},get ForOfStatement(){return ForOfStatement_1},get ForStatement(){return ForStatement_1},get FormalParameters(){return FormalParameters_1},get FunctionBody(){return FunctionBody_1},get FunctionDeclaration(){return FunctionDeclaration_1},get FunctionExpression(){return FunctionExpression_1},get Getter(){return Getter_1},get IdentifierExpression(){return IdentifierExpression_1},get IfStatement(){return IfStatement_1},get Import(){return Import_1},get ImportNamespace(){return ImportNamespace_1},get ImportSpecifier(){return ImportSpecifier_1},get LabeledStatement(){return LabeledStatement_1},get LiteralBooleanExpression(){return LiteralBooleanExpression_1},get LiteralInfinityExpression(){return LiteralInfinityExpression_1},get LiteralNullExpression(){return LiteralNullExpression_1},get LiteralNumericExpression(){return LiteralNumericExpression_1},get LiteralRegExpExpression(){return LiteralRegExpExpression_1},get LiteralStringExpression(){return LiteralStringExpression_1},get Method(){return Method_1},get Module(){return Module_1},get NewExpression(){return NewExpression_1},get NewTargetExpression(){return NewTargetExpression_1},get ObjectAssignmentTarget(){return ObjectAssignmentTarget_1},get ObjectBinding(){return ObjectBinding_1},get ObjectExpression(){return ObjectExpression_1},get ReturnStatement(){return ReturnStatement_1},get Script(){return Script_1},get Setter(){return Setter_1},get ShorthandProperty(){return ShorthandProperty_1},get SpreadElement(){return SpreadElement_1},get SpreadProperty(){return SpreadProperty_1},get StaticMemberAssignmentTarget(){return StaticMemberAssignmentTarget_1},get StaticMemberExpression(){return StaticMemberExpression_1},get StaticPropertyName(){return StaticPropertyName_1},get Super(){return Super_1},get SwitchCase(){return SwitchCase_1},get SwitchDefault(){return SwitchDefault_1},get SwitchStatement(){return SwitchStatement_1},get SwitchStatementWithDefault(){return SwitchStatementWithDefault_1},get TemplateElement(){return TemplateElement_1},get TemplateExpression(){return TemplateExpression_1},get ThisExpression(){return ThisExpression_1},get ThrowStatement(){return ThrowStatement_1},get TryCatchStatement(){return TryCatchStatement_1},get TryFinallyStatement(){return TryFinallyStatement_1},get UnaryExpression(){return UnaryExpression_1},get UpdateExpression(){return UpdateExpression_1},get VariableDeclaration(){return VariableDeclaration_1},get VariableDeclarationStatement(){return VariableDeclarationStatement_1},get VariableDeclarator(){return VariableDeclarator_1},get WhileStatement(){return WhileStatement_1},get WithStatement(){return WithStatement_1},get YieldExpression(){return YieldExpression_1},get YieldGeneratorExpression(){return YieldGeneratorExpression_1},default:dist$5},[dist$5]),require$$0$5=getAugmentedNamespace(dist$4);Object.defineProperty(memoize$2,"__esModule",{value:!0});var _default$8=memoize$2.default=memoize,_shiftAst$5=require$$0$5;_interopRequireWildcard$3(_shiftAst$5);function _interopRequireWildcard$3(u){if(u&&u.__esModule)return u;var n={};if(u!=null)for(var e in u)Object.prototype.hasOwnProperty.call(u,e)&&(n[e]=u[e]);return n.default=u,n}function memoize(u){var n=new WeakMap;return{reduceArrayAssignmentTarget:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceArrayAssignmentTarget(r,a);return n.set(r,s),s},reduceArrayBinding:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceArrayBinding(r,a);return n.set(r,s),s},reduceArrayExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceArrayExpression(r,a);return n.set(r,s),s},reduceArrowExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceArrowExpression(r,a);return n.set(r,s),s},reduceAssignmentExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceAssignmentExpression(r,a);return n.set(r,s),s},reduceAssignmentTargetIdentifier:function(r){if(n.has(r))return n.get(r);var a=u.reduceAssignmentTargetIdentifier(r);return n.set(r,a),a},reduceAssignmentTargetPropertyIdentifier:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceAssignmentTargetPropertyIdentifier(r,a);return n.set(r,s),s},reduceAssignmentTargetPropertyProperty:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceAssignmentTargetPropertyProperty(r,a);return n.set(r,s),s},reduceAssignmentTargetWithDefault:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceAssignmentTargetWithDefault(r,a);return n.set(r,s),s},reduceAwaitExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceAwaitExpression(r,a);return n.set(r,s),s},reduceBinaryExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceBinaryExpression(r,a);return n.set(r,s),s},reduceBindingIdentifier:function(r){if(n.has(r))return n.get(r);var a=u.reduceBindingIdentifier(r);return n.set(r,a),a},reduceBindingPropertyIdentifier:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceBindingPropertyIdentifier(r,a);return n.set(r,s),s},reduceBindingPropertyProperty:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceBindingPropertyProperty(r,a);return n.set(r,s),s},reduceBindingWithDefault:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceBindingWithDefault(r,a);return n.set(r,s),s},reduceBlock:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceBlock(r,a);return n.set(r,s),s},reduceBlockStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceBlockStatement(r,a);return n.set(r,s),s},reduceBreakStatement:function(r){if(n.has(r))return n.get(r);var a=u.reduceBreakStatement(r);return n.set(r,a),a},reduceCallExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceCallExpression(r,a);return n.set(r,s),s},reduceCatchClause:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceCatchClause(r,a);return n.set(r,s),s},reduceClassDeclaration:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceClassDeclaration(r,a);return n.set(r,s),s},reduceClassElement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceClassElement(r,a);return n.set(r,s),s},reduceClassExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceClassExpression(r,a);return n.set(r,s),s},reduceCompoundAssignmentExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceCompoundAssignmentExpression(r,a);return n.set(r,s),s},reduceComputedMemberAssignmentTarget:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceComputedMemberAssignmentTarget(r,a);return n.set(r,s),s},reduceComputedMemberExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceComputedMemberExpression(r,a);return n.set(r,s),s},reduceComputedPropertyName:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceComputedPropertyName(r,a);return n.set(r,s),s},reduceConditionalExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceConditionalExpression(r,a);return n.set(r,s),s},reduceContinueStatement:function(r){if(n.has(r))return n.get(r);var a=u.reduceContinueStatement(r);return n.set(r,a),a},reduceDataProperty:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceDataProperty(r,a);return n.set(r,s),s},reduceDebuggerStatement:function(r){if(n.has(r))return n.get(r);var a=u.reduceDebuggerStatement(r);return n.set(r,a),a},reduceDirective:function(r){if(n.has(r))return n.get(r);var a=u.reduceDirective(r);return n.set(r,a),a},reduceDoWhileStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceDoWhileStatement(r,a);return n.set(r,s),s},reduceEmptyStatement:function(r){if(n.has(r))return n.get(r);var a=u.reduceEmptyStatement(r);return n.set(r,a),a},reduceExport:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceExport(r,a);return n.set(r,s),s},reduceExportAllFrom:function(r){if(n.has(r))return n.get(r);var a=u.reduceExportAllFrom(r);return n.set(r,a),a},reduceExportDefault:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceExportDefault(r,a);return n.set(r,s),s},reduceExportFrom:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceExportFrom(r,a);return n.set(r,s),s},reduceExportFromSpecifier:function(r){if(n.has(r))return n.get(r);var a=u.reduceExportFromSpecifier(r);return n.set(r,a),a},reduceExportLocalSpecifier:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceExportLocalSpecifier(r,a);return n.set(r,s),s},reduceExportLocals:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceExportLocals(r,a);return n.set(r,s),s},reduceExpressionStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceExpressionStatement(r,a);return n.set(r,s),s},reduceForAwaitStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceForAwaitStatement(r,a);return n.set(r,s),s},reduceForInStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceForInStatement(r,a);return n.set(r,s),s},reduceForOfStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceForOfStatement(r,a);return n.set(r,s),s},reduceForStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceForStatement(r,a);return n.set(r,s),s},reduceFormalParameters:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceFormalParameters(r,a);return n.set(r,s),s},reduceFunctionBody:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceFunctionBody(r,a);return n.set(r,s),s},reduceFunctionDeclaration:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceFunctionDeclaration(r,a);return n.set(r,s),s},reduceFunctionExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceFunctionExpression(r,a);return n.set(r,s),s},reduceGetter:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceGetter(r,a);return n.set(r,s),s},reduceIdentifierExpression:function(r){if(n.has(r))return n.get(r);var a=u.reduceIdentifierExpression(r);return n.set(r,a),a},reduceIfStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceIfStatement(r,a);return n.set(r,s),s},reduceImport:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceImport(r,a);return n.set(r,s),s},reduceImportNamespace:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceImportNamespace(r,a);return n.set(r,s),s},reduceImportSpecifier:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceImportSpecifier(r,a);return n.set(r,s),s},reduceLabeledStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceLabeledStatement(r,a);return n.set(r,s),s},reduceLiteralBooleanExpression:function(r){if(n.has(r))return n.get(r);var a=u.reduceLiteralBooleanExpression(r);return n.set(r,a),a},reduceLiteralInfinityExpression:function(r){if(n.has(r))return n.get(r);var a=u.reduceLiteralInfinityExpression(r);return n.set(r,a),a},reduceLiteralNullExpression:function(r){if(n.has(r))return n.get(r);var a=u.reduceLiteralNullExpression(r);return n.set(r,a),a},reduceLiteralNumericExpression:function(r){if(n.has(r))return n.get(r);var a=u.reduceLiteralNumericExpression(r);return n.set(r,a),a},reduceLiteralRegExpExpression:function(r){if(n.has(r))return n.get(r);var a=u.reduceLiteralRegExpExpression(r);return n.set(r,a),a},reduceLiteralStringExpression:function(r){if(n.has(r))return n.get(r);var a=u.reduceLiteralStringExpression(r);return n.set(r,a),a},reduceMethod:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceMethod(r,a);return n.set(r,s),s},reduceModule:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceModule(r,a);return n.set(r,s),s},reduceNewExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceNewExpression(r,a);return n.set(r,s),s},reduceNewTargetExpression:function(r){if(n.has(r))return n.get(r);var a=u.reduceNewTargetExpression(r);return n.set(r,a),a},reduceObjectAssignmentTarget:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceObjectAssignmentTarget(r,a);return n.set(r,s),s},reduceObjectBinding:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceObjectBinding(r,a);return n.set(r,s),s},reduceObjectExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceObjectExpression(r,a);return n.set(r,s),s},reduceReturnStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceReturnStatement(r,a);return n.set(r,s),s},reduceScript:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceScript(r,a);return n.set(r,s),s},reduceSetter:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceSetter(r,a);return n.set(r,s),s},reduceShorthandProperty:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceShorthandProperty(r,a);return n.set(r,s),s},reduceSpreadElement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceSpreadElement(r,a);return n.set(r,s),s},reduceSpreadProperty:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceSpreadProperty(r,a);return n.set(r,s),s},reduceStaticMemberAssignmentTarget:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceStaticMemberAssignmentTarget(r,a);return n.set(r,s),s},reduceStaticMemberExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceStaticMemberExpression(r,a);return n.set(r,s),s},reduceStaticPropertyName:function(r){if(n.has(r))return n.get(r);var a=u.reduceStaticPropertyName(r);return n.set(r,a),a},reduceSuper:function(r){if(n.has(r))return n.get(r);var a=u.reduceSuper(r);return n.set(r,a),a},reduceSwitchCase:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceSwitchCase(r,a);return n.set(r,s),s},reduceSwitchDefault:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceSwitchDefault(r,a);return n.set(r,s),s},reduceSwitchStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceSwitchStatement(r,a);return n.set(r,s),s},reduceSwitchStatementWithDefault:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceSwitchStatementWithDefault(r,a);return n.set(r,s),s},reduceTemplateElement:function(r){if(n.has(r))return n.get(r);var a=u.reduceTemplateElement(r);return n.set(r,a),a},reduceTemplateExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceTemplateExpression(r,a);return n.set(r,s),s},reduceThisExpression:function(r){if(n.has(r))return n.get(r);var a=u.reduceThisExpression(r);return n.set(r,a),a},reduceThrowStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceThrowStatement(r,a);return n.set(r,s),s},reduceTryCatchStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceTryCatchStatement(r,a);return n.set(r,s),s},reduceTryFinallyStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceTryFinallyStatement(r,a);return n.set(r,s),s},reduceUnaryExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceUnaryExpression(r,a);return n.set(r,s),s},reduceUpdateExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceUpdateExpression(r,a);return n.set(r,s),s},reduceVariableDeclaration:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceVariableDeclaration(r,a);return n.set(r,s),s},reduceVariableDeclarationStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceVariableDeclarationStatement(r,a);return n.set(r,s),s},reduceVariableDeclarator:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceVariableDeclarator(r,a);return n.set(r,s),s},reduceWhileStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceWhileStatement(r,a);return n.set(r,s),s},reduceWithStatement:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceWithStatement(r,a);return n.set(r,s),s},reduceYieldExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceYieldExpression(r,a);return n.set(r,s),s},reduceYieldGeneratorExpression:function(r,a){if(n.has(r))return n.get(r);var s=u.reduceYieldGeneratorExpression(r,a);return n.set(r,s),s}}}const memoize$1=_mergeNamespaces({__proto__:null,default:_default$8},[memoize$2]),require$$4$1=getAugmentedNamespace(memoize$1);var cloneReducer$1={};Object.defineProperty(cloneReducer$1,"__esModule",{value:!0});var _createClass$a=function(){function u(n,e){for(var r=0;r<e.length;r++){var a=e[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(n,e,r){return e&&u(n.prototype,e),r&&u(n,r),n}}(),_shiftAst$4=require$$0$5,Shift$1=_interopRequireWildcard$2(_shiftAst$4);function _interopRequireWildcard$2(u){if(u&&u.__esModule)return u;var n={};if(u!=null)for(var e in u)Object.prototype.hasOwnProperty.call(u,e)&&(n[e]=u[e]);return n.default=u,n}function _classCallCheck$c(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}var CloneReducer=function(){function u(){_classCallCheck$c(this,u)}return _createClass$a(u,[{key:"reduceArrayAssignmentTarget",value:function(e,r){var a=r.elements,s=r.rest;return new Shift$1.ArrayAssignmentTarget({elements:a,rest:s})}},{key:"reduceArrayBinding",value:function(e,r){var a=r.elements,s=r.rest;return new Shift$1.ArrayBinding({elements:a,rest:s})}},{key:"reduceArrayExpression",value:function(e,r){var a=r.elements;return new Shift$1.ArrayExpression({elements:a})}},{key:"reduceArrowExpression",value:function(e,r){var a=r.params,s=r.body;return new Shift$1.ArrowExpression({isAsync:e.isAsync,params:a,body:s})}},{key:"reduceAssignmentExpression",value:function(e,r){var a=r.binding,s=r.expression;return new Shift$1.AssignmentExpression({binding:a,expression:s})}},{key:"reduceAssignmentTargetIdentifier",value:function(e){return new Shift$1.AssignmentTargetIdentifier({name:e.name})}},{key:"reduceAssignmentTargetPropertyIdentifier",value:function(e,r){var a=r.binding,s=r.init;return new Shift$1.AssignmentTargetPropertyIdentifier({binding:a,init:s})}},{key:"reduceAssignmentTargetPropertyProperty",value:function(e,r){var a=r.name,s=r.binding;return new Shift$1.AssignmentTargetPropertyProperty({name:a,binding:s})}},{key:"reduceAssignmentTargetWithDefault",value:function(e,r){var a=r.binding,s=r.init;return new Shift$1.AssignmentTargetWithDefault({binding:a,init:s})}},{key:"reduceAwaitExpression",value:function(e,r){var a=r.expression;return new Shift$1.AwaitExpression({expression:a})}},{key:"reduceBinaryExpression",value:function(e,r){var a=r.left,s=r.right;return new Shift$1.BinaryExpression({left:a,operator:e.operator,right:s})}},{key:"reduceBindingIdentifier",value:function(e){return new Shift$1.BindingIdentifier({name:e.name})}},{key:"reduceBindingPropertyIdentifier",value:function(e,r){var a=r.binding,s=r.init;return new Shift$1.BindingPropertyIdentifier({binding:a,init:s})}},{key:"reduceBindingPropertyProperty",value:function(e,r){var a=r.name,s=r.binding;return new Shift$1.BindingPropertyProperty({name:a,binding:s})}},{key:"reduceBindingWithDefault",value:function(e,r){var a=r.binding,s=r.init;return new Shift$1.BindingWithDefault({binding:a,init:s})}},{key:"reduceBlock",value:function(e,r){var a=r.statements;return new Shift$1.Block({statements:a})}},{key:"reduceBlockStatement",value:function(e,r){var a=r.block;return new Shift$1.BlockStatement({block:a})}},{key:"reduceBreakStatement",value:function(e){return new Shift$1.BreakStatement({label:e.label})}},{key:"reduceCallExpression",value:function(e,r){var a=r.callee,s=r.arguments;return new Shift$1.CallExpression({callee:a,arguments:s})}},{key:"reduceCatchClause",value:function(e,r){var a=r.binding,s=r.body;return new Shift$1.CatchClause({binding:a,body:s})}},{key:"reduceClassDeclaration",value:function(e,r){var a=r.name,s=r.super,o=r.elements;return new Shift$1.ClassDeclaration({name:a,super:s,elements:o})}},{key:"reduceClassElement",value:function(e,r){var a=r.method;return new Shift$1.ClassElement({isStatic:e.isStatic,method:a})}},{key:"reduceClassExpression",value:function(e,r){var a=r.name,s=r.super,o=r.elements;return new Shift$1.ClassExpression({name:a,super:s,elements:o})}},{key:"reduceCompoundAssignmentExpression",value:function(e,r){var a=r.binding,s=r.expression;return new Shift$1.CompoundAssignmentExpression({binding:a,operator:e.operator,expression:s})}},{key:"reduceComputedMemberAssignmentTarget",value:function(e,r){var a=r.object,s=r.expression;return new Shift$1.ComputedMemberAssignmentTarget({object:a,expression:s})}},{key:"reduceComputedMemberExpression",value:function(e,r){var a=r.object,s=r.expression;return new Shift$1.ComputedMemberExpression({object:a,expression:s})}},{key:"reduceComputedPropertyName",value:function(e,r){var a=r.expression;return new Shift$1.ComputedPropertyName({expression:a})}},{key:"reduceConditionalExpression",value:function(e,r){var a=r.test,s=r.consequent,o=r.alternate;return new Shift$1.ConditionalExpression({test:a,consequent:s,alternate:o})}},{key:"reduceContinueStatement",value:function(e){return new Shift$1.ContinueStatement({label:e.label})}},{key:"reduceDataProperty",value:function(e,r){var a=r.name,s=r.expression;return new Shift$1.DataProperty({name:a,expression:s})}},{key:"reduceDebuggerStatement",value:function(e){return new Shift$1.DebuggerStatement}},{key:"reduceDirective",value:function(e){return new Shift$1.Directive({rawValue:e.rawValue})}},{key:"reduceDoWhileStatement",value:function(e,r){var a=r.body,s=r.test;return new Shift$1.DoWhileStatement({body:a,test:s})}},{key:"reduceEmptyStatement",value:function(e){return new Shift$1.EmptyStatement}},{key:"reduceExport",value:function(e,r){var a=r.declaration;return new Shift$1.Export({declaration:a})}},{key:"reduceExportAllFrom",value:function(e){return new Shift$1.ExportAllFrom({moduleSpecifier:e.moduleSpecifier})}},{key:"reduceExportDefault",value:function(e,r){var a=r.body;return new Shift$1.ExportDefault({body:a})}},{key:"reduceExportFrom",value:function(e,r){var a=r.namedExports;return new Shift$1.ExportFrom({namedExports:a,moduleSpecifier:e.moduleSpecifier})}},{key:"reduceExportFromSpecifier",value:function(e){return new Shift$1.ExportFromSpecifier({name:e.name,exportedName:e.exportedName})}},{key:"reduceExportLocalSpecifier",value:function(e,r){var a=r.name;return new Shift$1.ExportLocalSpecifier({name:a,exportedName:e.exportedName})}},{key:"reduceExportLocals",value:function(e,r){var a=r.namedExports;return new Shift$1.ExportLocals({namedExports:a})}},{key:"reduceExpressionStatement",value:function(e,r){var a=r.expression;return new Shift$1.ExpressionStatement({expression:a})}},{key:"reduceForAwaitStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return new Shift$1.ForAwaitStatement({left:a,right:s,body:o})}},{key:"reduceForInStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return new Shift$1.ForInStatement({left:a,right:s,body:o})}},{key:"reduceForOfStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return new Shift$1.ForOfStatement({left:a,right:s,body:o})}},{key:"reduceForStatement",value:function(e,r){var a=r.init,s=r.test,o=r.update,c=r.body;return new Shift$1.ForStatement({init:a,test:s,update:o,body:c})}},{key:"reduceFormalParameters",value:function(e,r){var a=r.items,s=r.rest;return new Shift$1.FormalParameters({items:a,rest:s})}},{key:"reduceFunctionBody",value:function(e,r){var a=r.directives,s=r.statements;return new Shift$1.FunctionBody({directives:a,statements:s})}},{key:"reduceFunctionDeclaration",value:function(e,r){var a=r.name,s=r.params,o=r.body;return new Shift$1.FunctionDeclaration({isAsync:e.isAsync,isGenerator:e.isGenerator,name:a,params:s,body:o})}},{key:"reduceFunctionExpression",value:function(e,r){var a=r.name,s=r.params,o=r.body;return new Shift$1.FunctionExpression({isAsync:e.isAsync,isGenerator:e.isGenerator,name:a,params:s,body:o})}},{key:"reduceGetter",value:function(e,r){var a=r.name,s=r.body;return new Shift$1.Getter({name:a,body:s})}},{key:"reduceIdentifierExpression",value:function(e){return new Shift$1.IdentifierExpression({name:e.name})}},{key:"reduceIfStatement",value:function(e,r){var a=r.test,s=r.consequent,o=r.alternate;return new Shift$1.IfStatement({test:a,consequent:s,alternate:o})}},{key:"reduceImport",value:function(e,r){var a=r.defaultBinding,s=r.namedImports;return new Shift$1.Import({defaultBinding:a,namedImports:s,moduleSpecifier:e.moduleSpecifier})}},{key:"reduceImportNamespace",value:function(e,r){var a=r.defaultBinding,s=r.namespaceBinding;return new Shift$1.ImportNamespace({defaultBinding:a,namespaceBinding:s,moduleSpecifier:e.moduleSpecifier})}},{key:"reduceImportSpecifier",value:function(e,r){var a=r.binding;return new Shift$1.ImportSpecifier({name:e.name,binding:a})}},{key:"reduceLabeledStatement",value:function(e,r){var a=r.body;return new Shift$1.LabeledStatement({label:e.label,body:a})}},{key:"reduceLiteralBooleanExpression",value:function(e){return new Shift$1.LiteralBooleanExpression({value:e.value})}},{key:"reduceLiteralInfinityExpression",value:function(e){return new Shift$1.LiteralInfinityExpression}},{key:"reduceLiteralNullExpression",value:function(e){return new Shift$1.LiteralNullExpression}},{key:"reduceLiteralNumericExpression",value:function(e){return new Shift$1.LiteralNumericExpression({value:e.value})}},{key:"reduceLiteralRegExpExpression",value:function(e){return new Shift$1.LiteralRegExpExpression({pattern:e.pattern,global:e.global,ignoreCase:e.ignoreCase,multiLine:e.multiLine,dotAll:e.dotAll,unicode:e.unicode,sticky:e.sticky})}},{key:"reduceLiteralStringExpression",value:function(e){return new Shift$1.LiteralStringExpression({value:e.value})}},{key:"reduceMethod",value:function(e,r){var a=r.name,s=r.params,o=r.body;return new Shift$1.Method({isAsync:e.isAsync,isGenerator:e.isGenerator,name:a,params:s,body:o})}},{key:"reduceModule",value:function(e,r){var a=r.directives,s=r.items;return new Shift$1.Module({directives:a,items:s})}},{key:"reduceNewExpression",value:function(e,r){var a=r.callee,s=r.arguments;return new Shift$1.NewExpression({callee:a,arguments:s})}},{key:"reduceNewTargetExpression",value:function(e){return new Shift$1.NewTargetExpression}},{key:"reduceObjectAssignmentTarget",value:function(e,r){var a=r.properties,s=r.rest;return new Shift$1.ObjectAssignmentTarget({properties:a,rest:s})}},{key:"reduceObjectBinding",value:function(e,r){var a=r.properties,s=r.rest;return new Shift$1.ObjectBinding({properties:a,rest:s})}},{key:"reduceObjectExpression",value:function(e,r){var a=r.properties;return new Shift$1.ObjectExpression({properties:a})}},{key:"reduceReturnStatement",value:function(e,r){var a=r.expression;return new Shift$1.ReturnStatement({expression:a})}},{key:"reduceScript",value:function(e,r){var a=r.directives,s=r.statements;return new Shift$1.Script({directives:a,statements:s})}},{key:"reduceSetter",value:function(e,r){var a=r.name,s=r.param,o=r.body;return new Shift$1.Setter({name:a,param:s,body:o})}},{key:"reduceShorthandProperty",value:function(e,r){var a=r.name;return new Shift$1.ShorthandProperty({name:a})}},{key:"reduceSpreadElement",value:function(e,r){var a=r.expression;return new Shift$1.SpreadElement({expression:a})}},{key:"reduceSpreadProperty",value:function(e,r){var a=r.expression;return new Shift$1.SpreadProperty({expression:a})}},{key:"reduceStaticMemberAssignmentTarget",value:function(e,r){var a=r.object;return new Shift$1.StaticMemberAssignmentTarget({object:a,property:e.property})}},{key:"reduceStaticMemberExpression",value:function(e,r){var a=r.object;return new Shift$1.StaticMemberExpression({object:a,property:e.property})}},{key:"reduceStaticPropertyName",value:function(e){return new Shift$1.StaticPropertyName({value:e.value})}},{key:"reduceSuper",value:function(e){return new Shift$1.Super}},{key:"reduceSwitchCase",value:function(e,r){var a=r.test,s=r.consequent;return new Shift$1.SwitchCase({test:a,consequent:s})}},{key:"reduceSwitchDefault",value:function(e,r){var a=r.consequent;return new Shift$1.SwitchDefault({consequent:a})}},{key:"reduceSwitchStatement",value:function(e,r){var a=r.discriminant,s=r.cases;return new Shift$1.SwitchStatement({discriminant:a,cases:s})}},{key:"reduceSwitchStatementWithDefault",value:function(e,r){var a=r.discriminant,s=r.preDefaultCases,o=r.defaultCase,c=r.postDefaultCases;return new Shift$1.SwitchStatementWithDefault({discriminant:a,preDefaultCases:s,defaultCase:o,postDefaultCases:c})}},{key:"reduceTemplateElement",value:function(e){return new Shift$1.TemplateElement({rawValue:e.rawValue})}},{key:"reduceTemplateExpression",value:function(e,r){var a=r.tag,s=r.elements;return new Shift$1.TemplateExpression({tag:a,elements:s})}},{key:"reduceThisExpression",value:function(e){return new Shift$1.ThisExpression}},{key:"reduceThrowStatement",value:function(e,r){var a=r.expression;return new Shift$1.ThrowStatement({expression:a})}},{key:"reduceTryCatchStatement",value:function(e,r){var a=r.body,s=r.catchClause;return new Shift$1.TryCatchStatement({body:a,catchClause:s})}},{key:"reduceTryFinallyStatement",value:function(e,r){var a=r.body,s=r.catchClause,o=r.finalizer;return new Shift$1.TryFinallyStatement({body:a,catchClause:s,finalizer:o})}},{key:"reduceUnaryExpression",value:function(e,r){var a=r.operand;return new Shift$1.UnaryExpression({operator:e.operator,operand:a})}},{key:"reduceUpdateExpression",value:function(e,r){var a=r.operand;return new Shift$1.UpdateExpression({isPrefix:e.isPrefix,operator:e.operator,operand:a})}},{key:"reduceVariableDeclaration",value:function(e,r){var a=r.declarators;return new Shift$1.VariableDeclaration({kind:e.kind,declarators:a})}},{key:"reduceVariableDeclarationStatement",value:function(e,r){var a=r.declaration;return new Shift$1.VariableDeclarationStatement({declaration:a})}},{key:"reduceVariableDeclarator",value:function(e,r){var a=r.binding,s=r.init;return new Shift$1.VariableDeclarator({binding:a,init:s})}},{key:"reduceWhileStatement",value:function(e,r){var a=r.test,s=r.body;return new Shift$1.WhileStatement({test:a,body:s})}},{key:"reduceWithStatement",value:function(e,r){var a=r.object,s=r.body;return new Shift$1.WithStatement({object:a,body:s})}},{key:"reduceYieldExpression",value:function(e,r){var a=r.expression;return new Shift$1.YieldExpression({expression:a})}},{key:"reduceYieldGeneratorExpression",value:function(e,r){var a=r.expression;return new Shift$1.YieldGeneratorExpression({expression:a})}}]),u}(),_default$7=cloneReducer$1.default=CloneReducer;const cloneReducer=_mergeNamespaces({__proto__:null,default:_default$7},[cloneReducer$1]),require$$5$1=getAugmentedNamespace(cloneReducer);var lazyCloneReducer$1={};Object.defineProperty(lazyCloneReducer$1,"__esModule",{value:!0});var _createClass$9=function(){function u(n,e){for(var r=0;r<e.length;r++){var a=e[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(n,e,r){return e&&u(n.prototype,e),r&&u(n,r),n}}(),_shiftAst$3=require$$0$5,Shift=_interopRequireWildcard$1(_shiftAst$3);function _interopRequireWildcard$1(u){if(u&&u.__esModule)return u;var n={};if(u!=null)for(var e in u)Object.prototype.hasOwnProperty.call(u,e)&&(n[e]=u[e]);return n.default=u,n}function _classCallCheck$b(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}var LazyCloneReducer=function(){function u(){_classCallCheck$b(this,u)}return _createClass$9(u,[{key:"reduceArrayAssignmentTarget",value:function(e,r){var a=r.elements,s=r.rest;return e.elements.length===a.length&&e.elements.every(function(o,c){return o===a[c]})&&e.rest===s?e:new Shift.ArrayAssignmentTarget({elements:a,rest:s})}},{key:"reduceArrayBinding",value:function(e,r){var a=r.elements,s=r.rest;return e.elements.length===a.length&&e.elements.every(function(o,c){return o===a[c]})&&e.rest===s?e:new Shift.ArrayBinding({elements:a,rest:s})}},{key:"reduceArrayExpression",value:function(e,r){var a=r.elements;return e.elements.length===a.length&&e.elements.every(function(s,o){return s===a[o]})?e:new Shift.ArrayExpression({elements:a})}},{key:"reduceArrowExpression",value:function(e,r){var a=r.params,s=r.body;return e.params===a&&e.body===s?e:new Shift.ArrowExpression({isAsync:e.isAsync,params:a,body:s})}},{key:"reduceAssignmentExpression",value:function(e,r){var a=r.binding,s=r.expression;return e.binding===a&&e.expression===s?e:new Shift.AssignmentExpression({binding:a,expression:s})}},{key:"reduceAssignmentTargetIdentifier",value:function(e){return e}},{key:"reduceAssignmentTargetPropertyIdentifier",value:function(e,r){var a=r.binding,s=r.init;return e.binding===a&&e.init===s?e:new Shift.AssignmentTargetPropertyIdentifier({binding:a,init:s})}},{key:"reduceAssignmentTargetPropertyProperty",value:function(e,r){var a=r.name,s=r.binding;return e.name===a&&e.binding===s?e:new Shift.AssignmentTargetPropertyProperty({name:a,binding:s})}},{key:"reduceAssignmentTargetWithDefault",value:function(e,r){var a=r.binding,s=r.init;return e.binding===a&&e.init===s?e:new Shift.AssignmentTargetWithDefault({binding:a,init:s})}},{key:"reduceAwaitExpression",value:function(e,r){var a=r.expression;return e.expression===a?e:new Shift.AwaitExpression({expression:a})}},{key:"reduceBinaryExpression",value:function(e,r){var a=r.left,s=r.right;return e.left===a&&e.right===s?e:new Shift.BinaryExpression({left:a,operator:e.operator,right:s})}},{key:"reduceBindingIdentifier",value:function(e){return e}},{key:"reduceBindingPropertyIdentifier",value:function(e,r){var a=r.binding,s=r.init;return e.binding===a&&e.init===s?e:new Shift.BindingPropertyIdentifier({binding:a,init:s})}},{key:"reduceBindingPropertyProperty",value:function(e,r){var a=r.name,s=r.binding;return e.name===a&&e.binding===s?e:new Shift.BindingPropertyProperty({name:a,binding:s})}},{key:"reduceBindingWithDefault",value:function(e,r){var a=r.binding,s=r.init;return e.binding===a&&e.init===s?e:new Shift.BindingWithDefault({binding:a,init:s})}},{key:"reduceBlock",value:function(e,r){var a=r.statements;return e.statements.length===a.length&&e.statements.every(function(s,o){return s===a[o]})?e:new Shift.Block({statements:a})}},{key:"reduceBlockStatement",value:function(e,r){var a=r.block;return e.block===a?e:new Shift.BlockStatement({block:a})}},{key:"reduceBreakStatement",value:function(e){return e}},{key:"reduceCallExpression",value:function(e,r){var a=r.callee,s=r.arguments;return e.callee===a&&e.arguments.length===s.length&&e.arguments.every(function(o,c){return o===s[c]})?e:new Shift.CallExpression({callee:a,arguments:s})}},{key:"reduceCatchClause",value:function(e,r){var a=r.binding,s=r.body;return e.binding===a&&e.body===s?e:new Shift.CatchClause({binding:a,body:s})}},{key:"reduceClassDeclaration",value:function(e,r){var a=r.name,s=r.super,o=r.elements;return e.name===a&&e.super===s&&e.elements.length===o.length&&e.elements.every(function(c,l){return c===o[l]})?e:new Shift.ClassDeclaration({name:a,super:s,elements:o})}},{key:"reduceClassElement",value:function(e,r){var a=r.method;return e.method===a?e:new Shift.ClassElement({isStatic:e.isStatic,method:a})}},{key:"reduceClassExpression",value:function(e,r){var a=r.name,s=r.super,o=r.elements;return e.name===a&&e.super===s&&e.elements.length===o.length&&e.elements.every(function(c,l){return c===o[l]})?e:new Shift.ClassExpression({name:a,super:s,elements:o})}},{key:"reduceCompoundAssignmentExpression",value:function(e,r){var a=r.binding,s=r.expression;return e.binding===a&&e.expression===s?e:new Shift.CompoundAssignmentExpression({binding:a,operator:e.operator,expression:s})}},{key:"reduceComputedMemberAssignmentTarget",value:function(e,r){var a=r.object,s=r.expression;return e.object===a&&e.expression===s?e:new Shift.ComputedMemberAssignmentTarget({object:a,expression:s})}},{key:"reduceComputedMemberExpression",value:function(e,r){var a=r.object,s=r.expression;return e.object===a&&e.expression===s?e:new Shift.ComputedMemberExpression({object:a,expression:s})}},{key:"reduceComputedPropertyName",value:function(e,r){var a=r.expression;return e.expression===a?e:new Shift.ComputedPropertyName({expression:a})}},{key:"reduceConditionalExpression",value:function(e,r){var a=r.test,s=r.consequent,o=r.alternate;return e.test===a&&e.consequent===s&&e.alternate===o?e:new Shift.ConditionalExpression({test:a,consequent:s,alternate:o})}},{key:"reduceContinueStatement",value:function(e){return e}},{key:"reduceDataProperty",value:function(e,r){var a=r.name,s=r.expression;return e.name===a&&e.expression===s?e:new Shift.DataProperty({name:a,expression:s})}},{key:"reduceDebuggerStatement",value:function(e){return e}},{key:"reduceDirective",value:function(e){return e}},{key:"reduceDoWhileStatement",value:function(e,r){var a=r.body,s=r.test;return e.body===a&&e.test===s?e:new Shift.DoWhileStatement({body:a,test:s})}},{key:"reduceEmptyStatement",value:function(e){return e}},{key:"reduceExport",value:function(e,r){var a=r.declaration;return e.declaration===a?e:new Shift.Export({declaration:a})}},{key:"reduceExportAllFrom",value:function(e){return e}},{key:"reduceExportDefault",value:function(e,r){var a=r.body;return e.body===a?e:new Shift.ExportDefault({body:a})}},{key:"reduceExportFrom",value:function(e,r){var a=r.namedExports;return e.namedExports.length===a.length&&e.namedExports.every(function(s,o){return s===a[o]})?e:new Shift.ExportFrom({namedExports:a,moduleSpecifier:e.moduleSpecifier})}},{key:"reduceExportFromSpecifier",value:function(e){return e}},{key:"reduceExportLocalSpecifier",value:function(e,r){var a=r.name;return e.name===a?e:new Shift.ExportLocalSpecifier({name:a,exportedName:e.exportedName})}},{key:"reduceExportLocals",value:function(e,r){var a=r.namedExports;return e.namedExports.length===a.length&&e.namedExports.every(function(s,o){return s===a[o]})?e:new Shift.ExportLocals({namedExports:a})}},{key:"reduceExpressionStatement",value:function(e,r){var a=r.expression;return e.expression===a?e:new Shift.ExpressionStatement({expression:a})}},{key:"reduceForAwaitStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return e.left===a&&e.right===s&&e.body===o?e:new Shift.ForAwaitStatement({left:a,right:s,body:o})}},{key:"reduceForInStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return e.left===a&&e.right===s&&e.body===o?e:new Shift.ForInStatement({left:a,right:s,body:o})}},{key:"reduceForOfStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return e.left===a&&e.right===s&&e.body===o?e:new Shift.ForOfStatement({left:a,right:s,body:o})}},{key:"reduceForStatement",value:function(e,r){var a=r.init,s=r.test,o=r.update,c=r.body;return e.init===a&&e.test===s&&e.update===o&&e.body===c?e:new Shift.ForStatement({init:a,test:s,update:o,body:c})}},{key:"reduceFormalParameters",value:function(e,r){var a=r.items,s=r.rest;return e.items.length===a.length&&e.items.every(function(o,c){return o===a[c]})&&e.rest===s?e:new Shift.FormalParameters({items:a,rest:s})}},{key:"reduceFunctionBody",value:function(e,r){var a=r.directives,s=r.statements;return e.directives.length===a.length&&e.directives.every(function(o,c){return o===a[c]})&&e.statements.length===s.length&&e.statements.every(function(o,c){return o===s[c]})?e:new Shift.FunctionBody({directives:a,statements:s})}},{key:"reduceFunctionDeclaration",value:function(e,r){var a=r.name,s=r.params,o=r.body;return e.name===a&&e.params===s&&e.body===o?e:new Shift.FunctionDeclaration({isAsync:e.isAsync,isGenerator:e.isGenerator,name:a,params:s,body:o})}},{key:"reduceFunctionExpression",value:function(e,r){var a=r.name,s=r.params,o=r.body;return e.name===a&&e.params===s&&e.body===o?e:new Shift.FunctionExpression({isAsync:e.isAsync,isGenerator:e.isGenerator,name:a,params:s,body:o})}},{key:"reduceGetter",value:function(e,r){var a=r.name,s=r.body;return e.name===a&&e.body===s?e:new Shift.Getter({name:a,body:s})}},{key:"reduceIdentifierExpression",value:function(e){return e}},{key:"reduceIfStatement",value:function(e,r){var a=r.test,s=r.consequent,o=r.alternate;return e.test===a&&e.consequent===s&&e.alternate===o?e:new Shift.IfStatement({test:a,consequent:s,alternate:o})}},{key:"reduceImport",value:function(e,r){var a=r.defaultBinding,s=r.namedImports;return e.defaultBinding===a&&e.namedImports.length===s.length&&e.namedImports.every(function(o,c){return o===s[c]})?e:new Shift.Import({defaultBinding:a,namedImports:s,moduleSpecifier:e.moduleSpecifier})}},{key:"reduceImportNamespace",value:function(e,r){var a=r.defaultBinding,s=r.namespaceBinding;return e.defaultBinding===a&&e.namespaceBinding===s?e:new Shift.ImportNamespace({defaultBinding:a,namespaceBinding:s,moduleSpecifier:e.moduleSpecifier})}},{key:"reduceImportSpecifier",value:function(e,r){var a=r.binding;return e.binding===a?e:new Shift.ImportSpecifier({name:e.name,binding:a})}},{key:"reduceLabeledStatement",value:function(e,r){var a=r.body;return e.body===a?e:new Shift.LabeledStatement({label:e.label,body:a})}},{key:"reduceLiteralBooleanExpression",value:function(e){return e}},{key:"reduceLiteralInfinityExpression",value:function(e){return e}},{key:"reduceLiteralNullExpression",value:function(e){return e}},{key:"reduceLiteralNumericExpression",value:function(e){return e}},{key:"reduceLiteralRegExpExpression",value:function(e){return e}},{key:"reduceLiteralStringExpression",value:function(e){return e}},{key:"reduceMethod",value:function(e,r){var a=r.name,s=r.params,o=r.body;return e.name===a&&e.params===s&&e.body===o?e:new Shift.Method({isAsync:e.isAsync,isGenerator:e.isGenerator,name:a,params:s,body:o})}},{key:"reduceModule",value:function(e,r){var a=r.directives,s=r.items;return e.directives.length===a.length&&e.directives.every(function(o,c){return o===a[c]})&&e.items.length===s.length&&e.items.every(function(o,c){return o===s[c]})?e:new Shift.Module({directives:a,items:s})}},{key:"reduceNewExpression",value:function(e,r){var a=r.callee,s=r.arguments;return e.callee===a&&e.arguments.length===s.length&&e.arguments.every(function(o,c){return o===s[c]})?e:new Shift.NewExpression({callee:a,arguments:s})}},{key:"reduceNewTargetExpression",value:function(e){return e}},{key:"reduceObjectAssignmentTarget",value:function(e,r){var a=r.properties,s=r.rest;return e.properties.length===a.length&&e.properties.every(function(o,c){return o===a[c]})&&e.rest===s?e:new Shift.ObjectAssignmentTarget({properties:a,rest:s})}},{key:"reduceObjectBinding",value:function(e,r){var a=r.properties,s=r.rest;return e.properties.length===a.length&&e.properties.every(function(o,c){return o===a[c]})&&e.rest===s?e:new Shift.ObjectBinding({properties:a,rest:s})}},{key:"reduceObjectExpression",value:function(e,r){var a=r.properties;return e.properties.length===a.length&&e.properties.every(function(s,o){return s===a[o]})?e:new Shift.ObjectExpression({properties:a})}},{key:"reduceReturnStatement",value:function(e,r){var a=r.expression;return e.expression===a?e:new Shift.ReturnStatement({expression:a})}},{key:"reduceScript",value:function(e,r){var a=r.directives,s=r.statements;return e.directives.length===a.length&&e.directives.every(function(o,c){return o===a[c]})&&e.statements.length===s.length&&e.statements.every(function(o,c){return o===s[c]})?e:new Shift.Script({directives:a,statements:s})}},{key:"reduceSetter",value:function(e,r){var a=r.name,s=r.param,o=r.body;return e.name===a&&e.param===s&&e.body===o?e:new Shift.Setter({name:a,param:s,body:o})}},{key:"reduceShorthandProperty",value:function(e,r){var a=r.name;return e.name===a?e:new Shift.ShorthandProperty({name:a})}},{key:"reduceSpreadElement",value:function(e,r){var a=r.expression;return e.expression===a?e:new Shift.SpreadElement({expression:a})}},{key:"reduceSpreadProperty",value:function(e,r){var a=r.expression;return e.expression===a?e:new Shift.SpreadProperty({expression:a})}},{key:"reduceStaticMemberAssignmentTarget",value:function(e,r){var a=r.object;return e.object===a?e:new Shift.StaticMemberAssignmentTarget({object:a,property:e.property})}},{key:"reduceStaticMemberExpression",value:function(e,r){var a=r.object;return e.object===a?e:new Shift.StaticMemberExpression({object:a,property:e.property})}},{key:"reduceStaticPropertyName",value:function(e){return e}},{key:"reduceSuper",value:function(e){return e}},{key:"reduceSwitchCase",value:function(e,r){var a=r.test,s=r.consequent;return e.test===a&&e.consequent.length===s.length&&e.consequent.every(function(o,c){return o===s[c]})?e:new Shift.SwitchCase({test:a,consequent:s})}},{key:"reduceSwitchDefault",value:function(e,r){var a=r.consequent;return e.consequent.length===a.length&&e.consequent.every(function(s,o){return s===a[o]})?e:new Shift.SwitchDefault({consequent:a})}},{key:"reduceSwitchStatement",value:function(e,r){var a=r.discriminant,s=r.cases;return e.discriminant===a&&e.cases.length===s.length&&e.cases.every(function(o,c){return o===s[c]})?e:new Shift.SwitchStatement({discriminant:a,cases:s})}},{key:"reduceSwitchStatementWithDefault",value:function(e,r){var a=r.discriminant,s=r.preDefaultCases,o=r.defaultCase,c=r.postDefaultCases;return e.discriminant===a&&e.preDefaultCases.length===s.length&&e.preDefaultCases.every(function(l,m){return l===s[m]})&&e.defaultCase===o&&e.postDefaultCases.length===c.length&&e.postDefaultCases.every(function(l,m){return l===c[m]})?e:new Shift.SwitchStatementWithDefault({discriminant:a,preDefaultCases:s,defaultCase:o,postDefaultCases:c})}},{key:"reduceTemplateElement",value:function(e){return e}},{key:"reduceTemplateExpression",value:function(e,r){var a=r.tag,s=r.elements;return e.tag===a&&e.elements.length===s.length&&e.elements.every(function(o,c){return o===s[c]})?e:new Shift.TemplateExpression({tag:a,elements:s})}},{key:"reduceThisExpression",value:function(e){return e}},{key:"reduceThrowStatement",value:function(e,r){var a=r.expression;return e.expression===a?e:new Shift.ThrowStatement({expression:a})}},{key:"reduceTryCatchStatement",value:function(e,r){var a=r.body,s=r.catchClause;return e.body===a&&e.catchClause===s?e:new Shift.TryCatchStatement({body:a,catchClause:s})}},{key:"reduceTryFinallyStatement",value:function(e,r){var a=r.body,s=r.catchClause,o=r.finalizer;return e.body===a&&e.catchClause===s&&e.finalizer===o?e:new Shift.TryFinallyStatement({body:a,catchClause:s,finalizer:o})}},{key:"reduceUnaryExpression",value:function(e,r){var a=r.operand;return e.operand===a?e:new Shift.UnaryExpression({operator:e.operator,operand:a})}},{key:"reduceUpdateExpression",value:function(e,r){var a=r.operand;return e.operand===a?e:new Shift.UpdateExpression({isPrefix:e.isPrefix,operator:e.operator,operand:a})}},{key:"reduceVariableDeclaration",value:function(e,r){var a=r.declarators;return e.declarators.length===a.length&&e.declarators.every(function(s,o){return s===a[o]})?e:new Shift.VariableDeclaration({kind:e.kind,declarators:a})}},{key:"reduceVariableDeclarationStatement",value:function(e,r){var a=r.declaration;return e.declaration===a?e:new Shift.VariableDeclarationStatement({declaration:a})}},{key:"reduceVariableDeclarator",value:function(e,r){var a=r.binding,s=r.init;return e.binding===a&&e.init===s?e:new Shift.VariableDeclarator({binding:a,init:s})}},{key:"reduceWhileStatement",value:function(e,r){var a=r.test,s=r.body;return e.test===a&&e.body===s?e:new Shift.WhileStatement({test:a,body:s})}},{key:"reduceWithStatement",value:function(e,r){var a=r.object,s=r.body;return e.object===a&&e.body===s?e:new Shift.WithStatement({object:a,body:s})}},{key:"reduceYieldExpression",value:function(e,r){var a=r.expression;return e.expression===a?e:new Shift.YieldExpression({expression:a})}},{key:"reduceYieldGeneratorExpression",value:function(e,r){var a=r.expression;return e.expression===a?e:new Shift.YieldGeneratorExpression({expression:a})}}]),u}(),_default$6=lazyCloneReducer$1.default=LazyCloneReducer;const lazyCloneReducer=_mergeNamespaces({__proto__:null,default:_default$6},[lazyCloneReducer$1]),require$$6=getAugmentedNamespace(lazyCloneReducer);var monoidalReducer$1={};Object.defineProperty(monoidalReducer$1,"__esModule",{value:!0});var _createClass$8=function(){function u(n,e){for(var r=0;r<e.length;r++){var a=e[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(n,e,r){return e&&u(n.prototype,e),r&&u(n,r),n}}(),_shiftAst$2=require$$0$5;_interopRequireDefault$7(_shiftAst$2);function _interopRequireDefault$7(u){return u&&u.__esModule?u:{default:u}}function _toConsumableArray$5(u){if(Array.isArray(u)){for(var n=0,e=Array(u.length);n<u.length;n++)e[n]=u[n];return e}else return Array.from(u)}function _classCallCheck$a(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}var MonoidalReducer$1=function(){function u(n){_classCallCheck$a(this,u);var e=n.empty();this.identity=e;var r=void 0;if(n.prototype&&typeof n.prototype.concat=="function")r=Function.prototype.call.bind(n.prototype.concat);else if(typeof n.concat=="function")r=n.concat;else throw new TypeError("Monoid must provide a `concat` method");this.append=function(){for(var a=arguments.length,s=Array(a),o=0;o<a;o++)s[o]=arguments[o];return s.reduce(r,e)}}return _createClass$8(u,[{key:"reduceArrayAssignmentTarget",value:function(e,r){var a=r.elements,s=r.rest;return this.append.apply(this,_toConsumableArray$5(a.filter(function(o){return o!=null})).concat([s==null?this.identity:s]))}},{key:"reduceArrayBinding",value:function(e,r){var a=r.elements,s=r.rest;return this.append.apply(this,_toConsumableArray$5(a.filter(function(o){return o!=null})).concat([s==null?this.identity:s]))}},{key:"reduceArrayExpression",value:function(e,r){var a=r.elements;return this.append.apply(this,_toConsumableArray$5(a.filter(function(s){return s!=null})))}},{key:"reduceArrowExpression",value:function(e,r){var a=r.params,s=r.body;return this.append(a,s)}},{key:"reduceAssignmentExpression",value:function(e,r){var a=r.binding,s=r.expression;return this.append(a,s)}},{key:"reduceAssignmentTargetIdentifier",value:function(e){return this.identity}},{key:"reduceAssignmentTargetPropertyIdentifier",value:function(e,r){var a=r.binding,s=r.init;return this.append(a,s==null?this.identity:s)}},{key:"reduceAssignmentTargetPropertyProperty",value:function(e,r){var a=r.name,s=r.binding;return this.append(a,s)}},{key:"reduceAssignmentTargetWithDefault",value:function(e,r){var a=r.binding,s=r.init;return this.append(a,s)}},{key:"reduceAwaitExpression",value:function(e,r){var a=r.expression;return a}},{key:"reduceBinaryExpression",value:function(e,r){var a=r.left,s=r.right;return this.append(a,s)}},{key:"reduceBindingIdentifier",value:function(e){return this.identity}},{key:"reduceBindingPropertyIdentifier",value:function(e,r){var a=r.binding,s=r.init;return this.append(a,s==null?this.identity:s)}},{key:"reduceBindingPropertyProperty",value:function(e,r){var a=r.name,s=r.binding;return this.append(a,s)}},{key:"reduceBindingWithDefault",value:function(e,r){var a=r.binding,s=r.init;return this.append(a,s)}},{key:"reduceBlock",value:function(e,r){var a=r.statements;return this.append.apply(this,_toConsumableArray$5(a))}},{key:"reduceBlockStatement",value:function(e,r){var a=r.block;return a}},{key:"reduceBreakStatement",value:function(e){return this.identity}},{key:"reduceCallExpression",value:function(e,r){var a=r.callee,s=r.arguments;return this.append.apply(this,[a].concat(_toConsumableArray$5(s)))}},{key:"reduceCatchClause",value:function(e,r){var a=r.binding,s=r.body;return this.append(a,s)}},{key:"reduceClassDeclaration",value:function(e,r){var a=r.name,s=r.super,o=r.elements;return this.append.apply(this,[a,s==null?this.identity:s].concat(_toConsumableArray$5(o)))}},{key:"reduceClassElement",value:function(e,r){var a=r.method;return a}},{key:"reduceClassExpression",value:function(e,r){var a=r.name,s=r.super,o=r.elements;return this.append.apply(this,[a==null?this.identity:a,s==null?this.identity:s].concat(_toConsumableArray$5(o)))}},{key:"reduceCompoundAssignmentExpression",value:function(e,r){var a=r.binding,s=r.expression;return this.append(a,s)}},{key:"reduceComputedMemberAssignmentTarget",value:function(e,r){var a=r.object,s=r.expression;return this.append(a,s)}},{key:"reduceComputedMemberExpression",value:function(e,r){var a=r.object,s=r.expression;return this.append(a,s)}},{key:"reduceComputedPropertyName",value:function(e,r){var a=r.expression;return a}},{key:"reduceConditionalExpression",value:function(e,r){var a=r.test,s=r.consequent,o=r.alternate;return this.append(a,s,o)}},{key:"reduceContinueStatement",value:function(e){return this.identity}},{key:"reduceDataProperty",value:function(e,r){var a=r.name,s=r.expression;return this.append(a,s)}},{key:"reduceDebuggerStatement",value:function(e){return this.identity}},{key:"reduceDirective",value:function(e){return this.identity}},{key:"reduceDoWhileStatement",value:function(e,r){var a=r.body,s=r.test;return this.append(a,s)}},{key:"reduceEmptyStatement",value:function(e){return this.identity}},{key:"reduceExport",value:function(e,r){var a=r.declaration;return a}},{key:"reduceExportAllFrom",value:function(e){return this.identity}},{key:"reduceExportDefault",value:function(e,r){var a=r.body;return a}},{key:"reduceExportFrom",value:function(e,r){var a=r.namedExports;return this.append.apply(this,_toConsumableArray$5(a))}},{key:"reduceExportFromSpecifier",value:function(e){return this.identity}},{key:"reduceExportLocalSpecifier",value:function(e,r){var a=r.name;return a}},{key:"reduceExportLocals",value:function(e,r){var a=r.namedExports;return this.append.apply(this,_toConsumableArray$5(a))}},{key:"reduceExpressionStatement",value:function(e,r){var a=r.expression;return a}},{key:"reduceForAwaitStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return this.append(a,s,o)}},{key:"reduceForInStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return this.append(a,s,o)}},{key:"reduceForOfStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return this.append(a,s,o)}},{key:"reduceForStatement",value:function(e,r){var a=r.init,s=r.test,o=r.update,c=r.body;return this.append(a==null?this.identity:a,s==null?this.identity:s,o==null?this.identity:o,c)}},{key:"reduceFormalParameters",value:function(e,r){var a=r.items,s=r.rest;return this.append.apply(this,_toConsumableArray$5(a).concat([s==null?this.identity:s]))}},{key:"reduceFunctionBody",value:function(e,r){var a=r.directives,s=r.statements;return this.append.apply(this,_toConsumableArray$5(a).concat(_toConsumableArray$5(s)))}},{key:"reduceFunctionDeclaration",value:function(e,r){var a=r.name,s=r.params,o=r.body;return this.append(a,s,o)}},{key:"reduceFunctionExpression",value:function(e,r){var a=r.name,s=r.params,o=r.body;return this.append(a==null?this.identity:a,s,o)}},{key:"reduceGetter",value:function(e,r){var a=r.name,s=r.body;return this.append(a,s)}},{key:"reduceIdentifierExpression",value:function(e){return this.identity}},{key:"reduceIfStatement",value:function(e,r){var a=r.test,s=r.consequent,o=r.alternate;return this.append(a,s,o==null?this.identity:o)}},{key:"reduceImport",value:function(e,r){var a=r.defaultBinding,s=r.namedImports;return this.append.apply(this,[a==null?this.identity:a].concat(_toConsumableArray$5(s)))}},{key:"reduceImportNamespace",value:function(e,r){var a=r.defaultBinding,s=r.namespaceBinding;return this.append(a==null?this.identity:a,s)}},{key:"reduceImportSpecifier",value:function(e,r){var a=r.binding;return a}},{key:"reduceLabeledStatement",value:function(e,r){var a=r.body;return a}},{key:"reduceLiteralBooleanExpression",value:function(e){return this.identity}},{key:"reduceLiteralInfinityExpression",value:function(e){return this.identity}},{key:"reduceLiteralNullExpression",value:function(e){return this.identity}},{key:"reduceLiteralNumericExpression",value:function(e){return this.identity}},{key:"reduceLiteralRegExpExpression",value:function(e){return this.identity}},{key:"reduceLiteralStringExpression",value:function(e){return this.identity}},{key:"reduceMethod",value:function(e,r){var a=r.name,s=r.params,o=r.body;return this.append(a,s,o)}},{key:"reduceModule",value:function(e,r){var a=r.directives,s=r.items;return this.append.apply(this,_toConsumableArray$5(a).concat(_toConsumableArray$5(s)))}},{key:"reduceNewExpression",value:function(e,r){var a=r.callee,s=r.arguments;return this.append.apply(this,[a].concat(_toConsumableArray$5(s)))}},{key:"reduceNewTargetExpression",value:function(e){return this.identity}},{key:"reduceObjectAssignmentTarget",value:function(e,r){var a=r.properties,s=r.rest;return this.append.apply(this,_toConsumableArray$5(a).concat([s==null?this.identity:s]))}},{key:"reduceObjectBinding",value:function(e,r){var a=r.properties,s=r.rest;return this.append.apply(this,_toConsumableArray$5(a).concat([s==null?this.identity:s]))}},{key:"reduceObjectExpression",value:function(e,r){var a=r.properties;return this.append.apply(this,_toConsumableArray$5(a))}},{key:"reduceReturnStatement",value:function(e,r){var a=r.expression;return a==null?this.identity:a}},{key:"reduceScript",value:function(e,r){var a=r.directives,s=r.statements;return this.append.apply(this,_toConsumableArray$5(a).concat(_toConsumableArray$5(s)))}},{key:"reduceSetter",value:function(e,r){var a=r.name,s=r.param,o=r.body;return this.append(a,s,o)}},{key:"reduceShorthandProperty",value:function(e,r){var a=r.name;return a}},{key:"reduceSpreadElement",value:function(e,r){var a=r.expression;return a}},{key:"reduceSpreadProperty",value:function(e,r){var a=r.expression;return a}},{key:"reduceStaticMemberAssignmentTarget",value:function(e,r){var a=r.object;return a}},{key:"reduceStaticMemberExpression",value:function(e,r){var a=r.object;return a}},{key:"reduceStaticPropertyName",value:function(e){return this.identity}},{key:"reduceSuper",value:function(e){return this.identity}},{key:"reduceSwitchCase",value:function(e,r){var a=r.test,s=r.consequent;return this.append.apply(this,[a].concat(_toConsumableArray$5(s)))}},{key:"reduceSwitchDefault",value:function(e,r){var a=r.consequent;return this.append.apply(this,_toConsumableArray$5(a))}},{key:"reduceSwitchStatement",value:function(e,r){var a=r.discriminant,s=r.cases;return this.append.apply(this,[a].concat(_toConsumableArray$5(s)))}},{key:"reduceSwitchStatementWithDefault",value:function(e,r){var a=r.discriminant,s=r.preDefaultCases,o=r.defaultCase,c=r.postDefaultCases;return this.append.apply(this,[a].concat(_toConsumableArray$5(s),[o],_toConsumableArray$5(c)))}},{key:"reduceTemplateElement",value:function(e){return this.identity}},{key:"reduceTemplateExpression",value:function(e,r){var a=r.tag,s=r.elements;return this.append.apply(this,[a==null?this.identity:a].concat(_toConsumableArray$5(s)))}},{key:"reduceThisExpression",value:function(e){return this.identity}},{key:"reduceThrowStatement",value:function(e,r){var a=r.expression;return a}},{key:"reduceTryCatchStatement",value:function(e,r){var a=r.body,s=r.catchClause;return this.append(a,s)}},{key:"reduceTryFinallyStatement",value:function(e,r){var a=r.body,s=r.catchClause,o=r.finalizer;return this.append(a,s==null?this.identity:s,o)}},{key:"reduceUnaryExpression",value:function(e,r){var a=r.operand;return a}},{key:"reduceUpdateExpression",value:function(e,r){var a=r.operand;return a}},{key:"reduceVariableDeclaration",value:function(e,r){var a=r.declarators;return this.append.apply(this,_toConsumableArray$5(a))}},{key:"reduceVariableDeclarationStatement",value:function(e,r){var a=r.declaration;return a}},{key:"reduceVariableDeclarator",value:function(e,r){var a=r.binding,s=r.init;return this.append(a,s==null?this.identity:s)}},{key:"reduceWhileStatement",value:function(e,r){var a=r.test,s=r.body;return this.append(a,s)}},{key:"reduceWithStatement",value:function(e,r){var a=r.object,s=r.body;return this.append(a,s)}},{key:"reduceYieldExpression",value:function(e,r){var a=r.expression;return a==null?this.identity:a}},{key:"reduceYieldGeneratorExpression",value:function(e,r){var a=r.expression;return a}}]),u}(),_default$5=monoidalReducer$1.default=MonoidalReducer$1;const monoidalReducer=_mergeNamespaces({__proto__:null,default:_default$5},[monoidalReducer$1]),require$$7=getAugmentedNamespace(monoidalReducer);var thunkedMonoidalReducer$1={};Object.defineProperty(thunkedMonoidalReducer$1,"__esModule",{value:!0});var _createClass$7=function(){function u(n,e){for(var r=0;r<e.length;r++){var a=e[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(n,e,r){return e&&u(n.prototype,e),r&&u(n,r),n}}(),_shiftAst$1=require$$0$5;_interopRequireDefault$6(_shiftAst$1);function _interopRequireDefault$6(u){return u&&u.__esModule?u:{default:u}}function _toConsumableArray$4(u){if(Array.isArray(u)){for(var n=0,e=Array(u.length);n<u.length;n++)e[n]=u[n];return e}else return Array.from(u)}function _classCallCheck$9(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}var MonoidalReducer=function(){function u(n){_classCallCheck$9(this,u);var e=n.empty();this.identity=e;var r=void 0;if(n.prototype&&typeof n.prototype.concatThunk=="function")r=Function.prototype.call.bind(n.prototype.concatThunk);else if(typeof n.concatThunk=="function")r=n.concatThunk;else{var a=void 0;if(n.prototype&&typeof n.prototype.concat=="function")a=Function.prototype.call.bind(n.prototype.concat);else if(typeof n.concat=="function")a=n.concat;else throw new TypeError("Monoid must provide a `concatThunk` or `concat` method");if(typeof n.isAbsorbing=="function"){var s=n.isAbsorbing;r=function(c,l){return s(c)?c:a(c,l())}}else r=function(c,l){return a(c,l())}}this.append=function(){for(var o=arguments.length,c=Array(o),l=0;l<o;l++)c[l]=arguments[l];return c.reduce(r,e)}}return _createClass$7(u,[{key:"reduceArrayAssignmentTarget",value:function(e,r){var a=this,s=r.elements,o=r.rest;return this.append.apply(this,_toConsumableArray$4(s.filter(function(c){return c!=null})).concat([o==null?function(){return a.identity}:o]))}},{key:"reduceArrayBinding",value:function(e,r){var a=this,s=r.elements,o=r.rest;return this.append.apply(this,_toConsumableArray$4(s.filter(function(c){return c!=null})).concat([o==null?function(){return a.identity}:o]))}},{key:"reduceArrayExpression",value:function(e,r){var a=r.elements;return this.append.apply(this,_toConsumableArray$4(a.filter(function(s){return s!=null})))}},{key:"reduceArrowExpression",value:function(e,r){var a=r.params,s=r.body;return this.append(a,s)}},{key:"reduceAssignmentExpression",value:function(e,r){var a=r.binding,s=r.expression;return this.append(a,s)}},{key:"reduceAssignmentTargetIdentifier",value:function(e){return this.identity}},{key:"reduceAssignmentTargetPropertyIdentifier",value:function(e,r){var a=this,s=r.binding,o=r.init;return this.append(s,o==null?function(){return a.identity}:o)}},{key:"reduceAssignmentTargetPropertyProperty",value:function(e,r){var a=r.name,s=r.binding;return this.append(a,s)}},{key:"reduceAssignmentTargetWithDefault",value:function(e,r){var a=r.binding,s=r.init;return this.append(a,s)}},{key:"reduceAwaitExpression",value:function(e,r){var a=r.expression;return a()}},{key:"reduceBinaryExpression",value:function(e,r){var a=r.left,s=r.right;return this.append(a,s)}},{key:"reduceBindingIdentifier",value:function(e){return this.identity}},{key:"reduceBindingPropertyIdentifier",value:function(e,r){var a=this,s=r.binding,o=r.init;return this.append(s,o==null?function(){return a.identity}:o)}},{key:"reduceBindingPropertyProperty",value:function(e,r){var a=r.name,s=r.binding;return this.append(a,s)}},{key:"reduceBindingWithDefault",value:function(e,r){var a=r.binding,s=r.init;return this.append(a,s)}},{key:"reduceBlock",value:function(e,r){var a=r.statements;return this.append.apply(this,_toConsumableArray$4(a))}},{key:"reduceBlockStatement",value:function(e,r){var a=r.block;return a()}},{key:"reduceBreakStatement",value:function(e){return this.identity}},{key:"reduceCallExpression",value:function(e,r){var a=r.callee,s=r.arguments;return this.append.apply(this,[a].concat(_toConsumableArray$4(s)))}},{key:"reduceCatchClause",value:function(e,r){var a=r.binding,s=r.body;return this.append(a,s)}},{key:"reduceClassDeclaration",value:function(e,r){var a=this,s=r.name,o=r.super,c=r.elements;return this.append.apply(this,[s,o==null?function(){return a.identity}:o].concat(_toConsumableArray$4(c)))}},{key:"reduceClassElement",value:function(e,r){var a=r.method;return a()}},{key:"reduceClassExpression",value:function(e,r){var a=this,s=r.name,o=r.super,c=r.elements;return this.append.apply(this,[s==null?function(){return a.identity}:s,o==null?function(){return a.identity}:o].concat(_toConsumableArray$4(c)))}},{key:"reduceCompoundAssignmentExpression",value:function(e,r){var a=r.binding,s=r.expression;return this.append(a,s)}},{key:"reduceComputedMemberAssignmentTarget",value:function(e,r){var a=r.object,s=r.expression;return this.append(a,s)}},{key:"reduceComputedMemberExpression",value:function(e,r){var a=r.object,s=r.expression;return this.append(a,s)}},{key:"reduceComputedPropertyName",value:function(e,r){var a=r.expression;return a()}},{key:"reduceConditionalExpression",value:function(e,r){var a=r.test,s=r.consequent,o=r.alternate;return this.append(a,s,o)}},{key:"reduceContinueStatement",value:function(e){return this.identity}},{key:"reduceDataProperty",value:function(e,r){var a=r.name,s=r.expression;return this.append(a,s)}},{key:"reduceDebuggerStatement",value:function(e){return this.identity}},{key:"reduceDirective",value:function(e){return this.identity}},{key:"reduceDoWhileStatement",value:function(e,r){var a=r.body,s=r.test;return this.append(a,s)}},{key:"reduceEmptyStatement",value:function(e){return this.identity}},{key:"reduceExport",value:function(e,r){var a=r.declaration;return a()}},{key:"reduceExportAllFrom",value:function(e){return this.identity}},{key:"reduceExportDefault",value:function(e,r){var a=r.body;return a()}},{key:"reduceExportFrom",value:function(e,r){var a=r.namedExports;return this.append.apply(this,_toConsumableArray$4(a))}},{key:"reduceExportFromSpecifier",value:function(e){return this.identity}},{key:"reduceExportLocalSpecifier",value:function(e,r){var a=r.name;return a()}},{key:"reduceExportLocals",value:function(e,r){var a=r.namedExports;return this.append.apply(this,_toConsumableArray$4(a))}},{key:"reduceExpressionStatement",value:function(e,r){var a=r.expression;return a()}},{key:"reduceForAwaitStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return this.append(a,s,o)}},{key:"reduceForInStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return this.append(a,s,o)}},{key:"reduceForOfStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return this.append(a,s,o)}},{key:"reduceForStatement",value:function(e,r){var a=this,s=r.init,o=r.test,c=r.update,l=r.body;return this.append(s==null?function(){return a.identity}:s,o==null?function(){return a.identity}:o,c==null?function(){return a.identity}:c,l)}},{key:"reduceFormalParameters",value:function(e,r){var a=this,s=r.items,o=r.rest;return this.append.apply(this,_toConsumableArray$4(s).concat([o==null?function(){return a.identity}:o]))}},{key:"reduceFunctionBody",value:function(e,r){var a=r.directives,s=r.statements;return this.append.apply(this,_toConsumableArray$4(a).concat(_toConsumableArray$4(s)))}},{key:"reduceFunctionDeclaration",value:function(e,r){var a=r.name,s=r.params,o=r.body;return this.append(a,s,o)}},{key:"reduceFunctionExpression",value:function(e,r){var a=this,s=r.name,o=r.params,c=r.body;return this.append(s==null?function(){return a.identity}:s,o,c)}},{key:"reduceGetter",value:function(e,r){var a=r.name,s=r.body;return this.append(a,s)}},{key:"reduceIdentifierExpression",value:function(e){return this.identity}},{key:"reduceIfStatement",value:function(e,r){var a=this,s=r.test,o=r.consequent,c=r.alternate;return this.append(s,o,c==null?function(){return a.identity}:c)}},{key:"reduceImport",value:function(e,r){var a=this,s=r.defaultBinding,o=r.namedImports;return this.append.apply(this,[s==null?function(){return a.identity}:s].concat(_toConsumableArray$4(o)))}},{key:"reduceImportNamespace",value:function(e,r){var a=this,s=r.defaultBinding,o=r.namespaceBinding;return this.append(s==null?function(){return a.identity}:s,o)}},{key:"reduceImportSpecifier",value:function(e,r){var a=r.binding;return a()}},{key:"reduceLabeledStatement",value:function(e,r){var a=r.body;return a()}},{key:"reduceLiteralBooleanExpression",value:function(e){return this.identity}},{key:"reduceLiteralInfinityExpression",value:function(e){return this.identity}},{key:"reduceLiteralNullExpression",value:function(e){return this.identity}},{key:"reduceLiteralNumericExpression",value:function(e){return this.identity}},{key:"reduceLiteralRegExpExpression",value:function(e){return this.identity}},{key:"reduceLiteralStringExpression",value:function(e){return this.identity}},{key:"reduceMethod",value:function(e,r){var a=r.name,s=r.params,o=r.body;return this.append(a,s,o)}},{key:"reduceModule",value:function(e,r){var a=r.directives,s=r.items;return this.append.apply(this,_toConsumableArray$4(a).concat(_toConsumableArray$4(s)))}},{key:"reduceNewExpression",value:function(e,r){var a=r.callee,s=r.arguments;return this.append.apply(this,[a].concat(_toConsumableArray$4(s)))}},{key:"reduceNewTargetExpression",value:function(e){return this.identity}},{key:"reduceObjectAssignmentTarget",value:function(e,r){var a=this,s=r.properties,o=r.rest;return this.append.apply(this,_toConsumableArray$4(s).concat([o==null?function(){return a.identity}:o]))}},{key:"reduceObjectBinding",value:function(e,r){var a=this,s=r.properties,o=r.rest;return this.append.apply(this,_toConsumableArray$4(s).concat([o==null?function(){return a.identity}:o]))}},{key:"reduceObjectExpression",value:function(e,r){var a=r.properties;return this.append.apply(this,_toConsumableArray$4(a))}},{key:"reduceReturnStatement",value:function(e,r){var a=r.expression;return a==null?this.identity:a()}},{key:"reduceScript",value:function(e,r){var a=r.directives,s=r.statements;return this.append.apply(this,_toConsumableArray$4(a).concat(_toConsumableArray$4(s)))}},{key:"reduceSetter",value:function(e,r){var a=r.name,s=r.param,o=r.body;return this.append(a,s,o)}},{key:"reduceShorthandProperty",value:function(e,r){var a=r.name;return a()}},{key:"reduceSpreadElement",value:function(e,r){var a=r.expression;return a()}},{key:"reduceSpreadProperty",value:function(e,r){var a=r.expression;return a()}},{key:"reduceStaticMemberAssignmentTarget",value:function(e,r){var a=r.object;return a()}},{key:"reduceStaticMemberExpression",value:function(e,r){var a=r.object;return a()}},{key:"reduceStaticPropertyName",value:function(e){return this.identity}},{key:"reduceSuper",value:function(e){return this.identity}},{key:"reduceSwitchCase",value:function(e,r){var a=r.test,s=r.consequent;return this.append.apply(this,[a].concat(_toConsumableArray$4(s)))}},{key:"reduceSwitchDefault",value:function(e,r){var a=r.consequent;return this.append.apply(this,_toConsumableArray$4(a))}},{key:"reduceSwitchStatement",value:function(e,r){var a=r.discriminant,s=r.cases;return this.append.apply(this,[a].concat(_toConsumableArray$4(s)))}},{key:"reduceSwitchStatementWithDefault",value:function(e,r){var a=r.discriminant,s=r.preDefaultCases,o=r.defaultCase,c=r.postDefaultCases;return this.append.apply(this,[a].concat(_toConsumableArray$4(s),[o],_toConsumableArray$4(c)))}},{key:"reduceTemplateElement",value:function(e){return this.identity}},{key:"reduceTemplateExpression",value:function(e,r){var a=this,s=r.tag,o=r.elements;return this.append.apply(this,[s==null?function(){return a.identity}:s].concat(_toConsumableArray$4(o)))}},{key:"reduceThisExpression",value:function(e){return this.identity}},{key:"reduceThrowStatement",value:function(e,r){var a=r.expression;return a()}},{key:"reduceTryCatchStatement",value:function(e,r){var a=r.body,s=r.catchClause;return this.append(a,s)}},{key:"reduceTryFinallyStatement",value:function(e,r){var a=this,s=r.body,o=r.catchClause,c=r.finalizer;return this.append(s,o==null?function(){return a.identity}:o,c)}},{key:"reduceUnaryExpression",value:function(e,r){var a=r.operand;return a()}},{key:"reduceUpdateExpression",value:function(e,r){var a=r.operand;return a()}},{key:"reduceVariableDeclaration",value:function(e,r){var a=r.declarators;return this.append.apply(this,_toConsumableArray$4(a))}},{key:"reduceVariableDeclarationStatement",value:function(e,r){var a=r.declaration;return a()}},{key:"reduceVariableDeclarator",value:function(e,r){var a=this,s=r.binding,o=r.init;return this.append(s,o==null?function(){return a.identity}:o)}},{key:"reduceWhileStatement",value:function(e,r){var a=r.test,s=r.body;return this.append(a,s)}},{key:"reduceWithStatement",value:function(e,r){var a=r.object,s=r.body;return this.append(a,s)}},{key:"reduceYieldExpression",value:function(e,r){var a=r.expression;return a==null?this.identity:a()}},{key:"reduceYieldGeneratorExpression",value:function(e,r){var a=r.expression;return a()}}]),u}(),_default$4=thunkedMonoidalReducer$1.default=MonoidalReducer;const thunkedMonoidalReducer=_mergeNamespaces({__proto__:null,default:_default$4},[thunkedMonoidalReducer$1]),require$$8=getAugmentedNamespace(thunkedMonoidalReducer);var adapt$1={};Object.defineProperty(adapt$1,"__esModule",{value:!0});var _get$2=function u(n,e,r){n===null&&(n=Function.prototype);var a=Object.getOwnPropertyDescriptor(n,e);if(a===void 0){var s=Object.getPrototypeOf(n);return s===null?void 0:u(s,e,r)}else{if("value"in a)return a.value;var o=a.get;return o===void 0?void 0:o.call(r)}},_shiftAst=require$$0$5;_interopRequireWildcard(_shiftAst);function _interopRequireWildcard(u){if(u&&u.__esModule)return u;var n={};if(u!=null)for(var e in u)Object.prototype.hasOwnProperty.call(u,e)&&(n[e]=u[e]);return n.default=u,n}var _default$3=adapt$1.default=function(u,n){var e;return e={__proto__:n,reduceArrayAssignmentTarget:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceArrayAssignmentTarget",this).call(this,a,s),a)},reduceArrayBinding:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceArrayBinding",this).call(this,a,s),a)},reduceArrayExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceArrayExpression",this).call(this,a,s),a)},reduceArrowExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceArrowExpression",this).call(this,a,s),a)},reduceAssignmentExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceAssignmentExpression",this).call(this,a,s),a)},reduceAssignmentTargetIdentifier:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceAssignmentTargetIdentifier",this).call(this,a,s),a)},reduceAssignmentTargetPropertyIdentifier:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceAssignmentTargetPropertyIdentifier",this).call(this,a,s),a)},reduceAssignmentTargetPropertyProperty:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceAssignmentTargetPropertyProperty",this).call(this,a,s),a)},reduceAssignmentTargetWithDefault:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceAssignmentTargetWithDefault",this).call(this,a,s),a)},reduceAwaitExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceAwaitExpression",this).call(this,a,s),a)},reduceBinaryExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceBinaryExpression",this).call(this,a,s),a)},reduceBindingIdentifier:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceBindingIdentifier",this).call(this,a,s),a)},reduceBindingPropertyIdentifier:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceBindingPropertyIdentifier",this).call(this,a,s),a)},reduceBindingPropertyProperty:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceBindingPropertyProperty",this).call(this,a,s),a)},reduceBindingWithDefault:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceBindingWithDefault",this).call(this,a,s),a)},reduceBlock:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceBlock",this).call(this,a,s),a)},reduceBlockStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceBlockStatement",this).call(this,a,s),a)},reduceBreakStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceBreakStatement",this).call(this,a,s),a)},reduceCallExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceCallExpression",this).call(this,a,s),a)},reduceCatchClause:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceCatchClause",this).call(this,a,s),a)},reduceClassDeclaration:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceClassDeclaration",this).call(this,a,s),a)},reduceClassElement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceClassElement",this).call(this,a,s),a)},reduceClassExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceClassExpression",this).call(this,a,s),a)},reduceCompoundAssignmentExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceCompoundAssignmentExpression",this).call(this,a,s),a)},reduceComputedMemberAssignmentTarget:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceComputedMemberAssignmentTarget",this).call(this,a,s),a)},reduceComputedMemberExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceComputedMemberExpression",this).call(this,a,s),a)},reduceComputedPropertyName:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceComputedPropertyName",this).call(this,a,s),a)},reduceConditionalExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceConditionalExpression",this).call(this,a,s),a)},reduceContinueStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceContinueStatement",this).call(this,a,s),a)},reduceDataProperty:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceDataProperty",this).call(this,a,s),a)},reduceDebuggerStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceDebuggerStatement",this).call(this,a,s),a)},reduceDirective:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceDirective",this).call(this,a,s),a)},reduceDoWhileStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceDoWhileStatement",this).call(this,a,s),a)},reduceEmptyStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceEmptyStatement",this).call(this,a,s),a)},reduceExport:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceExport",this).call(this,a,s),a)},reduceExportAllFrom:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceExportAllFrom",this).call(this,a,s),a)},reduceExportDefault:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceExportDefault",this).call(this,a,s),a)},reduceExportFrom:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceExportFrom",this).call(this,a,s),a)},reduceExportFromSpecifier:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceExportFromSpecifier",this).call(this,a,s),a)},reduceExportLocalSpecifier:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceExportLocalSpecifier",this).call(this,a,s),a)},reduceExportLocals:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceExportLocals",this).call(this,a,s),a)},reduceExpressionStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceExpressionStatement",this).call(this,a,s),a)},reduceForAwaitStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceForAwaitStatement",this).call(this,a,s),a)},reduceForInStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceForInStatement",this).call(this,a,s),a)},reduceForOfStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceForOfStatement",this).call(this,a,s),a)},reduceForStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceForStatement",this).call(this,a,s),a)},reduceFormalParameters:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceFormalParameters",this).call(this,a,s),a)},reduceFunctionBody:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceFunctionBody",this).call(this,a,s),a)},reduceFunctionDeclaration:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceFunctionDeclaration",this).call(this,a,s),a)},reduceFunctionExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceFunctionExpression",this).call(this,a,s),a)},reduceGetter:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceGetter",this).call(this,a,s),a)},reduceIdentifierExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceIdentifierExpression",this).call(this,a,s),a)},reduceIfStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceIfStatement",this).call(this,a,s),a)},reduceImport:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceImport",this).call(this,a,s),a)},reduceImportNamespace:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceImportNamespace",this).call(this,a,s),a)},reduceImportSpecifier:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceImportSpecifier",this).call(this,a,s),a)},reduceLabeledStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceLabeledStatement",this).call(this,a,s),a)},reduceLiteralBooleanExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceLiteralBooleanExpression",this).call(this,a,s),a)},reduceLiteralInfinityExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceLiteralInfinityExpression",this).call(this,a,s),a)},reduceLiteralNullExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceLiteralNullExpression",this).call(this,a,s),a)},reduceLiteralNumericExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceLiteralNumericExpression",this).call(this,a,s),a)},reduceLiteralRegExpExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceLiteralRegExpExpression",this).call(this,a,s),a)},reduceLiteralStringExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceLiteralStringExpression",this).call(this,a,s),a)},reduceMethod:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceMethod",this).call(this,a,s),a)},reduceModule:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceModule",this).call(this,a,s),a)},reduceNewExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceNewExpression",this).call(this,a,s),a)},reduceNewTargetExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceNewTargetExpression",this).call(this,a,s),a)},reduceObjectAssignmentTarget:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceObjectAssignmentTarget",this).call(this,a,s),a)},reduceObjectBinding:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceObjectBinding",this).call(this,a,s),a)},reduceObjectExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceObjectExpression",this).call(this,a,s),a)},reduceReturnStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceReturnStatement",this).call(this,a,s),a)},reduceScript:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceScript",this).call(this,a,s),a)},reduceSetter:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceSetter",this).call(this,a,s),a)},reduceShorthandProperty:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceShorthandProperty",this).call(this,a,s),a)},reduceSpreadElement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceSpreadElement",this).call(this,a,s),a)},reduceSpreadProperty:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceSpreadProperty",this).call(this,a,s),a)},reduceStaticMemberAssignmentTarget:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceStaticMemberAssignmentTarget",this).call(this,a,s),a)},reduceStaticMemberExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceStaticMemberExpression",this).call(this,a,s),a)},reduceStaticPropertyName:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceStaticPropertyName",this).call(this,a,s),a)},reduceSuper:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceSuper",this).call(this,a,s),a)},reduceSwitchCase:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceSwitchCase",this).call(this,a,s),a)},reduceSwitchDefault:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceSwitchDefault",this).call(this,a,s),a)},reduceSwitchStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceSwitchStatement",this).call(this,a,s),a)},reduceSwitchStatementWithDefault:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceSwitchStatementWithDefault",this).call(this,a,s),a)},reduceTemplateElement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceTemplateElement",this).call(this,a,s),a)},reduceTemplateExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceTemplateExpression",this).call(this,a,s),a)},reduceThisExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceThisExpression",this).call(this,a,s),a)},reduceThrowStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceThrowStatement",this).call(this,a,s),a)},reduceTryCatchStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceTryCatchStatement",this).call(this,a,s),a)},reduceTryFinallyStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceTryFinallyStatement",this).call(this,a,s),a)},reduceUnaryExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceUnaryExpression",this).call(this,a,s),a)},reduceUpdateExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceUpdateExpression",this).call(this,a,s),a)},reduceVariableDeclaration:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceVariableDeclaration",this).call(this,a,s),a)},reduceVariableDeclarationStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceVariableDeclarationStatement",this).call(this,a,s),a)},reduceVariableDeclarator:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceVariableDeclarator",this).call(this,a,s),a)},reduceWhileStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceWhileStatement",this).call(this,a,s),a)},reduceWithStatement:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceWithStatement",this).call(this,a,s),a)},reduceYieldExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceYieldExpression",this).call(this,a,s),a)},reduceYieldGeneratorExpression:function(a,s){return u(_get$2(e.__proto__||Object.getPrototypeOf(e),"reduceYieldGeneratorExpression",this).call(this,a,s),a)}}};const adapt=_mergeNamespaces({__proto__:null,default:_default$3},[adapt$1]),require$$9=getAugmentedNamespace(adapt);var reducers$1={},PlusReducer_1,ThunkedPlusReducer_1,ConcatReducer_1,ThunkedConcatReducer_1,AndReducer_1,ThunkedAndReducer_1,OrReducer_1;Object.defineProperty(reducers$1,"__esModule",{value:!0});var ThunkedOrReducer_1=reducers$1.ThunkedOrReducer=OrReducer_1=reducers$1.OrReducer=ThunkedAndReducer_1=reducers$1.ThunkedAndReducer=AndReducer_1=reducers$1.AndReducer=ThunkedConcatReducer_1=reducers$1.ThunkedConcatReducer=ConcatReducer_1=reducers$1.ConcatReducer=ThunkedPlusReducer_1=reducers$1.ThunkedPlusReducer=PlusReducer_1=reducers$1.PlusReducer=void 0,_monoidalReducer=require$$7,_monoidalReducer2=_interopRequireDefault$5(_monoidalReducer),_thunkedMonoidalReducer=require$$8,_thunkedMonoidalReducer2=_interopRequireDefault$5(_thunkedMonoidalReducer);function _interopRequireDefault$5(u){return u&&u.__esModule?u:{default:u}}function _classCallCheck$8(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn$5(u,n){if(!u)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n&&(typeof n=="object"||typeof n=="function")?n:u}function _inherits$5(u,n){if(typeof n!="function"&&n!==null)throw new TypeError("Super expression must either be null or a function, not "+typeof n);u.prototype=Object.create(n&&n.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(u,n):u.__proto__=n)}var PlusMonoid={empty:function u(){return 0},concat:function u(n,e){return n+e}},ConcatMonoid={empty:function u(){return[]},concat:function u(n,e){return n.concat(e)}},AndMonoid={empty:function u(){return!0},concat:function u(n,e){return n&&e},concatThunk:function u(n,e){return n&&e()}},OrMonoid={empty:function u(){return!1},concat:function u(n,e){return n||e},concatThunk:function u(n,e){return n||e()}};PlusReducer_1=reducers$1.PlusReducer=function(u){_inherits$5(n,u);function n(){return _classCallCheck$8(this,n),_possibleConstructorReturn$5(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,PlusMonoid))}return n}(_monoidalReducer2.default);ThunkedPlusReducer_1=reducers$1.ThunkedPlusReducer=function(u){_inherits$5(n,u);function n(){return _classCallCheck$8(this,n),_possibleConstructorReturn$5(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,PlusMonoid))}return n}(_thunkedMonoidalReducer2.default);ConcatReducer_1=reducers$1.ConcatReducer=function(u){_inherits$5(n,u);function n(){return _classCallCheck$8(this,n),_possibleConstructorReturn$5(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,ConcatMonoid))}return n}(_monoidalReducer2.default);ThunkedConcatReducer_1=reducers$1.ThunkedConcatReducer=function(u){_inherits$5(n,u);function n(){return _classCallCheck$8(this,n),_possibleConstructorReturn$5(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,ConcatMonoid))}return n}(_thunkedMonoidalReducer2.default);AndReducer_1=reducers$1.AndReducer=function(u){_inherits$5(n,u);function n(){return _classCallCheck$8(this,n),_possibleConstructorReturn$5(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,AndMonoid))}return n}(_monoidalReducer2.default);ThunkedAndReducer_1=reducers$1.ThunkedAndReducer=function(u){_inherits$5(n,u);function n(){return _classCallCheck$8(this,n),_possibleConstructorReturn$5(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,AndMonoid))}return n}(_thunkedMonoidalReducer2.default);OrReducer_1=reducers$1.OrReducer=function(u){_inherits$5(n,u);function n(){return _classCallCheck$8(this,n),_possibleConstructorReturn$5(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,OrMonoid))}return n}(_monoidalReducer2.default);ThunkedOrReducer_1=reducers$1.ThunkedOrReducer=function(u){_inherits$5(n,u);function n(){return _classCallCheck$8(this,n),_possibleConstructorReturn$5(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,OrMonoid))}return n}(_thunkedMonoidalReducer2.default);const reducers=_mergeNamespaces({__proto__:null,get ThunkedOrReducer(){return ThunkedOrReducer_1},get OrReducer(){return OrReducer_1},get ThunkedAndReducer(){return ThunkedAndReducer_1},get AndReducer(){return AndReducer_1},get ThunkedConcatReducer(){return ThunkedConcatReducer_1},get ConcatReducer(){return ConcatReducer_1},get ThunkedPlusReducer(){return ThunkedPlusReducer_1},get PlusReducer(){return PlusReducer_1},default:reducers$1},[reducers$1]),require$$10=getAugmentedNamespace(reducers);(function(u){Object.defineProperty(u,"__esModule",{value:!0});var n=require$$0$6;Object.defineProperty(u,"reduce",{enumerable:!0,get:function(){return n.reduce}}),Object.defineProperty(u,"default",{enumerable:!0,get:function(){return n.reduce}});var e=require$$1$3;Object.defineProperty(u,"thunkedReduce",{enumerable:!0,get:function(){return e.thunkedReduce}});var r=require$$2$3;Object.defineProperty(u,"thunkify",{enumerable:!0,get:function(){return _(r).default}});var a=require$$3$2;Object.defineProperty(u,"thunkifyClass",{enumerable:!0,get:function(){return _(a).default}});var s=require$$4$1;Object.defineProperty(u,"memoize",{enumerable:!0,get:function(){return _(s).default}});var o=require$$5$1;Object.defineProperty(u,"CloneReducer",{enumerable:!0,get:function(){return _(o).default}});var c=require$$6;Object.defineProperty(u,"LazyCloneReducer",{enumerable:!0,get:function(){return _(c).default}});var l=require$$7;Object.defineProperty(u,"MonoidalReducer",{enumerable:!0,get:function(){return _(l).default}});var m=require$$8;Object.defineProperty(u,"ThunkedMonoidalReducer",{enumerable:!0,get:function(){return _(m).default}});var E=require$$9;Object.defineProperty(u,"adapt",{enumerable:!0,get:function(){return _(E).default}});var A=require$$10;Object.defineProperty(u,"PlusReducer",{enumerable:!0,get:function(){return A.PlusReducer}}),Object.defineProperty(u,"ThunkedPlusReducer",{enumerable:!0,get:function(){return A.ThunkedPlusReducer}}),Object.defineProperty(u,"ConcatReducer",{enumerable:!0,get:function(){return A.ConcatReducer}}),Object.defineProperty(u,"ThunkedConcatReducer",{enumerable:!0,get:function(){return A.ThunkedConcatReducer}}),Object.defineProperty(u,"AndReducer",{enumerable:!0,get:function(){return A.AndReducer}}),Object.defineProperty(u,"ThunkedAndReducer",{enumerable:!0,get:function(){return A.ThunkedAndReducer}}),Object.defineProperty(u,"OrReducer",{enumerable:!0,get:function(){return A.OrReducer}}),Object.defineProperty(u,"ThunkedOrReducer",{enumerable:!0,get:function(){return A.ThunkedOrReducer}});function _(v){return v&&v.__esModule?v:{default:v}}})(dist$6);const index=getDefaultExportFromCjs(dist$6),dist$3=_mergeNamespaces({__proto__:null,default:index},[dist$6]),require$$4=getAugmentedNamespace(dist$3);var earlyErrorState$1={},multimap$2={exports:{}};(function(u,n){function e(a,s){for(var o=a.keys(),c;!(c=o.next()).done;)s(a.get(c.value),c.value,a)}var r=function(){var a;typeof Map<"u"&&(a=Map,Map.prototype.keys||(Map.prototype.keys=function(){var l=[];return this.forEach(function(m,E){l.push(E)}),l}));function s(l){var m=this;m._map=a,s.Map&&(m._map=s.Map),m._=m._map?new m._map:{},l&&l.forEach(function(E){m.set(E[0],E[1])})}s.prototype.get=function(l){return this._map?this._.get(l):this._[l]},s.prototype.set=function(l,m){var E=Array.prototype.slice.call(arguments);l=E.shift();var A=this.get(l);return A||(A=[],this._map?this._.set(l,A):this._[l]=A),Array.prototype.push.apply(A,E),this},s.prototype.delete=function(l,m){if(!this.has(l))return!1;if(arguments.length==1)return this._map?this._.delete(l):delete this._[l],!0;var E=this.get(l),A=E.indexOf(m);return A!=-1?(E.splice(A,1),!0):!1},s.prototype.has=function(l,m){var E=this._map?this._.has(l):this._.hasOwnProperty(l);if(arguments.length==1||!E)return E;var A=this.get(l)||[];return A.indexOf(m)!=-1},s.prototype.keys=function(){return this._map?c(this._.keys()):c(Object.keys(this._))},s.prototype.values=function(){var l=[];return this.forEachEntry(function(m){Array.prototype.push.apply(l,m)}),c(l)},s.prototype.forEachEntry=function(l){e(this,l)},s.prototype.forEach=function(l){var m=this;m.forEachEntry(function(E,A){E.forEach(function(_){l(_,A,m)})})},s.prototype.clear=function(){this._map?this._.clear():this._={}},Object.defineProperty(s.prototype,"size",{configurable:!1,enumerable:!0,get:function(){var l=0;return e(this,function(m){l+=m.length}),l}}),Object.defineProperty(s.prototype,"count",{configurable:!1,enumerable:!0,get:function(){return this._.size}});var o;try{o=new Function("iterator","makeIterator","var keysArray = []; for(var key of iterator){keysArray.push(key);} return makeIterator(keysArray).next;")}catch{}function c(l){if(Array.isArray(l)){var m=0;return{next:function(){return m<l.length?{value:l[m++],done:!1}:{done:!0}}}}return!l.next&&o&&(l.next=o(l,c)),l}return s}();u&&u.exports&&(u.exports=r)})(multimap$2);const multimap=multimap$2.exports,multimap$1=_mergeNamespaces({__proto__:null,default:multimap},[multimap$2.exports]),require$$0$4=getAugmentedNamespace(multimap$1);var EarlyErrorState_1;Object.defineProperty(earlyErrorState$1,"__esModule",{value:!0});var EarlyError_1=earlyErrorState$1.EarlyError=EarlyErrorState_1=earlyErrorState$1.EarlyErrorState=void 0,_createClass$6=function(){function u(n,e){for(var r=0;r<e.length;r++){var a=e[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(n,e,r){return e&&u(n.prototype,e),r&&u(n,r),n}}(),_multimap=require$$0$4,_multimap2=_interopRequireDefault$4(_multimap);function _interopRequireDefault$4(u){return u&&u.__esModule?u:{default:u}}function _possibleConstructorReturn$4(u,n){if(!u)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n&&(typeof n=="object"||typeof n=="function")?n:u}function _inherits$4(u,n){if(typeof n!="function"&&n!==null)throw new TypeError("Super expression must either be null or a function, not "+typeof n);u.prototype=Object.create(n&&n.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(u,n):u.__proto__=n)}function _classCallCheck$7(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}function addEach(u){for(var n=arguments.length,e=Array(n>1?n-1:0),r=1;r<n;r++)e[r-1]=arguments[r];return e.forEach(function(a){a.forEachEntry(function(s,o){u.set.apply(u,[o].concat(s))})}),u}var identity=void 0,EarlyErrorState=EarlyErrorState_1=earlyErrorState$1.EarlyErrorState=function(){function u(){_classCallCheck$7(this,u),this.errors=[],this.strictErrors=[],this.usedLabelNames=[],this.freeBreakStatements=[],this.freeContinueStatements=[],this.freeLabeledBreakStatements=[],this.freeLabeledContinueStatements=[],this.newTargetExpressions=[],this.boundNames=new _multimap2.default,this.lexicallyDeclaredNames=new _multimap2.default,this.functionDeclarationNames=new _multimap2.default,this.varDeclaredNames=new _multimap2.default,this.forOfVarDeclaredNames=[],this.exportedNames=new _multimap2.default,this.exportedBindings=new _multimap2.default,this.superCallExpressions=[],this.superCallExpressionsInConstructorMethod=[],this.superPropertyExpressions=[],this.yieldExpressions=[],this.awaitExpressions=[]}return _createClass$6(u,[{key:"addFreeBreakStatement",value:function(e){return this.freeBreakStatements.push(e),this}},{key:"addFreeLabeledBreakStatement",value:function(e){return this.freeLabeledBreakStatements.push(e),this}},{key:"clearFreeBreakStatements",value:function(){return this.freeBreakStatements=[],this}},{key:"addFreeContinueStatement",value:function(e){return this.freeContinueStatements.push(e),this}},{key:"addFreeLabeledContinueStatement",value:function(e){return this.freeLabeledContinueStatements.push(e),this}},{key:"clearFreeContinueStatements",value:function(){return this.freeContinueStatements=[],this}},{key:"enforceFreeBreakStatementErrors",value:function(e){return[].push.apply(this.errors,this.freeBreakStatements.map(e)),this.freeBreakStatements=[],this}},{key:"enforceFreeLabeledBreakStatementErrors",value:function(e){return[].push.apply(this.errors,this.freeLabeledBreakStatements.map(e)),this.freeLabeledBreakStatements=[],this}},{key:"enforceFreeContinueStatementErrors",value:function(e){return[].push.apply(this.errors,this.freeContinueStatements.map(e)),this.freeContinueStatements=[],this}},{key:"enforceFreeLabeledContinueStatementErrors",value:function(e){return[].push.apply(this.errors,this.freeLabeledContinueStatements.map(e)),this.freeLabeledContinueStatements=[],this}},{key:"observeIterationLabel",value:function(e){return this.usedLabelNames.push(e),this.freeLabeledBreakStatements=this.freeLabeledBreakStatements.filter(function(r){return r.label!==e}),this.freeLabeledContinueStatements=this.freeLabeledContinueStatements.filter(function(r){return r.label!==e}),this}},{key:"observeNonIterationLabel",value:function(e){return this.usedLabelNames.push(e),this.freeLabeledBreakStatements=this.freeLabeledBreakStatements.filter(function(r){return r.label!==e}),this}},{key:"clearUsedLabelNames",value:function(){return this.usedLabelNames=[],this}},{key:"observeSuperCallExpression",value:function(e){return this.superCallExpressions.push(e),this}},{key:"observeConstructorMethod",value:function(){return this.superCallExpressionsInConstructorMethod=this.superCallExpressions,this.superCallExpressions=[],this}},{key:"clearSuperCallExpressionsInConstructorMethod",value:function(){return this.superCallExpressionsInConstructorMethod=[],this}},{key:"enforceSuperCallExpressions",value:function(e){return[].push.apply(this.errors,this.superCallExpressions.map(e)),[].push.apply(this.errors,this.superCallExpressionsInConstructorMethod.map(e)),this.superCallExpressions=[],this.superCallExpressionsInConstructorMethod=[],this}},{key:"enforceSuperCallExpressionsInConstructorMethod",value:function(e){return[].push.apply(this.errors,this.superCallExpressionsInConstructorMethod.map(e)),this.superCallExpressionsInConstructorMethod=[],this}},{key:"observeSuperPropertyExpression",value:function(e){return this.superPropertyExpressions.push(e),this}},{key:"clearSuperPropertyExpressions",value:function(){return this.superPropertyExpressions=[],this}},{key:"enforceSuperPropertyExpressions",value:function(e){return[].push.apply(this.errors,this.superPropertyExpressions.map(e)),this.superPropertyExpressions=[],this}},{key:"observeNewTargetExpression",value:function(e){return this.newTargetExpressions.push(e),this}},{key:"clearNewTargetExpressions",value:function(){return this.newTargetExpressions=[],this}},{key:"bindName",value:function(e,r){return this.boundNames.set(e,r),this}},{key:"clearBoundNames",value:function(){return this.boundNames=new _multimap2.default,this}},{key:"observeLexicalDeclaration",value:function(){return addEach(this.lexicallyDeclaredNames,this.boundNames),this.boundNames=new _multimap2.default,this}},{key:"observeLexicalBoundary",value:function(){return this.previousLexicallyDeclaredNames=this.lexicallyDeclaredNames,this.lexicallyDeclaredNames=new _multimap2.default,this.functionDeclarationNames=new _multimap2.default,this}},{key:"enforceDuplicateLexicallyDeclaredNames",value:function(e){var r=this;return this.lexicallyDeclaredNames.forEachEntry(function(a){a.length>1&&a.slice(1).forEach(function(s){r.addError(e(s))})}),this}},{key:"enforceConflictingLexicallyDeclaredNames",value:function(e,r){var a=this;return this.lexicallyDeclaredNames.forEachEntry(function(s,o){e.has(o)&&s.forEach(function(c){a.addError(r(c))})}),this}},{key:"observeFunctionDeclaration",value:function(){return this.observeVarBoundary(),addEach(this.functionDeclarationNames,this.boundNames),this.boundNames=new _multimap2.default,this}},{key:"functionDeclarationNamesAreLexical",value:function(){return addEach(this.lexicallyDeclaredNames,this.functionDeclarationNames),this.functionDeclarationNames=new _multimap2.default,this}},{key:"observeVarDeclaration",value:function(){return addEach(this.varDeclaredNames,this.boundNames),this.boundNames=new _multimap2.default,this}},{key:"recordForOfVars",value:function(){var e=this;return this.varDeclaredNames.forEach(function(r){e.forOfVarDeclaredNames.push(r)}),this}},{key:"observeVarBoundary",value:function(){return this.lexicallyDeclaredNames=new _multimap2.default,this.functionDeclarationNames=new _multimap2.default,this.varDeclaredNames=new _multimap2.default,this.forOfVarDeclaredNames=[],this}},{key:"exportName",value:function(e,r){return this.exportedNames.set(e,r),this}},{key:"exportDeclaredNames",value:function(){return addEach(this.exportedNames,this.lexicallyDeclaredNames,this.varDeclaredNames),addEach(this.exportedBindings,this.lexicallyDeclaredNames,this.varDeclaredNames),this}},{key:"exportBinding",value:function(e,r){return this.exportedBindings.set(e,r),this}},{key:"clearExportedBindings",value:function(){return this.exportedBindings=new _multimap2.default,this}},{key:"observeYieldExpression",value:function(e){return this.yieldExpressions.push(e),this}},{key:"clearYieldExpressions",value:function(){return this.yieldExpressions=[],this}},{key:"observeAwaitExpression",value:function(e){return this.awaitExpressions.push(e),this}},{key:"clearAwaitExpressions",value:function(){return this.awaitExpressions=[],this}},{key:"addError",value:function(e){return this.errors.push(e),this}},{key:"addStrictError",value:function(e){return this.strictErrors.push(e),this}},{key:"enforceStrictErrors",value:function(){return[].push.apply(this.errors,this.strictErrors),this.strictErrors=[],this}},{key:"concat",value:function(e){return this===identity?e:e===identity?this:([].push.apply(this.errors,e.errors),[].push.apply(this.strictErrors,e.strictErrors),[].push.apply(this.usedLabelNames,e.usedLabelNames),[].push.apply(this.freeBreakStatements,e.freeBreakStatements),[].push.apply(this.freeContinueStatements,e.freeContinueStatements),[].push.apply(this.freeLabeledBreakStatements,e.freeLabeledBreakStatements),[].push.apply(this.freeLabeledContinueStatements,e.freeLabeledContinueStatements),[].push.apply(this.newTargetExpressions,e.newTargetExpressions),addEach(this.boundNames,e.boundNames),addEach(this.lexicallyDeclaredNames,e.lexicallyDeclaredNames),addEach(this.functionDeclarationNames,e.functionDeclarationNames),addEach(this.varDeclaredNames,e.varDeclaredNames),[].push.apply(this.forOfVarDeclaredNames,e.forOfVarDeclaredNames),addEach(this.exportedNames,e.exportedNames),addEach(this.exportedBindings,e.exportedBindings),[].push.apply(this.superCallExpressions,e.superCallExpressions),[].push.apply(this.superCallExpressionsInConstructorMethod,e.superCallExpressionsInConstructorMethod),[].push.apply(this.superPropertyExpressions,e.superPropertyExpressions),[].push.apply(this.yieldExpressions,e.yieldExpressions),[].push.apply(this.awaitExpressions,e.awaitExpressions),this)}}],[{key:"empty",value:function(){return identity}}]),u}();identity=new EarlyErrorState;Object.getOwnPropertyNames(EarlyErrorState.prototype).forEach(function(u){u!=="constructor"&&Object.defineProperty(identity,u,{value:function(){return EarlyErrorState.prototype[u].apply(new EarlyErrorState,arguments)},enumerable:!1,writable:!0,configurable:!0})});EarlyError_1=earlyErrorState$1.EarlyError=function(u){_inherits$4(n,u);function n(e,r){_classCallCheck$7(this,n);var a=_possibleConstructorReturn$4(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,r));return a.node=e,a.message=r,a}return n}(Error);const earlyErrorState=_mergeNamespaces({__proto__:null,get EarlyError(){return EarlyError_1},get EarlyErrorState(){return EarlyErrorState_1},default:earlyErrorState$1},[earlyErrorState$1]),require$$3$1=getAugmentedNamespace(earlyErrorState);Object.defineProperty(earlyErrors$1,"__esModule",{value:!0});var EarlyErrorChecker_1=earlyErrors$1.EarlyErrorChecker=void 0,_createClass$5=function(){function u(n,e){for(var r=0;r<e.length;r++){var a=e[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(n,e,r){return e&&u(n.prototype,e),r&&u(n,r),n}}(),_get$1=function u(n,e,r){n===null&&(n=Function.prototype);var a=Object.getOwnPropertyDescriptor(n,e);if(a===void 0){var s=Object.getPrototypeOf(n);return s===null?void 0:u(s,e,r)}else{if("value"in a)return a.value;var o=a.get;return o===void 0?void 0:o.call(r)}},_shiftReducer$1=require$$4,_shiftReducer2=_interopRequireDefault$3(_shiftReducer$1),_utils=require$$3$5,_errors=require$$2$5,_earlyErrorState=require$$3$1;function _interopRequireDefault$3(u){return u&&u.__esModule?u:{default:u}}function _toConsumableArray$3(u){if(Array.isArray(u)){for(var n=0,e=Array(u.length);n<u.length;n++)e[n]=u[n];return e}else return Array.from(u)}function _classCallCheck$6(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn$3(u,n){if(!u)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n&&(typeof n=="object"||typeof n=="function")?n:u}function _inherits$3(u,n){if(typeof n!="function"&&n!==null)throw new TypeError("Super expression must either be null or a function, not "+typeof n);u.prototype=Object.create(n&&n.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(u,n):u.__proto__=n)}function isStrictFunctionBody(u){var n=u.directives;return n.some(function(e){return e.rawValue==="use strict"})}function isLabelledFunction(u){return u.type==="LabeledStatement"&&(u.body.type==="FunctionDeclaration"||isLabelledFunction(u.body))}function isIterationStatement(u){switch(u.type){case"LabeledStatement":return isIterationStatement(u.body);case"DoWhileStatement":case"ForInStatement":case"ForOfStatement":case"ForStatement":case"WhileStatement":return!0}return!1}function isSpecialMethod(u){if(u.name.type!=="StaticPropertyName"||u.name.value!=="constructor")return!1;switch(u.type){case"Getter":case"Setter":return!0;case"Method":return u.isGenerator||u.isAsync}throw new Error("not reached")}function enforceDuplicateConstructorMethods(u,n){var e=u.elements.filter(function(r){return!r.isStatic&&r.method.type==="Method"&&!r.method.isGenerator&&r.method.name.type==="StaticPropertyName"&&r.method.name.value==="constructor"});return e.length>1&&e.slice(1).forEach(function(r){n=n.addError(new _earlyErrorState.EarlyError(r,"Duplicate constructor method in class"))}),n}var SUPERCALL_ERROR=function u(n){return new _earlyErrorState.EarlyError(n,_errors.ErrorMessages.ILLEGAL_SUPER_CALL)},SUPERPROPERTY_ERROR=function u(n){return new _earlyErrorState.EarlyError(n,"Member access on super must be in a method")},DUPLICATE_BINDING=function u(n){return new _earlyErrorState.EarlyError(n,"Duplicate binding "+JSON.stringify(n.name))},FREE_CONTINUE=function u(n){return new _earlyErrorState.EarlyError(n,"Continue statement must be nested within an iteration statement")},UNBOUND_CONTINUE=function u(n){return new _earlyErrorState.EarlyError(n,"Continue statement must be nested within an iteration statement with label "+JSON.stringify(n.label))},FREE_BREAK=function u(n){return new _earlyErrorState.EarlyError(n,"Break statement must be nested within an iteration statement or a switch statement")},UNBOUND_BREAK=function u(n){return new _earlyErrorState.EarlyError(n,"Break statement must be nested within a statement with label "+JSON.stringify(n.label))};EarlyErrorChecker_1=earlyErrors$1.EarlyErrorChecker=function(u){_inherits$3(n,u);function n(){return _classCallCheck$6(this,n),_possibleConstructorReturn$3(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,_earlyErrorState.EarlyErrorState))}return _createClass$5(n,[{key:"reduceAssignmentExpression",value:function(){return _get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceAssignmentExpression",this).apply(this,arguments).clearBoundNames()}},{key:"reduceAssignmentTargetIdentifier",value:function(r){var a=this.identity;return(r.name==="eval"||r.name==="arguments"||(0,_utils.isStrictModeReservedWord)(r.name))&&(a=a.addStrictError(new _earlyErrorState.EarlyError(r,"The identifier "+JSON.stringify(r.name)+" must not be in binding position in strict mode"))),a}},{key:"reduceArrowExpression",value:function(r,a){var s=a.params,o=a.body,c=r.params.rest==null&&r.params.items.every(function(m){return m.type==="BindingIdentifier"});s=s.enforceDuplicateLexicallyDeclaredNames(DUPLICATE_BINDING),r.body.type==="FunctionBody"&&(o=o.enforceConflictingLexicallyDeclaredNames(s.lexicallyDeclaredNames,DUPLICATE_BINDING),isStrictFunctionBody(r.body)&&(s=s.enforceStrictErrors(),o=o.enforceStrictErrors())),s.yieldExpressions.forEach(function(m){s=s.addError(new _earlyErrorState.EarlyError(m,"Arrow parameters must not contain yield expressions"))}),s.awaitExpressions.forEach(function(m){s=s.addError(new _earlyErrorState.EarlyError(m,"Arrow parameters must not contain await expressions"))});var l=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceArrowExpression",this).call(this,r,{params:s,body:o});return!c&&r.body.type==="FunctionBody"&&isStrictFunctionBody(r.body)&&(l=l.addError(new _earlyErrorState.EarlyError(r,'Functions with non-simple parameter lists may not contain a "use strict" directive'))),l=l.clearYieldExpressions(),l=l.clearAwaitExpressions(),l=l.observeVarBoundary(),l}},{key:"reduceAwaitExpression",value:function(r,a){var s=a.expression;return s.observeAwaitExpression(r)}},{key:"reduceBindingIdentifier",value:function(r){var a=this.identity;return(r.name==="eval"||r.name==="arguments"||(0,_utils.isStrictModeReservedWord)(r.name))&&(a=a.addStrictError(new _earlyErrorState.EarlyError(r,"The identifier "+JSON.stringify(r.name)+" must not be in binding position in strict mode"))),a=a.bindName(r.name,r),a}},{key:"reduceBlock",value:function(){var r=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceBlock",this).apply(this,arguments);return r=r.functionDeclarationNamesAreLexical(),r=r.enforceDuplicateLexicallyDeclaredNames(DUPLICATE_BINDING),r=r.enforceConflictingLexicallyDeclaredNames(r.varDeclaredNames,DUPLICATE_BINDING),r=r.observeLexicalBoundary(),r}},{key:"reduceBreakStatement",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceBreakStatement",this).apply(this,arguments);return a=r.label==null?a.addFreeBreakStatement(r):a.addFreeLabeledBreakStatement(r),a}},{key:"reduceCallExpression",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceCallExpression",this).apply(this,arguments);return r.callee.type==="Super"&&(a=a.observeSuperCallExpression(r)),a}},{key:"reduceCatchClause",value:function(r,a){var s=a.binding,o=a.body;s=s.observeLexicalDeclaration(),s=s.enforceDuplicateLexicallyDeclaredNames(DUPLICATE_BINDING),s=s.enforceConflictingLexicallyDeclaredNames(o.previousLexicallyDeclaredNames,DUPLICATE_BINDING),s.lexicallyDeclaredNames.forEachEntry(function(l,m){o.varDeclaredNames.has(m)&&o.varDeclaredNames.get(m).forEach(function(E){o.forOfVarDeclaredNames.indexOf(E)>=0&&(s=s.addError(DUPLICATE_BINDING(E)))})});var c=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceCatchClause",this).call(this,r,{binding:s,body:o});return c=c.observeLexicalBoundary(),c}},{key:"reduceClassDeclaration",value:function(r,a){var s=a.name,o=a.super,c=a.elements,l=s.enforceStrictErrors(),m=this.append.apply(this,_toConsumableArray$3(c));return m=m.enforceStrictErrors(),r.super!=null&&(o=o.enforceStrictErrors(),l=this.append(l,o),m=m.clearSuperCallExpressionsInConstructorMethod()),l=this.append(l,m),l=enforceDuplicateConstructorMethods(r,l),l=l.observeLexicalDeclaration(),l}},{key:"reduceClassElement",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceClassElement",this).apply(this,arguments);return!r.isStatic&&isSpecialMethod(r.method)&&(a=a.addError(new _earlyErrorState.EarlyError(r,_errors.ErrorMessages.ILLEGAL_CONSTRUCTORS))),r.isStatic&&r.method.name.type==="StaticPropertyName"&&r.method.name.value==="prototype"&&(a=a.addError(new _earlyErrorState.EarlyError(r,'Static class methods cannot be named "prototype"'))),a}},{key:"reduceClassExpression",value:function(r,a){var s=a.name,o=a.super,c=a.elements,l=r.name==null?this.identity:s.enforceStrictErrors(),m=this.append.apply(this,_toConsumableArray$3(c));return m=m.enforceStrictErrors(),r.super!=null&&(o=o.enforceStrictErrors(),l=this.append(l,o),m=m.clearSuperCallExpressionsInConstructorMethod()),l=this.append(l,m),l=enforceDuplicateConstructorMethods(r,l),l=l.clearBoundNames(),l}},{key:"reduceCompoundAssignmentExpression",value:function(){return _get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceCompoundAssignmentExpression",this).apply(this,arguments).clearBoundNames()}},{key:"reduceComputedMemberExpression",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceComputedMemberExpression",this).apply(this,arguments);return r.object.type==="Super"&&(a=a.observeSuperPropertyExpression(r)),a}},{key:"reduceContinueStatement",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceContinueStatement",this).apply(this,arguments);return a=r.label==null?a.addFreeContinueStatement(r):a.addFreeLabeledContinueStatement(r),a}},{key:"reduceDoWhileStatement",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceDoWhileStatement",this).apply(this,arguments);return isLabelledFunction(r.body)&&(a=a.addError(new _earlyErrorState.EarlyError(r.body,"The body of a do-while statement must not be a labeled function declaration"))),a=a.clearFreeContinueStatements(),a=a.clearFreeBreakStatements(),a}},{key:"reduceExport",value:function(){var r=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceExport",this).apply(this,arguments);return r=r.functionDeclarationNamesAreLexical(),r=r.exportDeclaredNames(),r}},{key:"reduceExportFrom",value:function(){var r=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceExportFrom",this).apply(this,arguments);return r=r.clearExportedBindings(),r}},{key:"reduceExportFromSpecifier",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceExportFromSpecifier",this).apply(this,arguments);return a=a.exportName(r.exportedName||r.name,r),a=a.exportBinding(r.name,r),a}},{key:"reduceExportLocalSpecifier",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceExportLocalSpecifier",this).apply(this,arguments);return a=a.exportName(r.exportedName||r.name.name,r),a=a.exportBinding(r.name.name,r),a}},{key:"reduceExportDefault",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceExportDefault",this).apply(this,arguments);return a=a.functionDeclarationNamesAreLexical(),a=a.exportName("default",r),a}},{key:"reduceFormalParameters",value:function(){var r=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceFormalParameters",this).apply(this,arguments);return r=r.observeLexicalDeclaration(),r}},{key:"reduceForStatement",value:function(r,a){var s=a.init,o=a.test,c=a.update,l=a.body;s!=null&&(s=s.enforceDuplicateLexicallyDeclaredNames(DUPLICATE_BINDING),s=s.enforceConflictingLexicallyDeclaredNames(l.varDeclaredNames,DUPLICATE_BINDING));var m=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceForStatement",this).call(this,r,{init:s,test:o,update:c,body:l});return r.init!=null&&r.init.type==="VariableDeclaration"&&r.init.kind==="const"&&r.init.declarators.forEach(function(E){E.init==null&&(m=m.addError(new _earlyErrorState.EarlyError(E,"Constant lexical declarations must have an initialiser")))}),isLabelledFunction(r.body)&&(m=m.addError(new _earlyErrorState.EarlyError(r.body,"The body of a for statement must not be a labeled function declaration"))),m=m.clearFreeContinueStatements(),m=m.clearFreeBreakStatements(),m=m.observeLexicalBoundary(),m}},{key:"reduceForInStatement",value:function(r,a){var s=a.left,o=a.right,c=a.body;s=s.enforceDuplicateLexicallyDeclaredNames(DUPLICATE_BINDING),s=s.enforceConflictingLexicallyDeclaredNames(c.varDeclaredNames,DUPLICATE_BINDING);var l=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceForInStatement",this).call(this,r,{left:s,right:o,body:c});return isLabelledFunction(r.body)&&(l=l.addError(new _earlyErrorState.EarlyError(r.body,"The body of a for-in statement must not be a labeled function declaration"))),l=l.clearFreeContinueStatements(),l=l.clearFreeBreakStatements(),l=l.observeLexicalBoundary(),l}},{key:"reduceForOfStatement",value:function(r,a){var s=a.left,o=a.right,c=a.body;s=s.recordForOfVars(),s=s.enforceDuplicateLexicallyDeclaredNames(DUPLICATE_BINDING),s=s.enforceConflictingLexicallyDeclaredNames(c.varDeclaredNames,DUPLICATE_BINDING);var l=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceForOfStatement",this).call(this,r,{left:s,right:o,body:c});return isLabelledFunction(r.body)&&(l=l.addError(new _earlyErrorState.EarlyError(r.body,"The body of a for-of statement must not be a labeled function declaration"))),l=l.clearFreeContinueStatements(),l=l.clearFreeBreakStatements(),l=l.observeLexicalBoundary(),l}},{key:"reduceForAwaitStatement",value:function(r,a){var s=a.left,o=a.right,c=a.body;s=s.recordForOfVars(),s=s.enforceDuplicateLexicallyDeclaredNames(DUPLICATE_BINDING),s=s.enforceConflictingLexicallyDeclaredNames(c.varDeclaredNames,DUPLICATE_BINDING);var l=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceForOfStatement",this).call(this,r,{left:s,right:o,body:c});return isLabelledFunction(r.body)&&(l=l.addError(new _earlyErrorState.EarlyError(r.body,"The body of a for-await statement must not be a labeled function declaration"))),l=l.clearFreeContinueStatements(),l=l.clearFreeBreakStatements(),l=l.observeLexicalBoundary(),l}},{key:"reduceFunctionBody",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceFunctionBody",this).apply(this,arguments);return a=a.enforceDuplicateLexicallyDeclaredNames(DUPLICATE_BINDING),a=a.enforceConflictingLexicallyDeclaredNames(a.varDeclaredNames,DUPLICATE_BINDING),a=a.enforceFreeContinueStatementErrors(FREE_CONTINUE),a=a.enforceFreeLabeledContinueStatementErrors(UNBOUND_CONTINUE),a=a.enforceFreeBreakStatementErrors(FREE_BREAK),a=a.enforceFreeLabeledBreakStatementErrors(UNBOUND_BREAK),a=a.clearUsedLabelNames(),a=a.clearYieldExpressions(),a=a.clearAwaitExpressions(),isStrictFunctionBody(r)&&(a=a.enforceStrictErrors()),a}},{key:"reduceFunctionDeclaration",value:function(r,a){var s=a.name,o=a.params,c=a.body,l=r.params.rest==null&&r.params.items.every(function(A){return A.type==="BindingIdentifier"}),m=!l||r.isGenerator?"addError":"addStrictError";o.lexicallyDeclaredNames.forEachEntry(function(A){A.length>1&&A.slice(1).forEach(function(_){o=o[m](DUPLICATE_BINDING(_))})}),c=c.enforceConflictingLexicallyDeclaredNames(o.lexicallyDeclaredNames,DUPLICATE_BINDING),c=c.enforceSuperCallExpressions(SUPERCALL_ERROR),c=c.enforceSuperPropertyExpressions(SUPERPROPERTY_ERROR),o=o.enforceSuperCallExpressions(SUPERCALL_ERROR),o=o.enforceSuperPropertyExpressions(SUPERPROPERTY_ERROR),r.isGenerator&&o.yieldExpressions.forEach(function(A){o=o.addError(new _earlyErrorState.EarlyError(A,"Generator parameters must not contain yield expressions"))}),r.isAsync&&o.awaitExpressions.forEach(function(A){o=o.addError(new _earlyErrorState.EarlyError(A,"Async function parameters must not contain await expressions"))}),o=o.clearNewTargetExpressions(),c=c.clearNewTargetExpressions(),isStrictFunctionBody(r.body)&&(o=o.enforceStrictErrors(),c=c.enforceStrictErrors());var E=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceFunctionDeclaration",this).call(this,r,{name:s,params:o,body:c});return!l&&isStrictFunctionBody(r.body)&&(E=E.addError(new _earlyErrorState.EarlyError(r,'Functions with non-simple parameter lists may not contain a "use strict" directive'))),E=E.clearYieldExpressions(),E=E.clearAwaitExpressions(),E=E.observeFunctionDeclaration(),E}},{key:"reduceFunctionExpression",value:function(r,a){var s=a.name,o=a.params,c=a.body,l=r.params.rest==null&&r.params.items.every(function(A){return A.type==="BindingIdentifier"}),m=!l||r.isGenerator?"addError":"addStrictError";o.lexicallyDeclaredNames.forEachEntry(function(A,_){A.length>1&&A.slice(1).forEach(function(v){o=o[m](new _earlyErrorState.EarlyError(v,"Duplicate binding "+JSON.stringify(_)))})}),c=c.enforceConflictingLexicallyDeclaredNames(o.lexicallyDeclaredNames,DUPLICATE_BINDING),c=c.enforceSuperCallExpressions(SUPERCALL_ERROR),c=c.enforceSuperPropertyExpressions(SUPERPROPERTY_ERROR),o=o.enforceSuperCallExpressions(SUPERCALL_ERROR),o=o.enforceSuperPropertyExpressions(SUPERPROPERTY_ERROR),r.isGenerator&&o.yieldExpressions.forEach(function(A){o=o.addError(new _earlyErrorState.EarlyError(A,"Generator parameters must not contain yield expressions"))}),r.isAsync&&o.awaitExpressions.forEach(function(A){o=o.addError(new _earlyErrorState.EarlyError(A,"Async function parameters must not contain await expressions"))}),o=o.clearNewTargetExpressions(),c=c.clearNewTargetExpressions(),isStrictFunctionBody(r.body)&&(o=o.enforceStrictErrors(),c=c.enforceStrictErrors());var E=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceFunctionExpression",this).call(this,r,{name:s,params:o,body:c});return!l&&isStrictFunctionBody(r.body)&&(E=E.addError(new _earlyErrorState.EarlyError(r,'Functions with non-simple parameter lists may not contain a "use strict" directive'))),E=E.clearBoundNames(),E=E.clearYieldExpressions(),E=E.clearAwaitExpressions(),E=E.observeVarBoundary(),E}},{key:"reduceGetter",value:function(r,a){var s=a.name,o=a.body;o=o.enforceSuperCallExpressions(SUPERCALL_ERROR),o=o.clearSuperPropertyExpressions(),o=o.clearNewTargetExpressions(),isStrictFunctionBody(r.body)&&(o=o.enforceStrictErrors());var c=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceGetter",this).call(this,r,{name:s,body:o});return c=c.observeVarBoundary(),c}},{key:"reduceIdentifierExpression",value:function(r){var a=this.identity;return(0,_utils.isStrictModeReservedWord)(r.name)&&(a=a.addStrictError(new _earlyErrorState.EarlyError(r,"The identifier "+JSON.stringify(r.name)+" must not be in expression position in strict mode"))),a}},{key:"reduceIfStatement",value:function(r,a){var s=a.test,o=a.consequent,c=a.alternate;return isLabelledFunction(r.consequent)&&(o=o.addError(new _earlyErrorState.EarlyError(r.consequent,"The consequent of an if statement must not be a labeled function declaration"))),r.alternate!=null&&isLabelledFunction(r.alternate)&&(c=c.addError(new _earlyErrorState.EarlyError(r.alternate,"The alternate of an if statement must not be a labeled function declaration"))),r.consequent.type==="FunctionDeclaration"&&(o=o.addStrictError(new _earlyErrorState.EarlyError(r.consequent,"FunctionDeclarations in IfStatements are disallowed in strict mode")),o=o.observeLexicalBoundary()),r.alternate!=null&&r.alternate.type==="FunctionDeclaration"&&(c=c.addStrictError(new _earlyErrorState.EarlyError(r.alternate,"FunctionDeclarations in IfStatements are disallowed in strict mode")),c=c.observeLexicalBoundary()),_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceIfStatement",this).call(this,r,{test:s,consequent:o,alternate:c})}},{key:"reduceImport",value:function(){var r=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceImport",this).apply(this,arguments);return r=r.observeLexicalDeclaration(),r}},{key:"reduceImportNamespace",value:function(){var r=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceImportNamespace",this).apply(this,arguments);return r=r.observeLexicalDeclaration(),r}},{key:"reduceLabeledStatement",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceLabeledStatement",this).apply(this,arguments);return(r.label==="yield"||(0,_utils.isStrictModeReservedWord)(r.label))&&(a=a.addStrictError(new _earlyErrorState.EarlyError(r,"The identifier "+JSON.stringify(r.label)+" must not be in label position in strict mode"))),a.usedLabelNames.indexOf(r.label)>=0&&(a=a.addError(new _earlyErrorState.EarlyError(r,"Label "+JSON.stringify(r.label)+" has already been declared"))),r.body.type==="FunctionDeclaration"&&(a=a.addStrictError(new _earlyErrorState.EarlyError(r,"Labeled FunctionDeclarations are disallowed in strict mode"))),a=isIterationStatement(r.body)?a.observeIterationLabel(r.label):a.observeNonIterationLabel(r.label),a}},{key:"reduceLiteralRegExpExpression",value:function(){var r=this.identity;return r}},{key:"reduceMethod",value:function(r,a){var s=a.name,o=a.params,c=a.body,l=r.params.rest==null&&r.params.items.every(function(E){return E.type==="BindingIdentifier"});o=o.enforceDuplicateLexicallyDeclaredNames(DUPLICATE_BINDING),c=c.enforceConflictingLexicallyDeclaredNames(o.lexicallyDeclaredNames,DUPLICATE_BINDING),r.name.type==="StaticPropertyName"&&r.name.value==="constructor"?(c=c.observeConstructorMethod(),o=o.observeConstructorMethod()):(c=c.enforceSuperCallExpressions(SUPERCALL_ERROR),o=o.enforceSuperCallExpressions(SUPERCALL_ERROR)),r.isGenerator&&o.yieldExpressions.forEach(function(E){o=o.addError(new _earlyErrorState.EarlyError(E,"Generator parameters must not contain yield expressions"))}),r.isAsync&&o.awaitExpressions.forEach(function(E){o=o.addError(new _earlyErrorState.EarlyError(E,"Async function parameters must not contain await expressions"))}),c=c.clearSuperPropertyExpressions(),o=o.clearSuperPropertyExpressions(),o=o.clearNewTargetExpressions(),c=c.clearNewTargetExpressions(),isStrictFunctionBody(r.body)&&(o=o.enforceStrictErrors(),c=c.enforceStrictErrors());var m=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceMethod",this).call(this,r,{name:s,params:o,body:c});return!l&&isStrictFunctionBody(r.body)&&(m=m.addError(new _earlyErrorState.EarlyError(r,'Functions with non-simple parameter lists may not contain a "use strict" directive'))),m=m.clearYieldExpressions(),m=m.clearAwaitExpressions(),m=m.observeVarBoundary(),m}},{key:"reduceModule",value:function(){var r=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceModule",this).apply(this,arguments);return r=r.functionDeclarationNamesAreLexical(),r=r.enforceDuplicateLexicallyDeclaredNames(DUPLICATE_BINDING),r=r.enforceConflictingLexicallyDeclaredNames(r.varDeclaredNames,DUPLICATE_BINDING),r.exportedNames.forEachEntry(function(a,s){a.length>1&&a.slice(1).forEach(function(o){r=r.addError(new _earlyErrorState.EarlyError(o,"Duplicate export "+JSON.stringify(s)))})}),r.exportedBindings.forEachEntry(function(a,s){!r.lexicallyDeclaredNames.has(s)&&!r.varDeclaredNames.has(s)&&a.forEach(function(o){r=r.addError(new _earlyErrorState.EarlyError(o,"Exported binding "+JSON.stringify(s)+" is not declared"))})}),r.newTargetExpressions.forEach(function(a){r=r.addError(new _earlyErrorState.EarlyError(a,"new.target must be within function (but not arrow expression) code"))}),r=r.enforceFreeContinueStatementErrors(FREE_CONTINUE),r=r.enforceFreeLabeledContinueStatementErrors(UNBOUND_CONTINUE),r=r.enforceFreeBreakStatementErrors(FREE_BREAK),r=r.enforceFreeLabeledBreakStatementErrors(UNBOUND_BREAK),r=r.enforceSuperCallExpressions(SUPERCALL_ERROR),r=r.enforceSuperPropertyExpressions(SUPERPROPERTY_ERROR),r=r.enforceStrictErrors(),r}},{key:"reduceNewTargetExpression",value:function(r){return this.identity.observeNewTargetExpression(r)}},{key:"reduceObjectExpression",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceObjectExpression",this).apply(this,arguments);a=a.enforceSuperCallExpressionsInConstructorMethod(SUPERCALL_ERROR);var s=r.properties.filter(function(o){return o.type==="DataProperty"&&o.name.type==="StaticPropertyName"&&o.name.value==="__proto__"});return s.slice(1).forEach(function(o){a=a.addError(new _earlyErrorState.EarlyError(o,"Duplicate __proto__ property in object literal not allowed"))}),a}},{key:"reduceUpdateExpression",value:function(){var r=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceUpdateExpression",this).apply(this,arguments);return r=r.clearBoundNames(),r}},{key:"reduceUnaryExpression",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceUnaryExpression",this).apply(this,arguments);return r.operator==="delete"&&r.operand.type==="IdentifierExpression"&&(a=a.addStrictError(new _earlyErrorState.EarlyError(r,"Identifier expressions must not be deleted in strict mode"))),a}},{key:"reduceScript",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceScript",this).apply(this,arguments);return a=a.enforceDuplicateLexicallyDeclaredNames(DUPLICATE_BINDING),a=a.enforceConflictingLexicallyDeclaredNames(a.varDeclaredNames,DUPLICATE_BINDING),a.newTargetExpressions.forEach(function(s){a=a.addError(new _earlyErrorState.EarlyError(s,"new.target must be within function (but not arrow expression) code"))}),a=a.enforceFreeContinueStatementErrors(FREE_CONTINUE),a=a.enforceFreeLabeledContinueStatementErrors(UNBOUND_CONTINUE),a=a.enforceFreeBreakStatementErrors(FREE_BREAK),a=a.enforceFreeLabeledBreakStatementErrors(UNBOUND_BREAK),a=a.enforceSuperCallExpressions(SUPERCALL_ERROR),a=a.enforceSuperPropertyExpressions(SUPERPROPERTY_ERROR),isStrictFunctionBody(r)&&(a=a.enforceStrictErrors()),a}},{key:"reduceSetter",value:function(r,a){var s=a.name,o=a.param,c=a.body,l=r.param.type==="BindingIdentifier";o=o.observeLexicalDeclaration(),o=o.enforceDuplicateLexicallyDeclaredNames(DUPLICATE_BINDING),c=c.enforceConflictingLexicallyDeclaredNames(o.lexicallyDeclaredNames,DUPLICATE_BINDING),o=o.enforceSuperCallExpressions(SUPERCALL_ERROR),c=c.enforceSuperCallExpressions(SUPERCALL_ERROR),o=o.clearSuperPropertyExpressions(),c=c.clearSuperPropertyExpressions(),o=o.clearNewTargetExpressions(),c=c.clearNewTargetExpressions(),isStrictFunctionBody(r.body)&&(o=o.enforceStrictErrors(),c=c.enforceStrictErrors());var m=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceSetter",this).call(this,r,{name:s,param:o,body:c});return!l&&isStrictFunctionBody(r.body)&&(m=m.addError(new _earlyErrorState.EarlyError(r,'Functions with non-simple parameter lists may not contain a "use strict" directive'))),m=m.observeVarBoundary(),m}},{key:"reduceStaticMemberExpression",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceStaticMemberExpression",this).apply(this,arguments);return r.object.type==="Super"&&(a=a.observeSuperPropertyExpression(r)),a}},{key:"reduceSwitchStatement",value:function(r,a){var s=a.discriminant,o=a.cases,c=this.append.apply(this,_toConsumableArray$3(o));c=c.functionDeclarationNamesAreLexical(),c=c.enforceDuplicateLexicallyDeclaredNames(DUPLICATE_BINDING),c=c.enforceConflictingLexicallyDeclaredNames(c.varDeclaredNames,DUPLICATE_BINDING),c=c.observeLexicalBoundary();var l=this.append(s,c);return l=l.clearFreeBreakStatements(),l}},{key:"reduceSwitchStatementWithDefault",value:function(r,a){var s=a.discriminant,o=a.preDefaultCases,c=a.defaultCase,l=a.postDefaultCases,m=this.append.apply(this,[c].concat(_toConsumableArray$3(o),_toConsumableArray$3(l)));m=m.functionDeclarationNamesAreLexical(),m=m.enforceDuplicateLexicallyDeclaredNames(DUPLICATE_BINDING),m=m.enforceConflictingLexicallyDeclaredNames(m.varDeclaredNames,DUPLICATE_BINDING),m=m.observeLexicalBoundary();var E=this.append(s,m);return E=E.clearFreeBreakStatements(),E}},{key:"reduceVariableDeclaration",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceVariableDeclaration",this).apply(this,arguments);switch(r.kind){case"const":case"let":{a=a.observeLexicalDeclaration(),a.lexicallyDeclaredNames.has("let")&&a.lexicallyDeclaredNames.get("let").forEach(function(s){a=a.addError(new _earlyErrorState.EarlyError(s,'Lexical declarations must not have a binding named "let"'))});break}case"var":a=a.observeVarDeclaration();break}return a}},{key:"reduceVariableDeclarationStatement",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceVariableDeclarationStatement",this).apply(this,arguments);return r.declaration.kind==="const"&&r.declaration.declarators.forEach(function(s){s.init==null&&(a=a.addError(new _earlyErrorState.EarlyError(s,"Constant lexical declarations must have an initialiser")))}),a}},{key:"reduceWhileStatement",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceWhileStatement",this).apply(this,arguments);return isLabelledFunction(r.body)&&(a=a.addError(new _earlyErrorState.EarlyError(r.body,"The body of a while statement must not be a labeled function declaration"))),a=a.clearFreeContinueStatements().clearFreeBreakStatements(),a}},{key:"reduceWithStatement",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceWithStatement",this).apply(this,arguments);return isLabelledFunction(r.body)&&(a=a.addError(new _earlyErrorState.EarlyError(r.body,"The body of a with statement must not be a labeled function declaration"))),a=a.addStrictError(new _earlyErrorState.EarlyError(r,"Strict mode code must not include a with statement")),a}},{key:"reduceYieldExpression",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceYieldExpression",this).apply(this,arguments);return a=a.observeYieldExpression(r),a}},{key:"reduceYieldGeneratorExpression",value:function(r){var a=_get$1(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"reduceYieldGeneratorExpression",this).apply(this,arguments);return a=a.observeYieldExpression(r),a}}],[{key:"check",value:function(r){return(0,_shiftReducer2.default)(new n,r).errors}}]),n}(_shiftReducer$1.MonoidalReducer);const earlyErrors=_mergeNamespaces({__proto__:null,get EarlyErrorChecker(){return EarlyErrorChecker_1},default:earlyErrors$1},[earlyErrors$1]),require$$2$2=getAugmentedNamespace(earlyErrors);(function(u){Object.defineProperty(u,"__esModule",{value:!0}),u.TokenType=u.TokenClass=u.Tokenizer=u.ParserWithLocation=u.GenericParser=u.EarlyErrorChecker=u.parseScriptWithLocation=u.parseModuleWithLocation=u.parseScript=u.parseModule=void 0;var n=function(){function g(D,x){for(var k=0;k<x.length;k++){var N=x[k];N.enumerable=N.enumerable||!1,N.configurable=!0,"value"in N&&(N.writable=!0),Object.defineProperty(D,N.key,N)}}return function(D,x,k){return x&&g(D.prototype,x),k&&g(D,k),D}}(),e=function g(D,x,k){D===null&&(D=Function.prototype);var N=Object.getOwnPropertyDescriptor(D,x);if(N===void 0){var j=Object.getPrototypeOf(D);return j===null?void 0:g(j,x,k)}else{if("value"in N)return N.value;var O=N.get;return O===void 0?void 0:O.call(k)}},r=require$$0$9;Object.defineProperty(u,"Tokenizer",{enumerable:!0,get:function(){return c(r).default}}),Object.defineProperty(u,"TokenClass",{enumerable:!0,get:function(){return r.TokenClass}}),Object.defineProperty(u,"TokenType",{enumerable:!0,get:function(){return r.TokenType}});var a=require$$1$4,s=require$$2$2,o=require$$3$5;function c(g){return g&&g.__esModule?g:{default:g}}function l(g,D){if(!(g instanceof D))throw new TypeError("Cannot call a class as a function")}function m(g,D){if(!g)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return D&&(typeof D=="object"||typeof D=="function")?D:g}function E(g,D){if(typeof D!="function"&&D!==null)throw new TypeError("Super expression must either be null or a function, not "+typeof D);g.prototype=Object.create(D&&D.prototype,{constructor:{value:g,enumerable:!1,writable:!0,configurable:!0}}),D&&(Object.setPrototypeOf?Object.setPrototypeOf(g,D):g.__proto__=D)}var A=function(g){E(D,g);function D(x){l(this,D);var k=m(this,(D.__proto__||Object.getPrototypeOf(D)).call(this,x));return k.locations=new WeakMap,k.comments=[],k}return n(D,[{key:"startNode",value:function(){return this.getLocation()}},{key:"finishNode",value:function(k,N){if(k.type==="Script"||k.type==="Module")return this.locations.set(k,{start:{line:1,column:0,offset:0},end:this.getLocation()}),k;if(k.type==="TemplateExpression")for(var j=0;j<k.elements.length;j+=2){var O=j<k.elements.length-1?2:1,$=k.elements[j],R=this.locations.get($);this.locations.set($,{start:{line:R.start.line,column:R.start.column+1,offset:R.start.offset+1},end:{line:R.end.line,column:R.end.column-O,offset:R.end.offset-O}})}return this.locations.set(k,{start:N,end:this.getLastTokenEndLocation()}),k}},{key:"copyNode",value:function(k,N){return this.locations.set(N,this.locations.get(k)),N}},{key:"skipSingleLineComment",value:function(k){var N={line:this.line+1,column:this.index-this.lineStart,offset:this.index},j=this.source[this.index],O=j==="/"?"SingleLine":j==="<"?"HTMLOpen":"HTMLClose";e(D.prototype.__proto__||Object.getPrototypeOf(D.prototype),"skipSingleLineComment",this).call(this,k);var $={line:this.line+1,column:this.index-this.lineStart,offset:this.index},R=this.source[this.index-2]==="\r"?2:(0,o.isLineTerminator)(this.source.charCodeAt(this.index-1))?1:0,B=this.source.substring(N.offset+k,$.offset-R);this.comments.push({text:B,type:O,start:N,end:$})}},{key:"skipMultiLineComment",value:function(){var k={line:this.line+1,column:this.index-this.lineStart,offset:this.index},N="MultiLine",j=e(D.prototype.__proto__||Object.getPrototypeOf(D.prototype),"skipMultiLineComment",this).call(this),O={line:this.line+1,column:this.index-this.lineStart,offset:this.index},$=this.source.substring(k.offset+2,O.offset-2);return this.comments.push({text:$,type:N,start:k,end:O}),j}}]),D}(a.GenericParser);function _(g){return function(x){var k=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},N=k.earlyErrors,j=N===void 0?!0:N,O=new a.GenericParser(x),$=O[g]();if(j){var R=s.EarlyErrorChecker.check($);if(R.length>0)throw new r.JsError(0,1,0,R[0].message)}return $}}function v(g){return function(x){var k=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},N=k.earlyErrors,j=N===void 0?!0:N,O=new A(x),$=O[g]();if(j){var R=s.EarlyErrorChecker.check($);if(R.length>0){var B=R[0],b=B.node,G=B.message,U=O.locations.get(b).start,L=U.offset,w=U.line,K=U.column;throw new r.JsError(L,w,K,G)}}return{tree:$,locations:O.locations,comments:O.comments}}}u.parseModule=_("parseModule");var S=u.parseScript=_("parseScript");u.parseModuleWithLocation=v("parseModule"),u.parseScriptWithLocation=v("parseScript"),u.default=S,u.EarlyErrorChecker=s.EarlyErrorChecker,u.GenericParser=a.GenericParser,u.ParserWithLocation=A})(dist$b);var dist$2={};Object.defineProperty(dist$2,"__esModule",{value:!0});var _default$2=dist$2.default=function(){var u={},n={typeName:"Boolean"},e={typeName:"Number"},r={typeName:"String"};function a(Te){return{typeName:"Maybe",argument:Te}}function s(Te){return{typeName:"List",argument:Te}}function o(Te){return{typeName:"Const",argument:Te}}function c(){return{typeName:"Union",arguments:[].slice.call(arguments,0)}}var l={typeName:"Enum",values:["ArrayAssignmentTarget","ArrayBinding","ArrayExpression","ArrowExpression","AssignmentExpression","AssignmentTargetIdentifier","AssignmentTargetPropertyIdentifier","AssignmentTargetPropertyProperty","AssignmentTargetWithDefault","AwaitExpression","BinaryExpression","BindingIdentifier","BindingPropertyIdentifier","BindingPropertyProperty","BindingWithDefault","Block","BlockStatement","BreakStatement","CallExpression","CatchClause","ClassDeclaration","ClassElement","ClassExpression","CompoundAssignmentExpression","ComputedMemberAssignmentTarget","ComputedMemberExpression","ComputedPropertyName","ConditionalExpression","ContinueStatement","DataProperty","DebuggerStatement","Directive","DoWhileStatement","EmptyStatement","Export","ExportAllFrom","ExportDefault","ExportFrom","ExportFromSpecifier","ExportLocalSpecifier","ExportLocals","ExpressionStatement","ForAwaitStatement","ForInStatement","ForOfStatement","ForStatement","FormalParameters","FunctionBody","FunctionDeclaration","FunctionExpression","Getter","IdentifierExpression","IfStatement","Import","ImportNamespace","ImportSpecifier","LabeledStatement","LiteralBooleanExpression","LiteralInfinityExpression","LiteralNullExpression","LiteralNumericExpression","LiteralRegExpExpression","LiteralStringExpression","Method","Module","NewExpression","NewTargetExpression","ObjectAssignmentTarget","ObjectBinding","ObjectExpression","ReturnStatement","Script","Setter","ShorthandProperty","SpreadElement","SpreadProperty","StaticMemberAssignmentTarget","StaticMemberExpression","StaticPropertyName","Super","SwitchCase","SwitchDefault","SwitchStatement","SwitchStatementWithDefault","TemplateElement","TemplateExpression","ThisExpression","ThrowStatement","TryCatchStatement","TryFinallyStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarationStatement","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","YieldGeneratorExpression"]},m={typeName:"Enum",values:["==","!=","===","!==","<","<=",">",">=","in","instanceof","<<",">>",">>>","+","-","*","/","%","**",",","||","&&","|","^","&"]},E={typeName:"Enum",values:["+=","-=","*=","/=","%=","**=","<<=",">>=",">>>=","|=","^=","&="]},A={typeName:"Enum",values:["+","-","!","~","typeof","void","delete"]},_={typeName:"Enum",values:["++","--"]},v={typeName:"Enum",values:["var","let","const"]},S=u.ArrayAssignmentTarget={},g=u.ArrayBinding={},D=u.ArrayExpression={},x=u.ArrowExpression={},k=u.AssignmentExpression={},N=u.AssignmentTargetIdentifier={},j=u.AssignmentTargetPropertyIdentifier={},O=u.AssignmentTargetPropertyProperty={},$=u.AssignmentTargetWithDefault={},R=u.AwaitExpression={},B=u.BinaryExpression={},b=u.BindingIdentifier={},G=u.BindingPropertyIdentifier={},U=u.BindingPropertyProperty={},L=u.BindingWithDefault={},w=u.Block={},K=u.BlockStatement={},Z=u.BreakStatement={},Q=u.CallExpression={},X=u.CatchClause={},J=u.ClassDeclaration={},re=u.ClassElement={},ae=u.ClassExpression={},Ee=u.CompoundAssignmentExpression={},he=u.ComputedMemberAssignmentTarget={},de=u.ComputedMemberExpression={},Ce=u.ComputedPropertyName={},oe=u.ConditionalExpression={},ye=u.ContinueStatement={},Be=u.DataProperty={},Ke=u.DebuggerStatement={},ge=u.Directive={},Xe=u.DoWhileStatement={},be=u.EmptyStatement={},Je=u.Export={},ke=u.ExportAllFrom={},Qe=u.ExportDefault={},$e=u.ExportFrom={},Ie=u.ExportFromSpecifier={},Oe=u.ExportLocalSpecifier={},Pe=u.ExportLocals={},Ze=u.ExpressionStatement={},et=u.ForAwaitStatement={},tt=u.ForInStatement={},rt=u.ForOfStatement={},Ne=u.ForStatement={},De=u.FormalParameters={},ce=u.FunctionBody={},_e=u.FunctionDeclaration={},Re=u.FunctionExpression={},nt=u.Getter={},Se=u.IdentifierExpression={},it=u.IfStatement={},at=u.Import={},ut=u.ImportNamespace={},xe=u.ImportSpecifier={},we=u.LabeledStatement={},st=u.LiteralBooleanExpression={},ot=u.LiteralInfinityExpression={},ct=u.LiteralNullExpression={},lt=u.LiteralNumericExpression={},pt=u.LiteralRegExpExpression={},ht=u.LiteralStringExpression={},dt=u.Method={},mt=u.Module={},ft=u.NewExpression={},Et=u.NewTargetExpression={},ue=u.ObjectAssignmentTarget={},ne=u.ObjectBinding={},yt=u.ObjectExpression={},Dt=u.ReturnStatement={},At=u.Script={},Ct=u.Setter={},gt=u.ShorthandProperty={},Fe=u.SpreadElement={},_t=u.SpreadProperty={},Le=u.StaticMemberAssignmentTarget={},St=u.StaticMemberExpression={},Ft=u.StaticPropertyName={},me=u.Super={},ve=u.SwitchCase={},Me=u.SwitchDefault={},vt=u.SwitchStatement={},xt=u.SwitchStatementWithDefault={},We=u.TemplateElement={},Tt=u.TemplateExpression={},Bt=u.ThisExpression={},bt=u.ThrowStatement={},kt=u.TryCatchStatement={},$t=u.TryFinallyStatement={},It=u.UnaryExpression={},Ot=u.UpdateExpression={},le=u.VariableDeclaration={},Pt=u.VariableDeclarationStatement={},je=u.VariableDeclarator={},Nt=u.WhileStatement={},Rt=u.WithStatement={},wt=u.YieldExpression={},Lt=u.YieldGeneratorExpression={},Kt=c(de,St),Wt=c(j,O);c(J,ae);var jt=c(Je,ke,Qe,$e,Pe),Ae=c(Ce,Ft);c(_e,Re);var qt=c(at,ut),Xt=c(Xe,et,tt,rt,Ne,Nt),se=c(he,Le),Gt=c(G,U),Mt=c(nt,dt,Ct),Jt=c(mt,At),Qt=c(N,b,Se),Zt=c(Be,Mt),M=c(D,x,k,R,B,Q,ae,Ee,oe,Re,Se,st,ot,ct,lt,pt,ht,Kt,ft,Et,yt,Tt,Bt,It,Ot,wt,Lt),te=c(K,Z,J,ye,Ke,be,Ze,_e,it,Xt,we,Dt,vt,xt,bt,kt,$t,Pt,Rt),Ut=c(Zt,gt,_t);return c(S,g,Wt,$,Gt,L,w,X,re,ge,jt,Ie,Oe,M,De,ce,qt,xe,se,ue,ne,Ut,Jt,Ae,Fe,te,me,ve,Me,We,le,je,Qt),S.typeName="ArrayAssignmentTarget",S.fields=[{name:"type",type:o(l),value:"ArrayAssignmentTarget"},{name:"elements",type:s(a(c($,c(c(S,ue),c(N,se)))))},{name:"rest",type:a(c(c(S,ue),c(N,se)))}],g.typeName="ArrayBinding",g.fields=[{name:"type",type:o(l),value:"ArrayBinding"},{name:"elements",type:s(a(c(L,c(b,c(g,ne)))))},{name:"rest",type:a(c(b,c(g,ne)))}],D.typeName="ArrayExpression",D.fields=[{name:"type",type:o(l),value:"ArrayExpression"},{name:"elements",type:s(a(c(M,Fe)))}],x.typeName="ArrowExpression",x.fields=[{name:"type",type:o(l),value:"ArrowExpression"},{name:"isAsync",type:n},{name:"params",type:De},{name:"body",type:c(M,ce)}],k.typeName="AssignmentExpression",k.fields=[{name:"type",type:o(l),value:"AssignmentExpression"},{name:"binding",type:c(c(S,ue),c(N,se))},{name:"expression",type:M}],N.typeName="AssignmentTargetIdentifier",N.fields=[{name:"type",type:o(l),value:"AssignmentTargetIdentifier"},{name:"name",type:r}],j.typeName="AssignmentTargetPropertyIdentifier",j.fields=[{name:"type",type:o(l),value:"AssignmentTargetPropertyIdentifier"},{name:"binding",type:N},{name:"init",type:a(M)}],O.typeName="AssignmentTargetPropertyProperty",O.fields=[{name:"type",type:o(l),value:"AssignmentTargetPropertyProperty"},{name:"name",type:Ae},{name:"binding",type:c($,c(c(S,ue),c(N,se)))}],$.typeName="AssignmentTargetWithDefault",$.fields=[{name:"type",type:o(l),value:"AssignmentTargetWithDefault"},{name:"binding",type:c(c(S,ue),c(N,se))},{name:"init",type:M}],R.typeName="AwaitExpression",R.fields=[{name:"type",type:o(l),value:"AwaitExpression"},{name:"expression",type:M}],B.typeName="BinaryExpression",B.fields=[{name:"type",type:o(l),value:"BinaryExpression"},{name:"left",type:M},{name:"operator",type:m},{name:"right",type:M}],b.typeName="BindingIdentifier",b.fields=[{name:"type",type:o(l),value:"BindingIdentifier"},{name:"name",type:r}],G.typeName="BindingPropertyIdentifier",G.fields=[{name:"type",type:o(l),value:"BindingPropertyIdentifier"},{name:"binding",type:b},{name:"init",type:a(M)}],U.typeName="BindingPropertyProperty",U.fields=[{name:"type",type:o(l),value:"BindingPropertyProperty"},{name:"name",type:Ae},{name:"binding",type:c(L,c(b,c(g,ne)))}],L.typeName="BindingWithDefault",L.fields=[{name:"type",type:o(l),value:"BindingWithDefault"},{name:"binding",type:c(b,c(g,ne))},{name:"init",type:M}],w.typeName="Block",w.fields=[{name:"type",type:o(l),value:"Block"},{name:"statements",type:s(te)}],K.typeName="BlockStatement",K.fields=[{name:"type",type:o(l),value:"BlockStatement"},{name:"block",type:w}],Z.typeName="BreakStatement",Z.fields=[{name:"type",type:o(l),value:"BreakStatement"},{name:"label",type:a(r)}],Q.typeName="CallExpression",Q.fields=[{name:"type",type:o(l),value:"CallExpression"},{name:"callee",type:c(M,me)},{name:"arguments",type:s(c(M,Fe))}],X.typeName="CatchClause",X.fields=[{name:"type",type:o(l),value:"CatchClause"},{name:"binding",type:c(b,c(g,ne))},{name:"body",type:w}],J.typeName="ClassDeclaration",J.fields=[{name:"type",type:o(l),value:"ClassDeclaration"},{name:"name",type:b},{name:"super",type:a(M)},{name:"elements",type:s(re)}],re.typeName="ClassElement",re.fields=[{name:"type",type:o(l),value:"ClassElement"},{name:"isStatic",type:n},{name:"method",type:Mt}],ae.typeName="ClassExpression",ae.fields=[{name:"type",type:o(l),value:"ClassExpression"},{name:"name",type:a(b)},{name:"super",type:a(M)},{name:"elements",type:s(re)}],Ee.typeName="CompoundAssignmentExpression",Ee.fields=[{name:"type",type:o(l),value:"CompoundAssignmentExpression"},{name:"binding",type:c(N,se)},{name:"operator",type:E},{name:"expression",type:M}],he.typeName="ComputedMemberAssignmentTarget",he.fields=[{name:"type",type:o(l),value:"ComputedMemberAssignmentTarget"},{name:"object",type:c(M,me)},{name:"expression",type:M}],de.typeName="ComputedMemberExpression",de.fields=[{name:"type",type:o(l),value:"ComputedMemberExpression"},{name:"object",type:c(M,me)},{name:"expression",type:M}],Ce.typeName="ComputedPropertyName",Ce.fields=[{name:"type",type:o(l),value:"ComputedPropertyName"},{name:"expression",type:M}],oe.typeName="ConditionalExpression",oe.fields=[{name:"type",type:o(l),value:"ConditionalExpression"},{name:"test",type:M},{name:"consequent",type:M},{name:"alternate",type:M}],ye.typeName="ContinueStatement",ye.fields=[{name:"type",type:o(l),value:"ContinueStatement"},{name:"label",type:a(r)}],Be.typeName="DataProperty",Be.fields=[{name:"type",type:o(l),value:"DataProperty"},{name:"name",type:Ae},{name:"expression",type:M}],Ke.typeName="DebuggerStatement",Ke.fields=[{name:"type",type:o(l),value:"DebuggerStatement"}],ge.typeName="Directive",ge.fields=[{name:"type",type:o(l),value:"Directive"},{name:"rawValue",type:r}],Xe.typeName="DoWhileStatement",Xe.fields=[{name:"type",type:o(l),value:"DoWhileStatement"},{name:"body",type:te},{name:"test",type:M}],be.typeName="EmptyStatement",be.fields=[{name:"type",type:o(l),value:"EmptyStatement"}],Je.typeName="Export",Je.fields=[{name:"type",type:o(l),value:"Export"},{name:"declaration",type:c(J,_e,le)}],ke.typeName="ExportAllFrom",ke.fields=[{name:"type",type:o(l),value:"ExportAllFrom"},{name:"moduleSpecifier",type:r}],Qe.typeName="ExportDefault",Qe.fields=[{name:"type",type:o(l),value:"ExportDefault"},{name:"body",type:c(J,M,_e)}],$e.typeName="ExportFrom",$e.fields=[{name:"type",type:o(l),value:"ExportFrom"},{name:"namedExports",type:s(Ie)},{name:"moduleSpecifier",type:r}],Ie.typeName="ExportFromSpecifier",Ie.fields=[{name:"type",type:o(l),value:"ExportFromSpecifier"},{name:"name",type:r},{name:"exportedName",type:a(r)}],Oe.typeName="ExportLocalSpecifier",Oe.fields=[{name:"type",type:o(l),value:"ExportLocalSpecifier"},{name:"name",type:Se},{name:"exportedName",type:a(r)}],Pe.typeName="ExportLocals",Pe.fields=[{name:"type",type:o(l),value:"ExportLocals"},{name:"namedExports",type:s(Oe)}],Ze.typeName="ExpressionStatement",Ze.fields=[{name:"type",type:o(l),value:"ExpressionStatement"},{name:"expression",type:M}],et.typeName="ForAwaitStatement",et.fields=[{name:"type",type:o(l),value:"ForAwaitStatement"},{name:"left",type:c(c(c(S,ue),c(N,se)),le)},{name:"right",type:M},{name:"body",type:te}],tt.typeName="ForInStatement",tt.fields=[{name:"type",type:o(l),value:"ForInStatement"},{name:"left",type:c(c(c(S,ue),c(N,se)),le)},{name:"right",type:M},{name:"body",type:te}],rt.typeName="ForOfStatement",rt.fields=[{name:"type",type:o(l),value:"ForOfStatement"},{name:"left",type:c(c(c(S,ue),c(N,se)),le)},{name:"right",type:M},{name:"body",type:te}],Ne.typeName="ForStatement",Ne.fields=[{name:"type",type:o(l),value:"ForStatement"},{name:"init",type:a(c(M,le))},{name:"test",type:a(M)},{name:"update",type:a(M)},{name:"body",type:te}],De.typeName="FormalParameters",De.fields=[{name:"type",type:o(l),value:"FormalParameters"},{name:"items",type:s(c(L,c(b,c(g,ne))))},{name:"rest",type:a(c(b,c(g,ne)))}],ce.typeName="FunctionBody",ce.fields=[{name:"type",type:o(l),value:"FunctionBody"},{name:"directives",type:s(ge)},{name:"statements",type:s(te)}],_e.typeName="FunctionDeclaration",_e.fields=[{name:"type",type:o(l),value:"FunctionDeclaration"},{name:"isAsync",type:n},{name:"isGenerator",type:n},{name:"name",type:b},{name:"params",type:De},{name:"body",type:ce}],Re.typeName="FunctionExpression",Re.fields=[{name:"type",type:o(l),value:"FunctionExpression"},{name:"isAsync",type:n},{name:"isGenerator",type:n},{name:"name",type:a(b)},{name:"params",type:De},{name:"body",type:ce}],nt.typeName="Getter",nt.fields=[{name:"type",type:o(l),value:"Getter"},{name:"name",type:Ae},{name:"body",type:ce}],Se.typeName="IdentifierExpression",Se.fields=[{name:"type",type:o(l),value:"IdentifierExpression"},{name:"name",type:r}],it.typeName="IfStatement",it.fields=[{name:"type",type:o(l),value:"IfStatement"},{name:"test",type:M},{name:"consequent",type:te},{name:"alternate",type:a(te)}],at.typeName="Import",at.fields=[{name:"type",type:o(l),value:"Import"},{name:"defaultBinding",type:a(b)},{name:"namedImports",type:s(xe)},{name:"moduleSpecifier",type:r}],ut.typeName="ImportNamespace",ut.fields=[{name:"type",type:o(l),value:"ImportNamespace"},{name:"defaultBinding",type:a(b)},{name:"namespaceBinding",type:b},{name:"moduleSpecifier",type:r}],xe.typeName="ImportSpecifier",xe.fields=[{name:"type",type:o(l),value:"ImportSpecifier"},{name:"name",type:a(r)},{name:"binding",type:b}],we.typeName="LabeledStatement",we.fields=[{name:"type",type:o(l),value:"LabeledStatement"},{name:"label",type:r},{name:"body",type:te}],st.typeName="LiteralBooleanExpression",st.fields=[{name:"type",type:o(l),value:"LiteralBooleanExpression"},{name:"value",type:n}],ot.typeName="LiteralInfinityExpression",ot.fields=[{name:"type",type:o(l),value:"LiteralInfinityExpression"}],ct.typeName="LiteralNullExpression",ct.fields=[{name:"type",type:o(l),value:"LiteralNullExpression"}],lt.typeName="LiteralNumericExpression",lt.fields=[{name:"type",type:o(l),value:"LiteralNumericExpression"},{name:"value",type:e}],pt.typeName="LiteralRegExpExpression",pt.fields=[{name:"type",type:o(l),value:"LiteralRegExpExpression"},{name:"pattern",type:r},{name:"global",type:n},{name:"ignoreCase",type:n},{name:"multiLine",type:n},{name:"dotAll",type:n},{name:"unicode",type:n},{name:"sticky",type:n}],ht.typeName="LiteralStringExpression",ht.fields=[{name:"type",type:o(l),value:"LiteralStringExpression"},{name:"value",type:r}],dt.typeName="Method",dt.fields=[{name:"type",type:o(l),value:"Method"},{name:"isAsync",type:n},{name:"isGenerator",type:n},{name:"name",type:Ae},{name:"params",type:De},{name:"body",type:ce}],mt.typeName="Module",mt.fields=[{name:"type",type:o(l),value:"Module"},{name:"directives",type:s(ge)},{name:"items",type:s(c(jt,qt,te))}],ft.typeName="NewExpression",ft.fields=[{name:"type",type:o(l),value:"NewExpression"},{name:"callee",type:M},{name:"arguments",type:s(c(M,Fe))}],Et.typeName="NewTargetExpression",Et.fields=[{name:"type",type:o(l),value:"NewTargetExpression"}],ue.typeName="ObjectAssignmentTarget",ue.fields=[{name:"type",type:o(l),value:"ObjectAssignmentTarget"},{name:"properties",type:s(Wt)},{name:"rest",type:a(c(c(S,ue),c(N,se)))}],ne.typeName="ObjectBinding",ne.fields=[{name:"type",type:o(l),value:"ObjectBinding"},{name:"properties",type:s(Gt)},{name:"rest",type:a(c(b,c(g,ne)))}],yt.typeName="ObjectExpression",yt.fields=[{name:"type",type:o(l),value:"ObjectExpression"},{name:"properties",type:s(Ut)}],Dt.typeName="ReturnStatement",Dt.fields=[{name:"type",type:o(l),value:"ReturnStatement"},{name:"expression",type:a(M)}],At.typeName="Script",At.fields=[{name:"type",type:o(l),value:"Script"},{name:"directives",type:s(ge)},{name:"statements",type:s(te)}],Ct.typeName="Setter",Ct.fields=[{name:"type",type:o(l),value:"Setter"},{name:"name",type:Ae},{name:"param",type:c(L,c(b,c(g,ne)))},{name:"body",type:ce}],gt.typeName="ShorthandProperty",gt.fields=[{name:"type",type:o(l),value:"ShorthandProperty"},{name:"name",type:Se}],Fe.typeName="SpreadElement",Fe.fields=[{name:"type",type:o(l),value:"SpreadElement"},{name:"expression",type:M}],_t.typeName="SpreadProperty",_t.fields=[{name:"type",type:o(l),value:"SpreadProperty"},{name:"expression",type:M}],Le.typeName="StaticMemberAssignmentTarget",Le.fields=[{name:"type",type:o(l),value:"StaticMemberAssignmentTarget"},{name:"object",type:c(M,me)},{name:"property",type:r}],St.typeName="StaticMemberExpression",St.fields=[{name:"type",type:o(l),value:"StaticMemberExpression"},{name:"object",type:c(M,me)},{name:"property",type:r}],Ft.typeName="StaticPropertyName",Ft.fields=[{name:"type",type:o(l),value:"StaticPropertyName"},{name:"value",type:r}],me.typeName="Super",me.fields=[{name:"type",type:o(l),value:"Super"}],ve.typeName="SwitchCase",ve.fields=[{name:"type",type:o(l),value:"SwitchCase"},{name:"test",type:M},{name:"consequent",type:s(te)}],Me.typeName="SwitchDefault",Me.fields=[{name:"type",type:o(l),value:"SwitchDefault"},{name:"consequent",type:s(te)}],vt.typeName="SwitchStatement",vt.fields=[{name:"type",type:o(l),value:"SwitchStatement"},{name:"discriminant",type:M},{name:"cases",type:s(ve)}],xt.typeName="SwitchStatementWithDefault",xt.fields=[{name:"type",type:o(l),value:"SwitchStatementWithDefault"},{name:"discriminant",type:M},{name:"preDefaultCases",type:s(ve)},{name:"defaultCase",type:Me},{name:"postDefaultCases",type:s(ve)}],We.typeName="TemplateElement",We.fields=[{name:"type",type:o(l),value:"TemplateElement"},{name:"rawValue",type:r}],Tt.typeName="TemplateExpression",Tt.fields=[{name:"type",type:o(l),value:"TemplateExpression"},{name:"tag",type:a(M)},{name:"elements",type:s(c(M,We))}],Bt.typeName="ThisExpression",Bt.fields=[{name:"type",type:o(l),value:"ThisExpression"}],bt.typeName="ThrowStatement",bt.fields=[{name:"type",type:o(l),value:"ThrowStatement"},{name:"expression",type:M}],kt.typeName="TryCatchStatement",kt.fields=[{name:"type",type:o(l),value:"TryCatchStatement"},{name:"body",type:w},{name:"catchClause",type:X}],$t.typeName="TryFinallyStatement",$t.fields=[{name:"type",type:o(l),value:"TryFinallyStatement"},{name:"body",type:w},{name:"catchClause",type:a(X)},{name:"finalizer",type:w}],It.typeName="UnaryExpression",It.fields=[{name:"type",type:o(l),value:"UnaryExpression"},{name:"operator",type:A},{name:"operand",type:M}],Ot.typeName="UpdateExpression",Ot.fields=[{name:"type",type:o(l),value:"UpdateExpression"},{name:"isPrefix",type:n},{name:"operator",type:_},{name:"operand",type:c(N,se)}],le.typeName="VariableDeclaration",le.fields=[{name:"type",type:o(l),value:"VariableDeclaration"},{name:"kind",type:v},{name:"declarators",type:s(je)}],Pt.typeName="VariableDeclarationStatement",Pt.fields=[{name:"type",type:o(l),value:"VariableDeclarationStatement"},{name:"declaration",type:le}],je.typeName="VariableDeclarator",je.fields=[{name:"type",type:o(l),value:"VariableDeclarator"},{name:"binding",type:c(b,c(g,ne))},{name:"init",type:a(M)}],Nt.typeName="WhileStatement",Nt.fields=[{name:"type",type:o(l),value:"WhileStatement"},{name:"test",type:M},{name:"body",type:te}],Rt.typeName="WithStatement",Rt.fields=[{name:"type",type:o(l),value:"WithStatement"},{name:"object",type:M},{name:"body",type:te}],wt.typeName="YieldExpression",wt.fields=[{name:"type",type:o(l),value:"YieldExpression"},{name:"expression",type:a(M)}],Lt.typeName="YieldGeneratorExpression",Lt.fields=[{name:"type",type:o(l),value:"YieldGeneratorExpression"},{name:"expression",type:M}],u}(),estraverse$1={};(function(u){(function n(e){var r,a,s,o,c,l;function m(O){var $={},R,B;for(R in O)O.hasOwnProperty(R)&&(B=O[R],typeof B=="object"&&B!==null?$[R]=m(B):$[R]=B);return $}function E(O,$){var R,B,b,G;for(B=O.length,b=0;B;)R=B>>>1,G=b+R,$(O[G])?B=R:(b=G+1,B-=R+1);return b}r={AssignmentExpression:"AssignmentExpression",AssignmentPattern:"AssignmentPattern",ArrayExpression:"ArrayExpression",ArrayPattern:"ArrayPattern",ArrowFunctionExpression:"ArrowFunctionExpression",AwaitExpression:"AwaitExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ChainExpression:"ChainExpression",ClassBody:"ClassBody",ClassDeclaration:"ClassDeclaration",ClassExpression:"ClassExpression",ComprehensionBlock:"ComprehensionBlock",ComprehensionExpression:"ComprehensionExpression",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DebuggerStatement:"DebuggerStatement",DirectiveStatement:"DirectiveStatement",DoWhileStatement:"DoWhileStatement",EmptyStatement:"EmptyStatement",ExportAllDeclaration:"ExportAllDeclaration",ExportDefaultDeclaration:"ExportDefaultDeclaration",ExportNamedDeclaration:"ExportNamedDeclaration",ExportSpecifier:"ExportSpecifier",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForInStatement:"ForInStatement",ForOfStatement:"ForOfStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",GeneratorExpression:"GeneratorExpression",Identifier:"Identifier",IfStatement:"IfStatement",ImportExpression:"ImportExpression",ImportDeclaration:"ImportDeclaration",ImportDefaultSpecifier:"ImportDefaultSpecifier",ImportNamespaceSpecifier:"ImportNamespaceSpecifier",ImportSpecifier:"ImportSpecifier",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",MetaProperty:"MetaProperty",MethodDefinition:"MethodDefinition",ModuleSpecifier:"ModuleSpecifier",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",ObjectPattern:"ObjectPattern",PrivateIdentifier:"PrivateIdentifier",Program:"Program",Property:"Property",PropertyDefinition:"PropertyDefinition",RestElement:"RestElement",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SpreadElement:"SpreadElement",Super:"Super",SwitchStatement:"SwitchStatement",SwitchCase:"SwitchCase",TaggedTemplateExpression:"TaggedTemplateExpression",TemplateElement:"TemplateElement",TemplateLiteral:"TemplateLiteral",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement",YieldExpression:"YieldExpression"},s={AssignmentExpression:["left","right"],AssignmentPattern:["left","right"],ArrayExpression:["elements"],ArrayPattern:["elements"],ArrowFunctionExpression:["params","body"],AwaitExpression:["argument"],BlockStatement:["body"],BinaryExpression:["left","right"],BreakStatement:["label"],CallExpression:["callee","arguments"],CatchClause:["param","body"],ChainExpression:["expression"],ClassBody:["body"],ClassDeclaration:["id","superClass","body"],ClassExpression:["id","superClass","body"],ComprehensionBlock:["left","right"],ComprehensionExpression:["blocks","filter","body"],ConditionalExpression:["test","consequent","alternate"],ContinueStatement:["label"],DebuggerStatement:[],DirectiveStatement:[],DoWhileStatement:["body","test"],EmptyStatement:[],ExportAllDeclaration:["source"],ExportDefaultDeclaration:["declaration"],ExportNamedDeclaration:["declaration","specifiers","source"],ExportSpecifier:["exported","local"],ExpressionStatement:["expression"],ForStatement:["init","test","update","body"],ForInStatement:["left","right","body"],ForOfStatement:["left","right","body"],FunctionDeclaration:["id","params","body"],FunctionExpression:["id","params","body"],GeneratorExpression:["blocks","filter","body"],Identifier:[],IfStatement:["test","consequent","alternate"],ImportExpression:["source"],ImportDeclaration:["specifiers","source"],ImportDefaultSpecifier:["local"],ImportNamespaceSpecifier:["local"],ImportSpecifier:["imported","local"],Literal:[],LabeledStatement:["label","body"],LogicalExpression:["left","right"],MemberExpression:["object","property"],MetaProperty:["meta","property"],MethodDefinition:["key","value"],ModuleSpecifier:[],NewExpression:["callee","arguments"],ObjectExpression:["properties"],ObjectPattern:["properties"],PrivateIdentifier:[],Program:["body"],Property:["key","value"],PropertyDefinition:["key","value"],RestElement:["argument"],ReturnStatement:["argument"],SequenceExpression:["expressions"],SpreadElement:["argument"],Super:[],SwitchStatement:["discriminant","cases"],SwitchCase:["test","consequent"],TaggedTemplateExpression:["tag","quasi"],TemplateElement:[],TemplateLiteral:["quasis","expressions"],ThisExpression:[],ThrowStatement:["argument"],TryStatement:["block","handler","finalizer"],UnaryExpression:["argument"],UpdateExpression:["argument"],VariableDeclaration:["declarations"],VariableDeclarator:["id","init"],WhileStatement:["test","body"],WithStatement:["object","body"],YieldExpression:["argument"]},o={},c={},l={},a={Break:o,Skip:c,Remove:l};function A(O,$){this.parent=O,this.key=$}A.prototype.replace=function($){this.parent[this.key]=$},A.prototype.remove=function(){return Array.isArray(this.parent)?(this.parent.splice(this.key,1),!0):(this.replace(null),!1)};function _(O,$,R,B){this.node=O,this.path=$,this.wrap=R,this.ref=B}function v(){}v.prototype.path=function(){var $,R,B,b,G,U;function L(w,K){if(Array.isArray(K))for(B=0,b=K.length;B<b;++B)w.push(K[B]);else w.push(K)}if(!this.__current.path)return null;for(G=[],$=2,R=this.__leavelist.length;$<R;++$)U=this.__leavelist[$],L(G,U.path);return L(G,this.__current.path),G},v.prototype.type=function(){var O=this.current();return O.type||this.__current.wrap},v.prototype.parents=function(){var $,R,B;for(B=[],$=1,R=this.__leavelist.length;$<R;++$)B.push(this.__leavelist[$].node);return B},v.prototype.current=function(){return this.__current.node},v.prototype.__execute=function($,R){var B,b;return b=void 0,B=this.__current,this.__current=R,this.__state=null,$&&(b=$.call(this,R.node,this.__leavelist[this.__leavelist.length-1].node)),this.__current=B,b},v.prototype.notify=function($){this.__state=$},v.prototype.skip=function(){this.notify(c)},v.prototype.break=function(){this.notify(o)},v.prototype.remove=function(){this.notify(l)},v.prototype.__initialize=function(O,$){this.visitor=$,this.root=O,this.__worklist=[],this.__leavelist=[],this.__current=null,this.__state=null,this.__fallback=null,$.fallback==="iteration"?this.__fallback=Object.keys:typeof $.fallback=="function"&&(this.__fallback=$.fallback),this.__keys=s,$.keys&&(this.__keys=Object.assign(Object.create(this.__keys),$.keys))};function S(O){return O==null?!1:typeof O=="object"&&typeof O.type=="string"}function g(O,$){return(O===r.ObjectExpression||O===r.ObjectPattern)&&$==="properties"}function D(O,$){for(var R=O.length-1;R>=0;--R)if(O[R].node===$)return!0;return!1}v.prototype.traverse=function($,R){var B,b,G,U,L,w,K,Z,Q,X,J,re;for(this.__initialize($,R),re={},B=this.__worklist,b=this.__leavelist,B.push(new _($,null,null,null)),b.push(new _(null,null,null,null));B.length;){if(G=B.pop(),G===re){if(G=b.pop(),w=this.__execute(R.leave,G),this.__state===o||w===o)return;continue}if(G.node){if(w=this.__execute(R.enter,G),this.__state===o||w===o)return;if(B.push(re),b.push(G),this.__state===c||w===c)continue;if(U=G.node,L=U.type||G.wrap,X=this.__keys[L],!X)if(this.__fallback)X=this.__fallback(U);else throw new Error("Unknown node type "+L+".");for(Z=X.length;(Z-=1)>=0;)if(K=X[Z],J=U[K],!!J){if(Array.isArray(J)){for(Q=J.length;(Q-=1)>=0;)if(!!J[Q]&&!D(b,J[Q])){if(g(L,X[Z]))G=new _(J[Q],[K,Q],"Property",null);else if(S(J[Q]))G=new _(J[Q],[K,Q],null,null);else continue;B.push(G)}}else if(S(J)){if(D(b,J))continue;B.push(new _(J,K,null,null))}}}}},v.prototype.replace=function($,R){var B,b,G,U,L,w,K,Z,Q,X,J,re,ae;function Ee(he){var de,Ce,oe,ye;if(he.ref.remove()){for(Ce=he.ref.key,ye=he.ref.parent,de=B.length;de--;)if(oe=B[de],oe.ref&&oe.ref.parent===ye){if(oe.ref.key<Ce)break;--oe.ref.key}}}for(this.__initialize($,R),J={},B=this.__worklist,b=this.__leavelist,re={root:$},w=new _($,null,null,new A(re,"root")),B.push(w),b.push(w);B.length;){if(w=B.pop(),w===J){if(w=b.pop(),L=this.__execute(R.leave,w),L!==void 0&&L!==o&&L!==c&&L!==l&&w.ref.replace(L),(this.__state===l||L===l)&&Ee(w),this.__state===o||L===o)return re.root;continue}if(L=this.__execute(R.enter,w),L!==void 0&&L!==o&&L!==c&&L!==l&&(w.ref.replace(L),w.node=L),(this.__state===l||L===l)&&(Ee(w),w.node=null),this.__state===o||L===o)return re.root;if(G=w.node,!!G&&(B.push(J),b.push(w),!(this.__state===c||L===c))){if(U=G.type||w.wrap,Q=this.__keys[U],!Q)if(this.__fallback)Q=this.__fallback(G);else throw new Error("Unknown node type "+U+".");for(K=Q.length;(K-=1)>=0;)if(ae=Q[K],X=G[ae],!!X)if(Array.isArray(X)){for(Z=X.length;(Z-=1)>=0;)if(!!X[Z]){if(g(U,Q[K]))w=new _(X[Z],[ae,Z],"Property",new A(X,Z));else if(S(X[Z]))w=new _(X[Z],[ae,Z],null,new A(X,Z));else continue;B.push(w)}}else S(X)&&B.push(new _(X,ae,null,new A(G,ae)))}}return re.root};function x(O,$){var R=new v;return R.traverse(O,$)}function k(O,$){var R=new v;return R.replace(O,$)}function N(O,$){var R;return R=E($,function(b){return b.range[0]>O.range[0]}),O.extendedRange=[O.range[0],O.range[1]],R!==$.length&&(O.extendedRange[1]=$[R].range[0]),R-=1,R>=0&&(O.extendedRange[0]=$[R].range[1]),O}function j(O,$,R){var B=[],b,G,U,L;if(!O.range)throw new Error("attachComments needs range information");if(!R.length){if($.length){for(U=0,G=$.length;U<G;U+=1)b=m($[U]),b.extendedRange=[0,O.range[0]],B.push(b);O.leadingComments=B}return O}for(U=0,G=$.length;U<G;U+=1)B.push(N(m($[U]),R));return L=0,x(O,{enter:function(w){for(var K;L<B.length&&(K=B[L],!(K.extendedRange[1]>w.range[0]));)K.extendedRange[1]===w.range[0]?(w.leadingComments||(w.leadingComments=[]),w.leadingComments.push(K),B.splice(L,1)):L+=1;if(L===B.length)return a.Break;if(B[L].extendedRange[0]>w.range[1])return a.Skip}}),L=0,x(O,{leave:function(w){for(var K;L<B.length&&(K=B[L],!(w.range[1]<K.extendedRange[0]));)w.range[1]===K.extendedRange[0]?(w.trailingComments||(w.trailingComments=[]),w.trailingComments.push(K),B.splice(L,1)):L+=1;if(L===B.length)return a.Break;if(B[L].extendedRange[0]>w.range[1])return a.Skip}}),O}return e.Syntax=r,e.traverse=x,e.replace=k,e.attachComments=j,e.VisitorKeys=s,e.VisitorOption=a,e.Controller=v,e.cloneEnvironment=function(){return n({})},e})(u)})(estraverse$1);const Spec=_default$2.default||_default$2,estraverse=estraverse$1.cloneEnvironment();Object.keys(estraverse.Syntax).filter(u=>u!=="Property").forEach(u=>{delete estraverse.Syntax[u],delete estraverse.VisitorKeys[u]});Object.assign(estraverse.Syntax,Object.keys(Spec).reduce((u,n)=>(u[n]=n,u),{}));Object.assign(estraverse.VisitorKeys,Object.keys(Spec).reduce((u,n)=>(u[n]=Spec[n].fields.map(e=>e.name),u),{}));var dist$1={};Object.defineProperty(dist$1,"__esModule",{value:!0});function _classCallCheck$5(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}dist$1.ArrayAssignmentTarget=function u(n){var e=n.elements,r=n.rest;_classCallCheck$5(this,u),this.type="ArrayAssignmentTarget",this.elements=e,this.rest=r};dist$1.ArrayBinding=function u(n){var e=n.elements,r=n.rest;_classCallCheck$5(this,u),this.type="ArrayBinding",this.elements=e,this.rest=r};dist$1.ArrayExpression=function u(n){var e=n.elements;_classCallCheck$5(this,u),this.type="ArrayExpression",this.elements=e};dist$1.ArrowExpression=function u(n){var e=n.isAsync,r=n.params,a=n.body;_classCallCheck$5(this,u),this.type="ArrowExpression",this.isAsync=e,this.params=r,this.body=a};dist$1.AssignmentExpression=function u(n){var e=n.binding,r=n.expression;_classCallCheck$5(this,u),this.type="AssignmentExpression",this.binding=e,this.expression=r};dist$1.AssignmentTargetIdentifier=function u(n){var e=n.name;_classCallCheck$5(this,u),this.type="AssignmentTargetIdentifier",this.name=e};dist$1.AssignmentTargetPropertyIdentifier=function u(n){var e=n.binding,r=n.init;_classCallCheck$5(this,u),this.type="AssignmentTargetPropertyIdentifier",this.binding=e,this.init=r};dist$1.AssignmentTargetPropertyProperty=function u(n){var e=n.name,r=n.binding;_classCallCheck$5(this,u),this.type="AssignmentTargetPropertyProperty",this.name=e,this.binding=r};dist$1.AssignmentTargetWithDefault=function u(n){var e=n.binding,r=n.init;_classCallCheck$5(this,u),this.type="AssignmentTargetWithDefault",this.binding=e,this.init=r};dist$1.AwaitExpression=function u(n){var e=n.expression;_classCallCheck$5(this,u),this.type="AwaitExpression",this.expression=e};dist$1.BinaryExpression=function u(n){var e=n.left,r=n.operator,a=n.right;_classCallCheck$5(this,u),this.type="BinaryExpression",this.left=e,this.operator=r,this.right=a};dist$1.BindingIdentifier=function u(n){var e=n.name;_classCallCheck$5(this,u),this.type="BindingIdentifier",this.name=e};dist$1.BindingPropertyIdentifier=function u(n){var e=n.binding,r=n.init;_classCallCheck$5(this,u),this.type="BindingPropertyIdentifier",this.binding=e,this.init=r};dist$1.BindingPropertyProperty=function u(n){var e=n.name,r=n.binding;_classCallCheck$5(this,u),this.type="BindingPropertyProperty",this.name=e,this.binding=r};dist$1.BindingWithDefault=function u(n){var e=n.binding,r=n.init;_classCallCheck$5(this,u),this.type="BindingWithDefault",this.binding=e,this.init=r};dist$1.Block=function u(n){var e=n.statements;_classCallCheck$5(this,u),this.type="Block",this.statements=e};dist$1.BlockStatement=function u(n){var e=n.block;_classCallCheck$5(this,u),this.type="BlockStatement",this.block=e};dist$1.BreakStatement=function u(n){var e=n.label;_classCallCheck$5(this,u),this.type="BreakStatement",this.label=e};dist$1.CallExpression=function u(n){var e=n.callee,r=n.arguments;_classCallCheck$5(this,u),this.type="CallExpression",this.callee=e,this.arguments=r};dist$1.CatchClause=function u(n){var e=n.binding,r=n.body;_classCallCheck$5(this,u),this.type="CatchClause",this.binding=e,this.body=r};dist$1.ClassDeclaration=function u(n){var e=n.name,r=n.super,a=n.elements;_classCallCheck$5(this,u),this.type="ClassDeclaration",this.name=e,this.super=r,this.elements=a};dist$1.ClassElement=function u(n){var e=n.isStatic,r=n.method;_classCallCheck$5(this,u),this.type="ClassElement",this.isStatic=e,this.method=r};dist$1.ClassExpression=function u(n){var e=n.name,r=n.super,a=n.elements;_classCallCheck$5(this,u),this.type="ClassExpression",this.name=e,this.super=r,this.elements=a};dist$1.CompoundAssignmentExpression=function u(n){var e=n.binding,r=n.operator,a=n.expression;_classCallCheck$5(this,u),this.type="CompoundAssignmentExpression",this.binding=e,this.operator=r,this.expression=a};dist$1.ComputedMemberAssignmentTarget=function u(n){var e=n.object,r=n.expression;_classCallCheck$5(this,u),this.type="ComputedMemberAssignmentTarget",this.object=e,this.expression=r};dist$1.ComputedMemberExpression=function u(n){var e=n.object,r=n.expression;_classCallCheck$5(this,u),this.type="ComputedMemberExpression",this.object=e,this.expression=r};dist$1.ComputedPropertyName=function u(n){var e=n.expression;_classCallCheck$5(this,u),this.type="ComputedPropertyName",this.expression=e};dist$1.ConditionalExpression=function u(n){var e=n.test,r=n.consequent,a=n.alternate;_classCallCheck$5(this,u),this.type="ConditionalExpression",this.test=e,this.consequent=r,this.alternate=a};dist$1.ContinueStatement=function u(n){var e=n.label;_classCallCheck$5(this,u),this.type="ContinueStatement",this.label=e};dist$1.DataProperty=function u(n){var e=n.name,r=n.expression;_classCallCheck$5(this,u),this.type="DataProperty",this.name=e,this.expression=r};dist$1.DebuggerStatement=function u(){_classCallCheck$5(this,u),this.type="DebuggerStatement"};dist$1.Directive=function u(n){var e=n.rawValue;_classCallCheck$5(this,u),this.type="Directive",this.rawValue=e};dist$1.DoWhileStatement=function u(n){var e=n.body,r=n.test;_classCallCheck$5(this,u),this.type="DoWhileStatement",this.body=e,this.test=r};dist$1.EmptyStatement=function u(){_classCallCheck$5(this,u),this.type="EmptyStatement"};dist$1.Export=function u(n){var e=n.declaration;_classCallCheck$5(this,u),this.type="Export",this.declaration=e};dist$1.ExportAllFrom=function u(n){var e=n.moduleSpecifier;_classCallCheck$5(this,u),this.type="ExportAllFrom",this.moduleSpecifier=e};dist$1.ExportDefault=function u(n){var e=n.body;_classCallCheck$5(this,u),this.type="ExportDefault",this.body=e};dist$1.ExportFrom=function u(n){var e=n.namedExports,r=n.moduleSpecifier;_classCallCheck$5(this,u),this.type="ExportFrom",this.namedExports=e,this.moduleSpecifier=r};dist$1.ExportFromSpecifier=function u(n){var e=n.name,r=n.exportedName;_classCallCheck$5(this,u),this.type="ExportFromSpecifier",this.name=e,this.exportedName=r};dist$1.ExportLocalSpecifier=function u(n){var e=n.name,r=n.exportedName;_classCallCheck$5(this,u),this.type="ExportLocalSpecifier",this.name=e,this.exportedName=r};dist$1.ExportLocals=function u(n){var e=n.namedExports;_classCallCheck$5(this,u),this.type="ExportLocals",this.namedExports=e};dist$1.ExpressionStatement=function u(n){var e=n.expression;_classCallCheck$5(this,u),this.type="ExpressionStatement",this.expression=e};dist$1.ForAwaitStatement=function u(n){var e=n.left,r=n.right,a=n.body;_classCallCheck$5(this,u),this.type="ForAwaitStatement",this.left=e,this.right=r,this.body=a};dist$1.ForInStatement=function u(n){var e=n.left,r=n.right,a=n.body;_classCallCheck$5(this,u),this.type="ForInStatement",this.left=e,this.right=r,this.body=a};dist$1.ForOfStatement=function u(n){var e=n.left,r=n.right,a=n.body;_classCallCheck$5(this,u),this.type="ForOfStatement",this.left=e,this.right=r,this.body=a};dist$1.ForStatement=function u(n){var e=n.init,r=n.test,a=n.update,s=n.body;_classCallCheck$5(this,u),this.type="ForStatement",this.init=e,this.test=r,this.update=a,this.body=s};dist$1.FormalParameters=function u(n){var e=n.items,r=n.rest;_classCallCheck$5(this,u),this.type="FormalParameters",this.items=e,this.rest=r};dist$1.FunctionBody=function u(n){var e=n.directives,r=n.statements;_classCallCheck$5(this,u),this.type="FunctionBody",this.directives=e,this.statements=r};dist$1.FunctionDeclaration=function u(n){var e=n.isAsync,r=n.isGenerator,a=n.name,s=n.params,o=n.body;_classCallCheck$5(this,u),this.type="FunctionDeclaration",this.isAsync=e,this.isGenerator=r,this.name=a,this.params=s,this.body=o};dist$1.FunctionExpression=function u(n){var e=n.isAsync,r=n.isGenerator,a=n.name,s=n.params,o=n.body;_classCallCheck$5(this,u),this.type="FunctionExpression",this.isAsync=e,this.isGenerator=r,this.name=a,this.params=s,this.body=o};dist$1.Getter=function u(n){var e=n.name,r=n.body;_classCallCheck$5(this,u),this.type="Getter",this.name=e,this.body=r};dist$1.IdentifierExpression=function u(n){var e=n.name;_classCallCheck$5(this,u),this.type="IdentifierExpression",this.name=e};dist$1.IfStatement=function u(n){var e=n.test,r=n.consequent,a=n.alternate;_classCallCheck$5(this,u),this.type="IfStatement",this.test=e,this.consequent=r,this.alternate=a};dist$1.Import=function u(n){var e=n.defaultBinding,r=n.namedImports,a=n.moduleSpecifier;_classCallCheck$5(this,u),this.type="Import",this.defaultBinding=e,this.namedImports=r,this.moduleSpecifier=a};dist$1.ImportNamespace=function u(n){var e=n.defaultBinding,r=n.namespaceBinding,a=n.moduleSpecifier;_classCallCheck$5(this,u),this.type="ImportNamespace",this.defaultBinding=e,this.namespaceBinding=r,this.moduleSpecifier=a};dist$1.ImportSpecifier=function u(n){var e=n.name,r=n.binding;_classCallCheck$5(this,u),this.type="ImportSpecifier",this.name=e,this.binding=r};dist$1.LabeledStatement=function u(n){var e=n.label,r=n.body;_classCallCheck$5(this,u),this.type="LabeledStatement",this.label=e,this.body=r};dist$1.LiteralBooleanExpression=function u(n){var e=n.value;_classCallCheck$5(this,u),this.type="LiteralBooleanExpression",this.value=e};dist$1.LiteralInfinityExpression=function u(){_classCallCheck$5(this,u),this.type="LiteralInfinityExpression"};dist$1.LiteralNullExpression=function u(){_classCallCheck$5(this,u),this.type="LiteralNullExpression"};dist$1.LiteralNumericExpression=function u(n){var e=n.value;_classCallCheck$5(this,u),this.type="LiteralNumericExpression",this.value=e};dist$1.LiteralRegExpExpression=function u(n){var e=n.pattern,r=n.global,a=n.ignoreCase,s=n.multiLine,o=n.dotAll,c=n.unicode,l=n.sticky;_classCallCheck$5(this,u),this.type="LiteralRegExpExpression",this.pattern=e,this.global=r,this.ignoreCase=a,this.multiLine=s,this.dotAll=o,this.unicode=c,this.sticky=l};dist$1.LiteralStringExpression=function u(n){var e=n.value;_classCallCheck$5(this,u),this.type="LiteralStringExpression",this.value=e};dist$1.Method=function u(n){var e=n.isAsync,r=n.isGenerator,a=n.name,s=n.params,o=n.body;_classCallCheck$5(this,u),this.type="Method",this.isAsync=e,this.isGenerator=r,this.name=a,this.params=s,this.body=o};dist$1.Module=function u(n){var e=n.directives,r=n.items;_classCallCheck$5(this,u),this.type="Module",this.directives=e,this.items=r};dist$1.NewExpression=function u(n){var e=n.callee,r=n.arguments;_classCallCheck$5(this,u),this.type="NewExpression",this.callee=e,this.arguments=r};dist$1.NewTargetExpression=function u(){_classCallCheck$5(this,u),this.type="NewTargetExpression"};dist$1.ObjectAssignmentTarget=function u(n){var e=n.properties,r=n.rest;_classCallCheck$5(this,u),this.type="ObjectAssignmentTarget",this.properties=e,this.rest=r};dist$1.ObjectBinding=function u(n){var e=n.properties,r=n.rest;_classCallCheck$5(this,u),this.type="ObjectBinding",this.properties=e,this.rest=r};dist$1.ObjectExpression=function u(n){var e=n.properties;_classCallCheck$5(this,u),this.type="ObjectExpression",this.properties=e};dist$1.ReturnStatement=function u(n){var e=n.expression;_classCallCheck$5(this,u),this.type="ReturnStatement",this.expression=e};dist$1.Script=function u(n){var e=n.directives,r=n.statements;_classCallCheck$5(this,u),this.type="Script",this.directives=e,this.statements=r};dist$1.Setter=function u(n){var e=n.name,r=n.param,a=n.body;_classCallCheck$5(this,u),this.type="Setter",this.name=e,this.param=r,this.body=a};dist$1.ShorthandProperty=function u(n){var e=n.name;_classCallCheck$5(this,u),this.type="ShorthandProperty",this.name=e};dist$1.SpreadElement=function u(n){var e=n.expression;_classCallCheck$5(this,u),this.type="SpreadElement",this.expression=e};dist$1.SpreadProperty=function u(n){var e=n.expression;_classCallCheck$5(this,u),this.type="SpreadProperty",this.expression=e};dist$1.StaticMemberAssignmentTarget=function u(n){var e=n.object,r=n.property;_classCallCheck$5(this,u),this.type="StaticMemberAssignmentTarget",this.object=e,this.property=r};dist$1.StaticMemberExpression=function u(n){var e=n.object,r=n.property;_classCallCheck$5(this,u),this.type="StaticMemberExpression",this.object=e,this.property=r};dist$1.StaticPropertyName=function u(n){var e=n.value;_classCallCheck$5(this,u),this.type="StaticPropertyName",this.value=e};dist$1.Super=function u(){_classCallCheck$5(this,u),this.type="Super"};dist$1.SwitchCase=function u(n){var e=n.test,r=n.consequent;_classCallCheck$5(this,u),this.type="SwitchCase",this.test=e,this.consequent=r};dist$1.SwitchDefault=function u(n){var e=n.consequent;_classCallCheck$5(this,u),this.type="SwitchDefault",this.consequent=e};dist$1.SwitchStatement=function u(n){var e=n.discriminant,r=n.cases;_classCallCheck$5(this,u),this.type="SwitchStatement",this.discriminant=e,this.cases=r};dist$1.SwitchStatementWithDefault=function u(n){var e=n.discriminant,r=n.preDefaultCases,a=n.defaultCase,s=n.postDefaultCases;_classCallCheck$5(this,u),this.type="SwitchStatementWithDefault",this.discriminant=e,this.preDefaultCases=r,this.defaultCase=a,this.postDefaultCases=s};dist$1.TemplateElement=function u(n){var e=n.rawValue;_classCallCheck$5(this,u),this.type="TemplateElement",this.rawValue=e};dist$1.TemplateExpression=function u(n){var e=n.tag,r=n.elements;_classCallCheck$5(this,u),this.type="TemplateExpression",this.tag=e,this.elements=r};dist$1.ThisExpression=function u(){_classCallCheck$5(this,u),this.type="ThisExpression"};dist$1.ThrowStatement=function u(n){var e=n.expression;_classCallCheck$5(this,u),this.type="ThrowStatement",this.expression=e};dist$1.TryCatchStatement=function u(n){var e=n.body,r=n.catchClause;_classCallCheck$5(this,u),this.type="TryCatchStatement",this.body=e,this.catchClause=r};dist$1.TryFinallyStatement=function u(n){var e=n.body,r=n.catchClause,a=n.finalizer;_classCallCheck$5(this,u),this.type="TryFinallyStatement",this.body=e,this.catchClause=r,this.finalizer=a};dist$1.UnaryExpression=function u(n){var e=n.operator,r=n.operand;_classCallCheck$5(this,u),this.type="UnaryExpression",this.operator=e,this.operand=r};dist$1.UpdateExpression=function u(n){var e=n.isPrefix,r=n.operator,a=n.operand;_classCallCheck$5(this,u),this.type="UpdateExpression",this.isPrefix=e,this.operator=r,this.operand=a};dist$1.VariableDeclaration=function u(n){var e=n.kind,r=n.declarators;_classCallCheck$5(this,u),this.type="VariableDeclaration",this.kind=e,this.declarators=r};dist$1.VariableDeclarationStatement=function u(n){var e=n.declaration;_classCallCheck$5(this,u),this.type="VariableDeclarationStatement",this.declaration=e};dist$1.VariableDeclarator=function u(n){var e=n.binding,r=n.init;_classCallCheck$5(this,u),this.type="VariableDeclarator",this.binding=e,this.init=r};dist$1.WhileStatement=function u(n){var e=n.test,r=n.body;_classCallCheck$5(this,u),this.type="WhileStatement",this.test=e,this.body=r};dist$1.WithStatement=function u(n){var e=n.object,r=n.body;_classCallCheck$5(this,u),this.type="WithStatement",this.object=e,this.body=r};dist$1.YieldExpression=function u(n){var e=n.expression;_classCallCheck$5(this,u),this.type="YieldExpression",this.expression=e};dist$1.YieldGeneratorExpression=function u(n){var e=n.expression;_classCallCheck$5(this,u),this.type="YieldGeneratorExpression",this.expression=e};var dist={},minimalCodegen$1={};/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var getOwnPropertySymbols=Object.getOwnPropertySymbols,hasOwnProperty=Object.prototype.hasOwnProperty,propIsEnumerable=Object.prototype.propertyIsEnumerable;function toObject(u){if(u==null)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(u)}function shouldUseNative(){try{if(!Object.assign)return!1;var u=new String("abc");if(u[5]="de",Object.getOwnPropertyNames(u)[0]==="5")return!1;for(var n={},e=0;e<10;e++)n["_"+String.fromCharCode(e)]=e;var r=Object.getOwnPropertyNames(n).map(function(s){return n[s]});if(r.join("")!=="0123456789")return!1;var a={};return"abcdefghijklmnopqrst".split("").forEach(function(s){a[s]=s}),Object.keys(Object.assign({},a)).join("")==="abcdefghijklmnopqrst"}catch{return!1}}var objectAssign=shouldUseNative()?Object.assign:function(u,n){for(var e,r=toObject(u),a,s=1;s<arguments.length;s++){e=Object(arguments[s]);for(var o in e)hasOwnProperty.call(e,o)&&(r[o]=e[o]);if(getOwnPropertySymbols){a=getOwnPropertySymbols(e);for(var c=0;c<a.length;c++)propIsEnumerable.call(e,a[c])&&(r[a[c]]=e[a[c]])}}return r};const objectAssign$1=_mergeNamespaces({__proto__:null,default:objectAssign},[objectAssign]),require$$0$3=getAugmentedNamespace(objectAssign$1);var utils$1={},ast$2={exports:{}};(function(){function u(o){if(o==null)return!1;switch(o.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"CallExpression":case"ConditionalExpression":case"FunctionExpression":case"Identifier":case"Literal":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"ObjectExpression":case"SequenceExpression":case"ThisExpression":case"UnaryExpression":case"UpdateExpression":return!0}return!1}function n(o){if(o==null)return!1;switch(o.type){case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"WhileStatement":return!0}return!1}function e(o){if(o==null)return!1;switch(o.type){case"BlockStatement":case"BreakStatement":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"ForInStatement":case"ForStatement":case"IfStatement":case"LabeledStatement":case"ReturnStatement":case"SwitchStatement":case"ThrowStatement":case"TryStatement":case"VariableDeclaration":case"WhileStatement":case"WithStatement":return!0}return!1}function r(o){return e(o)||o!=null&&o.type==="FunctionDeclaration"}function a(o){switch(o.type){case"IfStatement":return o.alternate!=null?o.alternate:o.consequent;case"LabeledStatement":case"ForStatement":case"ForInStatement":case"WhileStatement":case"WithStatement":return o.body}return null}function s(o){var c;if(o.type!=="IfStatement"||o.alternate==null)return!1;c=o.consequent;do{if(c.type==="IfStatement"&&c.alternate==null)return!0;c=a(c)}while(c);return!1}ast$2.exports={isExpression:u,isStatement:e,isIterationStatement:n,isSourceElement:r,isProblematicIfStatement:s,trailingStatement:a}})();const ast$1=_mergeNamespaces({__proto__:null,default:ast$2.exports},[ast$2.exports]),require$$0$2=getAugmentedNamespace(ast$1);var code$2={exports:{}};(function(){var u,n,e,r,a,s;n={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,NonAsciiIdentifierPart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/},u={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/};function o(D){return 48<=D&&D<=57}function c(D){return 48<=D&&D<=57||97<=D&&D<=102||65<=D&&D<=70}function l(D){return D>=48&&D<=55}e=[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279];function m(D){return D===32||D===9||D===11||D===12||D===160||D>=5760&&e.indexOf(D)>=0}function E(D){return D===10||D===13||D===8232||D===8233}function A(D){if(D<=65535)return String.fromCharCode(D);var x=String.fromCharCode(Math.floor((D-65536)/1024)+55296),k=String.fromCharCode((D-65536)%1024+56320);return x+k}for(r=new Array(128),s=0;s<128;++s)r[s]=s>=97&&s<=122||s>=65&&s<=90||s===36||s===95;for(a=new Array(128),s=0;s<128;++s)a[s]=s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||s===36||s===95;function _(D){return D<128?r[D]:n.NonAsciiIdentifierStart.test(A(D))}function v(D){return D<128?a[D]:n.NonAsciiIdentifierPart.test(A(D))}function S(D){return D<128?r[D]:u.NonAsciiIdentifierStart.test(A(D))}function g(D){return D<128?a[D]:u.NonAsciiIdentifierPart.test(A(D))}code$2.exports={isDecimalDigit:o,isHexDigit:c,isOctalDigit:l,isWhiteSpace:m,isLineTerminator:E,isIdentifierStartES5:_,isIdentifierPartES5:v,isIdentifierStartES6:S,isIdentifierPartES6:g}})();const code$1=_mergeNamespaces({__proto__:null,default:code$2.exports},[code$2.exports]),require$$1$2=getAugmentedNamespace(code$1);var keyword$2={exports:{}};(function(){var u=require$$1$2;function n(_){switch(_){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"let":return!0;default:return!1}}function e(_,v){return!v&&_==="yield"?!1:r(_,v)}function r(_,v){if(v&&n(_))return!0;switch(_.length){case 2:return _==="if"||_==="in"||_==="do";case 3:return _==="var"||_==="for"||_==="new"||_==="try";case 4:return _==="this"||_==="else"||_==="case"||_==="void"||_==="with"||_==="enum";case 5:return _==="while"||_==="break"||_==="catch"||_==="throw"||_==="const"||_==="yield"||_==="class"||_==="super";case 6:return _==="return"||_==="typeof"||_==="delete"||_==="switch"||_==="export"||_==="import";case 7:return _==="default"||_==="finally"||_==="extends";case 8:return _==="function"||_==="continue"||_==="debugger";case 10:return _==="instanceof";default:return!1}}function a(_,v){return _==="null"||_==="true"||_==="false"||e(_,v)}function s(_,v){return _==="null"||_==="true"||_==="false"||r(_,v)}function o(_){return _==="eval"||_==="arguments"}function c(_){var v,S,g;if(_.length===0||(g=_.charCodeAt(0),!u.isIdentifierStartES5(g)))return!1;for(v=1,S=_.length;v<S;++v)if(g=_.charCodeAt(v),!u.isIdentifierPartES5(g))return!1;return!0}function l(_,v){return(_-55296)*1024+(v-56320)+65536}function m(_){var v,S,g,D,x;if(_.length===0)return!1;for(x=u.isIdentifierStartES6,v=0,S=_.length;v<S;++v){if(g=_.charCodeAt(v),55296<=g&&g<=56319){if(++v,v>=S||(D=_.charCodeAt(v),!(56320<=D&&D<=57343)))return!1;g=l(g,D)}if(!x(g))return!1;x=u.isIdentifierPartES6}return!0}function E(_,v){return c(_)&&!a(_,v)}function A(_,v){return m(_)&&!s(_,v)}keyword$2.exports={isKeywordES5:e,isKeywordES6:r,isReservedWordES5:a,isReservedWordES6:s,isRestrictedWord:o,isIdentifierNameES5:c,isIdentifierNameES6:m,isIdentifierES5:E,isIdentifierES6:A}})();const keyword$1=_mergeNamespaces({__proto__:null,default:keyword$2.exports},[keyword$2.exports]),require$$2$1=getAugmentedNamespace(keyword$1);var keyword,code,ast;(function(){ast=utils$1.ast=require$$0$2,code=utils$1.code=require$$1$2,keyword=utils$1.keyword=require$$2$1})();const utils=_mergeNamespaces({__proto__:null,get ast(){return ast},get code(){return code},get keyword(){return keyword},default:utils$1},[utils$1]),require$$1$1=getAugmentedNamespace(utils);var coderep$1={},SemiOp_1,CommaSep_1,Semi_1,Seq_1,ContainsIn_1,NoIn_1,Brace_1,Bracket_1,Paren_1,NumberCodeRep_1,RawToken_1,Token_1,Empty_1,CodeRep_1;Object.defineProperty(coderep$1,"__esModule",{value:!0});var _createClass$4=function(){function u(n,e){for(var r=0;r<e.length;r++){var a=e[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(n,e,r){return e&&u(n.prototype,e),r&&u(n,r),n}}(),getPrecedence_1=coderep$1.getPrecedence=getPrecedence,escapeStringLiteral_1=coderep$1.escapeStringLiteral=escapeStringLiteral;function _possibleConstructorReturn$2(u,n){if(!u)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n&&(typeof n=="object"||typeof n=="function")?n:u}function _inherits$2(u,n){if(typeof n!="function"&&n!==null)throw new TypeError("Super expression must either be null or a function, not "+typeof n);u.prototype=Object.create(n&&n.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(u,n):u.__proto__=n)}function _classCallCheck$4(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}var Precedence={Sequence:0,Yield:1,Assignment:1,Conditional:2,ArrowFunction:2,LogicalOR:3,LogicalAND:4,BitwiseOR:5,BitwiseXOR:6,BitwiseAND:7,Equality:8,Relational:9,BitwiseSHIFT:10,Additive:11,Multiplicative:12,Exponential:13,Prefix:14,Postfix:15,New:16,Call:17,TaggedTemplate:18,Member:19,Primary:20},Precedence_1=coderep$1.Precedence=Precedence,BinaryPrecedence={",":Precedence.Sequence,"||":Precedence.LogicalOR,"&&":Precedence.LogicalAND,"|":Precedence.BitwiseOR,"^":Precedence.BitwiseXOR,"&":Precedence.BitwiseAND,"==":Precedence.Equality,"!=":Precedence.Equality,"===":Precedence.Equality,"!==":Precedence.Equality,"<":Precedence.Relational,">":Precedence.Relational,"<=":Precedence.Relational,">=":Precedence.Relational,in:Precedence.Relational,instanceof:Precedence.Relational,"<<":Precedence.BitwiseSHIFT,">>":Precedence.BitwiseSHIFT,">>>":Precedence.BitwiseSHIFT,"+":Precedence.Additive,"-":Precedence.Additive,"*":Precedence.Multiplicative,"%":Precedence.Multiplicative,"/":Precedence.Multiplicative,"**":Precedence.Exponential};function getPrecedence(u){switch(u.type){case"ArrayExpression":case"FunctionExpression":case"ClassExpression":case"IdentifierExpression":case"AssignmentTargetIdentifier":case"NewTargetExpression":case"Super":case"LiteralBooleanExpression":case"LiteralNullExpression":case"LiteralNumericExpression":case"LiteralInfinityExpression":case"LiteralRegExpExpression":case"LiteralStringExpression":case"ObjectExpression":case"ThisExpression":case"SpreadElement":case"FunctionBody":return Precedence.Primary;case"ArrowExpression":case"AssignmentExpression":case"CompoundAssignmentExpression":case"YieldExpression":case"YieldGeneratorExpression":return Precedence.Assignment;case"ConditionalExpression":return Precedence.Conditional;case"ComputedMemberExpression":case"StaticMemberExpression":case"ComputedMemberAssignmentTarget":case"StaticMemberAssignmentTarget":switch(u.object.type){case"CallExpression":case"ComputedMemberExpression":case"StaticMemberExpression":case"TemplateExpression":return getPrecedence(u.object);default:return Precedence.Member}case"TemplateExpression":if(u.tag==null)return Precedence.Member;switch(u.tag.type){case"CallExpression":case"ComputedMemberExpression":case"StaticMemberExpression":case"TemplateExpression":return getPrecedence(u.tag);default:return Precedence.Member}case"BinaryExpression":return BinaryPrecedence[u.operator];case"CallExpression":return Precedence.Call;case"NewExpression":return u.arguments.length===0?Precedence.New:Precedence.Member;case"UpdateExpression":return u.isPrefix?Precedence.Prefix:Precedence.Postfix;case"AwaitExpression":case"UnaryExpression":return Precedence.Prefix;default:throw new Error("unreachable: "+u.type)}}function escapeStringLiteral(u){for(var n="",e=0,r=0,a=0,s=u.length;a<s;++a){var o=u[a];o==='"'?++r:o==="'"&&++e}var c=r>e?"'":'"';n+=c;for(var l=0;l<u.length;l++){var m=u.charAt(l);switch(m){case c:n+="\\"+c;break;case`
`:n+="\\n";break;case"\r":n+="\\r";break;case"\\":n+="\\\\";break;case"\u2028":n+="\\u2028";break;case"\u2029":n+="\\u2029";break;default:n+=m;break}}return n+=c,n}var CodeRep=CodeRep_1=coderep$1.CodeRep=function(){function u(){_classCallCheck$4(this,u),this.containsIn=!1,this.containsGroup=!1,this.startsWithCurly=!1,this.startsWithFunctionOrClass=!1,this.startsWithLet=!1,this.startsWithLetSquareBracket=!1,this.endsWithMissingElse=!1}return _createClass$4(u,[{key:"forEach",value:function(e){e(this)}}]),u}();Empty_1=coderep$1.Empty=function(u){_inherits$2(n,u);function n(){return _classCallCheck$4(this,n),_possibleConstructorReturn$2(this,(n.__proto__||Object.getPrototypeOf(n)).call(this))}return _createClass$4(n,[{key:"emit",value:function(){}}]),n}(CodeRep);var Token=Token_1=coderep$1.Token=function(u){_inherits$2(n,u);function n(e){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;_classCallCheck$4(this,n);var a=_possibleConstructorReturn$2(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return a.token=e,a.isRegExp=r,a}return _createClass$4(n,[{key:"emit",value:function(r){r.put(this.token,this.isRegExp)}}]),n}(CodeRep);RawToken_1=coderep$1.RawToken=function(u){_inherits$2(n,u);function n(e){_classCallCheck$4(this,n);var r=_possibleConstructorReturn$2(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return r.token=e,r}return _createClass$4(n,[{key:"emit",value:function(r){r.putRaw(this.token)}}]),n}(CodeRep);NumberCodeRep_1=coderep$1.NumberCodeRep=function(u){_inherits$2(n,u);function n(e){_classCallCheck$4(this,n);var r=_possibleConstructorReturn$2(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return r.number=e,r}return _createClass$4(n,[{key:"emit",value:function(r){r.putNumber(this.number)}}]),n}(CodeRep);Paren_1=coderep$1.Paren=function(u){_inherits$2(n,u);function n(e){_classCallCheck$4(this,n);var r=_possibleConstructorReturn$2(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return r.expr=e,r}return _createClass$4(n,[{key:"emit",value:function(r){r.put("("),this.expr.emit(r,!1),r.put(")")}},{key:"forEach",value:function(r){r(this),this.expr.forEach(r)}}]),n}(CodeRep);Bracket_1=coderep$1.Bracket=function(u){_inherits$2(n,u);function n(e){_classCallCheck$4(this,n);var r=_possibleConstructorReturn$2(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return r.expr=e,r}return _createClass$4(n,[{key:"emit",value:function(r){r.put("["),this.expr.emit(r,!1),r.put("]")}},{key:"forEach",value:function(r){r(this),this.expr.forEach(r)}}]),n}(CodeRep);Brace_1=coderep$1.Brace=function(u){_inherits$2(n,u);function n(e){_classCallCheck$4(this,n);var r=_possibleConstructorReturn$2(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return r.expr=e,r}return _createClass$4(n,[{key:"emit",value:function(r){r.put("{"),this.expr.emit(r,!1),r.put("}")}},{key:"forEach",value:function(r){r(this),this.expr.forEach(r)}}]),n}(CodeRep);NoIn_1=coderep$1.NoIn=function(u){_inherits$2(n,u);function n(e){_classCallCheck$4(this,n);var r=_possibleConstructorReturn$2(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return r.expr=e,r}return _createClass$4(n,[{key:"emit",value:function(r){this.expr.emit(r,!0)}},{key:"forEach",value:function(r){r(this),this.expr.forEach(r)}}]),n}(CodeRep);ContainsIn_1=coderep$1.ContainsIn=function(u){_inherits$2(n,u);function n(e){_classCallCheck$4(this,n);var r=_possibleConstructorReturn$2(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return r.expr=e,r}return _createClass$4(n,[{key:"emit",value:function(r,a){a?(r.put("("),this.expr.emit(r,!1),r.put(")")):this.expr.emit(r,!1)}},{key:"forEach",value:function(r){r(this),this.expr.forEach(r)}}]),n}(CodeRep);Seq_1=coderep$1.Seq=function(u){_inherits$2(n,u);function n(e){_classCallCheck$4(this,n);var r=_possibleConstructorReturn$2(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return r.children=e,r}return _createClass$4(n,[{key:"emit",value:function(r,a){this.children.forEach(function(s){return s.emit(r,a)})}},{key:"forEach",value:function(r){r(this),this.children.forEach(function(a){return a.forEach(r)})}}]),n}(CodeRep);Semi_1=coderep$1.Semi=function(u){_inherits$2(n,u);function n(){return _classCallCheck$4(this,n),_possibleConstructorReturn$2(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,";"))}return n}(Token);CommaSep_1=coderep$1.CommaSep=function(u){_inherits$2(n,u);function n(e){_classCallCheck$4(this,n);var r=_possibleConstructorReturn$2(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return r.children=e,r}return _createClass$4(n,[{key:"emit",value:function(r,a){var s=!0;this.children.forEach(function(o){s?s=!1:r.put(","),o.emit(r,a)})}},{key:"forEach",value:function(r){r(this),this.children.forEach(function(a){return a.forEach(r)})}}]),n}(CodeRep);SemiOp_1=coderep$1.SemiOp=function(u){_inherits$2(n,u);function n(){return _classCallCheck$4(this,n),_possibleConstructorReturn$2(this,(n.__proto__||Object.getPrototypeOf(n)).call(this))}return _createClass$4(n,[{key:"emit",value:function(r){r.putOptionalSemi()}}]),n}(CodeRep);const coderep=_mergeNamespaces({__proto__:null,getPrecedence:getPrecedence_1,escapeStringLiteral:escapeStringLiteral_1,Precedence:Precedence_1,get CodeRep(){return CodeRep_1},get Empty(){return Empty_1},get Token(){return Token_1},get RawToken(){return RawToken_1},get NumberCodeRep(){return NumberCodeRep_1},get Paren(){return Paren_1},get Bracket(){return Bracket_1},get Brace(){return Brace_1},get NoIn(){return NoIn_1},get ContainsIn(){return ContainsIn_1},get Seq(){return Seq_1},get Semi(){return Semi_1},get CommaSep(){return CommaSep_1},get SemiOp(){return SemiOp_1},default:coderep$1},[coderep$1]),require$$2=getAugmentedNamespace(coderep);Object.defineProperty(minimalCodegen$1,"__esModule",{value:!0});var _createClass$3=function(){function u(n,e){for(var r=0;r<e.length;r++){var a=e[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(n,e,r){return e&&u(n.prototype,e),r&&u(n,r),n}}(),_objectAssign$1=require$$0$3,_objectAssign2$1=_interopRequireDefault$2(_objectAssign$1),_esutils$1=require$$1$1,_coderep$1=require$$2;function _interopRequireDefault$2(u){return u&&u.__esModule?u:{default:u}}function _toConsumableArray$2(u){if(Array.isArray(u)){for(var n=0,e=Array(u.length);n<u.length;n++)e[n]=u[n];return e}else return Array.from(u)}function _classCallCheck$3(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}function p(u,n,e){return(0,_coderep$1.getPrecedence)(u)<n?paren(e):e}function t(u){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return new _coderep$1.Token(u,n)}function paren(u){return new _coderep$1.Paren(u)}function brace(u){return new _coderep$1.Brace(u)}function bracket(u){return new _coderep$1.Bracket(u)}function noIn$1(u){return new _coderep$1.NoIn(u)}function markContainsIn$1(u){return u.containsIn?new _coderep$1.ContainsIn(u):u}function seq$1(){for(var u=arguments.length,n=Array(u),e=0;e<u;e++)n[e]=arguments[e];return new _coderep$1.Seq(n)}function semi(){return new _coderep$1.Semi}function semiOp(){return new _coderep$1.SemiOp}function empty$1(){return new _coderep$1.Empty}function commaSep(u){return new _coderep$1.CommaSep(u)}function getAssignmentExpr(u){return u?u.containsGroup?paren(u):u:empty$1()}var MinimalCodeGen=function(){function u(){_classCallCheck$3(this,u)}return _createClass$3(u,[{key:"parenToAvoidBeingDirective",value:function(e,r){return e&&e.type==="ExpressionStatement"&&e.expression.type==="LiteralStringExpression"?seq$1(paren(r.children[0]),semiOp()):r}},{key:"regenerateArrowParams",value:function(e,r){return e.rest==null&&e.items.length===1&&e.items[0].type==="BindingIdentifier"?this.reduceBindingIdentifier(e.items[0]):r}},{key:"reduceArrayExpression",value:function(e,r){var a=r.elements;if(a.length===0)return bracket(empty$1());var s=commaSep(a.map(getAssignmentExpr));return a.length>0&&a[a.length-1]==null&&(s=seq$1(s,t(","))),bracket(s)}},{key:"reduceAwaitExpression",value:function(e,r){var a=r.expression;return seq$1(t("await"),p(e.expression,(0,_coderep$1.getPrecedence)(e),a))}},{key:"reduceSpreadElement",value:function(e,r){var a=r.expression;return seq$1(t("..."),p(e.expression,_coderep$1.Precedence.Assignment,a))}},{key:"reduceSpreadProperty",value:function(e,r){var a=r.expression;return seq$1(t("..."),getAssignmentExpr(a))}},{key:"reduceAssignmentExpression",value:function(e,r){var a=r.binding,s=r.expression,o=a,c=s,l=s.containsIn,m=a.startsWithCurly,E=a.startsWithLetSquareBracket,A=a.startsWithFunctionOrClass;return(0,_coderep$1.getPrecedence)(e.expression)<(0,_coderep$1.getPrecedence)(e)&&(c=paren(c),l=!1),(0,_objectAssign2$1.default)(seq$1(o,t("="),c),{containsIn:l,startsWithCurly:m,startsWithLetSquareBracket:E,startsWithFunctionOrClass:A})}},{key:"reduceAssignmentTargetIdentifier",value:function(e){var r=t(e.name);return e.name==="let"&&(r.startsWithLet=!0),r}},{key:"reduceAssignmentTargetWithDefault",value:function(e,r){var a=r.binding,s=r.init;return seq$1(a,t("="),p(e.init,_coderep$1.Precedence.Assignment,s))}},{key:"reduceCompoundAssignmentExpression",value:function(e,r){var a=r.binding,s=r.expression,o=a,c=s,l=s.containsIn,m=a.startsWithCurly,E=a.startsWithLetSquareBracket,A=a.startsWithFunctionOrClass;return(0,_coderep$1.getPrecedence)(e.expression)<(0,_coderep$1.getPrecedence)(e)&&(c=paren(c),l=!1),(0,_objectAssign2$1.default)(seq$1(o,t(e.operator),c),{containsIn:l,startsWithCurly:m,startsWithLetSquareBracket:E,startsWithFunctionOrClass:A})}},{key:"reduceBinaryExpression",value:function(e,r){var a=r.left,s=r.right,o=a,c=a.startsWithCurly,l=a.startsWithLetSquareBracket,m=a.startsWithFunctionOrClass,E=a.containsIn,A=e.operator==="**";((0,_coderep$1.getPrecedence)(e.left)<(0,_coderep$1.getPrecedence)(e)||A&&((0,_coderep$1.getPrecedence)(e.left)===(0,_coderep$1.getPrecedence)(e)||e.left.type==="UnaryExpression"))&&(o=paren(o),c=!1,l=!1,m=!1,E=!1);var _=s,v=s.containsIn;return((0,_coderep$1.getPrecedence)(e.right)<(0,_coderep$1.getPrecedence)(e)||!A&&(0,_coderep$1.getPrecedence)(e.right)===(0,_coderep$1.getPrecedence)(e))&&(_=paren(_),v=!1),(0,_objectAssign2$1.default)(seq$1(o,t(e.operator),_),{containsIn:E||v||e.operator==="in",containsGroup:e.operator===",",startsWithCurly:c,startsWithLetSquareBracket:l,startsWithFunctionOrClass:m})}},{key:"reduceBindingWithDefault",value:function(e,r){var a=r.binding,s=r.init;return seq$1(a,t("="),p(e.init,_coderep$1.Precedence.Assignment,s))}},{key:"reduceBindingIdentifier",value:function(e){var r=t(e.name);return e.name==="let"&&(r.startsWithLet=!0),r}},{key:"reduceArrayAssignmentTarget",value:function(e,r){var a=r.elements,s=r.rest,o=void 0;return a.length===0?o=s==null?empty$1():seq$1(t("..."),s):(a=a.concat(s==null?[]:[seq$1(t("..."),s)]),o=commaSep(a.map(getAssignmentExpr)),a.length>0&&a[a.length-1]==null&&(o=seq$1(o,t(",")))),bracket(o)}},{key:"reduceArrayBinding",value:function(e,r){var a=r.elements,s=r.rest,o=void 0;return a.length===0?o=s==null?empty$1():seq$1(t("..."),s):(a=a.concat(s==null?[]:[seq$1(t("..."),s)]),o=commaSep(a.map(getAssignmentExpr)),a.length>0&&a[a.length-1]==null&&(o=seq$1(o,t(",")))),bracket(o)}},{key:"reduceObjectAssignmentTarget",value:function(e,r){var a=r.properties,s=r.rest,o=commaSep(a);a.length===0?o=s==null?empty$1():seq$1(t("..."),s):o=s==null?o:seq$1(o,t(","),t("..."),s);var c=brace(o);return c.startsWithCurly=!0,c}},{key:"reduceObjectBinding",value:function(e,r){var a=r.properties,s=r.rest,o=commaSep(a);a.length===0?o=s==null?empty$1():seq$1(t("..."),s):o=s==null?o:seq$1(o,t(","),t("..."),s);var c=brace(o);return c.startsWithCurly=!0,c}},{key:"reduceAssignmentTargetPropertyIdentifier",value:function(e,r){var a=r.binding,s=r.init;return e.init==null?a:seq$1(a,t("="),p(e.init,_coderep$1.Precedence.Assignment,s))}},{key:"reduceAssignmentTargetPropertyProperty",value:function(e,r){var a=r.name,s=r.binding;return seq$1(a,t(":"),s)}},{key:"reduceBindingPropertyIdentifier",value:function(e,r){var a=r.binding,s=r.init;return e.init==null?a:seq$1(a,t("="),p(e.init,_coderep$1.Precedence.Assignment,s))}},{key:"reduceBindingPropertyProperty",value:function(e,r){var a=r.name,s=r.binding;return seq$1(a,t(":"),s)}},{key:"reduceBlock",value:function(e,r){var a=r.statements;return brace(seq$1.apply(void 0,_toConsumableArray$2(a)))}},{key:"reduceBlockStatement",value:function(e,r){var a=r.block;return a}},{key:"reduceBreakStatement",value:function(e){return seq$1(t("break"),e.label?t(e.label):empty$1(),semiOp())}},{key:"reduceCallExpression",value:function(e,r){var a=r.callee,s=r.arguments,o=s.map(function(c,l){return p(e.arguments[l],_coderep$1.Precedence.Assignment,c)});return(0,_objectAssign2$1.default)(seq$1(p(e.callee,(0,_coderep$1.getPrecedence)(e),a),paren(commaSep(o))),{startsWithCurly:a.startsWithCurly,startsWithLet:a.startsWithLet,startsWithLetSquareBracket:a.startsWithLetSquareBracket,startsWithFunctionOrClass:a.startsWithFunctionOrClass})}},{key:"reduceCatchClause",value:function(e,r){var a=r.binding,s=r.body;return seq$1(t("catch"),paren(a),s)}},{key:"reduceClassDeclaration",value:function(e,r){var a=r.name,s=r.super,o=r.elements,c=seq$1(t("class"),e.name.name==="*default*"?empty$1():a);return s!=null&&(c=seq$1(c,t("extends"),p(e.super,_coderep$1.Precedence.New,s))),c=seq$1.apply(void 0,[c,t("{")].concat(_toConsumableArray$2(o),[t("}")])),c}},{key:"reduceClassExpression",value:function(e,r){var a=r.name,s=r.super,o=r.elements,c=t("class");return a!=null&&(c=seq$1(c,a)),s!=null&&(c=seq$1(c,t("extends"),p(e.super,_coderep$1.Precedence.New,s))),c=seq$1.apply(void 0,[c,t("{")].concat(_toConsumableArray$2(o),[t("}")])),c.startsWithFunctionOrClass=!0,c}},{key:"reduceClassElement",value:function(e,r){var a=r.method;return e.isStatic?seq$1(t("static"),a):a}},{key:"reduceComputedMemberAssignmentTarget",value:function(e,r){var a=r.object,s=r.expression,o=a.startsWithLetSquareBracket||e.object.type==="IdentifierExpression"&&e.object.name==="let";return(0,_objectAssign2$1.default)(seq$1(p(e.object,(0,_coderep$1.getPrecedence)(e),a),bracket(s)),{startsWithLet:a.startsWithLet,startsWithLetSquareBracket:o,startsWithCurly:a.startsWithCurly,startsWithFunctionOrClass:a.startsWithFunctionOrClass})}},{key:"reduceComputedMemberExpression",value:function(e,r){var a=r.object,s=r.expression,o=a.startsWithLetSquareBracket||e.object.type==="IdentifierExpression"&&e.object.name==="let";return(0,_objectAssign2$1.default)(seq$1(p(e.object,(0,_coderep$1.getPrecedence)(e),a),bracket(s)),{startsWithLet:a.startsWithLet,startsWithLetSquareBracket:o,startsWithCurly:a.startsWithCurly,startsWithFunctionOrClass:a.startsWithFunctionOrClass})}},{key:"reduceComputedPropertyName",value:function(e,r){var a=r.expression;return bracket(p(e.expression,_coderep$1.Precedence.Assignment,a))}},{key:"reduceConditionalExpression",value:function(e,r){var a=r.test,s=r.consequent,o=r.alternate,c=a.containsIn||o.containsIn,l=a.startsWithCurly,m=a.startsWithLetSquareBracket,E=a.startsWithFunctionOrClass;return(0,_objectAssign2$1.default)(seq$1(p(e.test,_coderep$1.Precedence.LogicalOR,a),t("?"),p(e.consequent,_coderep$1.Precedence.Assignment,s),t(":"),p(e.alternate,_coderep$1.Precedence.Assignment,o)),{containsIn:c,startsWithCurly:l,startsWithLetSquareBracket:m,startsWithFunctionOrClass:E})}},{key:"reduceContinueStatement",value:function(e){return seq$1(t("continue"),e.label?t(e.label):empty$1(),semiOp())}},{key:"reduceDataProperty",value:function(e,r){var a=r.name,s=r.expression;return seq$1(a,t(":"),getAssignmentExpr(s))}},{key:"reduceDebuggerStatement",value:function(){return seq$1(t("debugger"),semiOp())}},{key:"reduceDoWhileStatement",value:function(e,r){var a=r.body,s=r.test;return seq$1(t("do"),a,t("while"),paren(s),semiOp())}},{key:"reduceEmptyStatement",value:function(){return semi()}},{key:"reduceExpressionStatement",value:function(e,r){var a=r.expression,s=a.startsWithCurly||a.startsWithLetSquareBracket||a.startsWithFunctionOrClass;return seq$1(s?paren(a):a,semiOp())}},{key:"reduceForInStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return a=e.left.type==="VariableDeclaration"?noIn$1(markContainsIn$1(a)):a,(0,_objectAssign2$1.default)(seq$1(t("for"),paren(seq$1(a.startsWithLet?paren(a):a,t("in"),s)),o),{endsWithMissingElse:o.endsWithMissingElse})}},{key:"reduceForOfStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return a=e.left.type==="VariableDeclaration"?noIn$1(markContainsIn$1(a)):a,(0,_objectAssign2$1.default)(seq$1(t("for"),paren(seq$1(a.startsWithLet?paren(a):a,t("of"),p(e.right,_coderep$1.Precedence.Assignment,s))),o),{endsWithMissingElse:o.endsWithMissingElse})}},{key:"reduceForStatement",value:function(e,r){var a=r.init,s=r.test,o=r.update,c=r.body;return a&&(a.startsWithLetSquareBracket&&(a=paren(a)),a=noIn$1(markContainsIn$1(a))),(0,_objectAssign2$1.default)(seq$1(t("for"),paren(seq$1(a||empty$1(),semi(),s||empty$1(),semi(),o||empty$1())),c),{endsWithMissingElse:c.endsWithMissingElse})}},{key:"reduceForAwaitStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return a=e.left.type==="VariableDeclaration"?noIn$1(markContainsIn$1(a)):a,(0,_objectAssign2$1.default)(seq$1(t("for"),t("await"),paren(seq$1(a.startsWithLet?paren(a):a,t("of"),p(e.right,_coderep$1.Precedence.Assignment,s))),o),{endsWithMissingElse:o.endsWithMissingElse})}},{key:"reduceFunctionBody",value:function(e,r){var a=r.directives,s=r.statements;return s.length&&(s[0]=this.parenToAvoidBeingDirective(e.statements[0],s[0])),brace(seq$1.apply(void 0,_toConsumableArray$2(a).concat(_toConsumableArray$2(s))))}},{key:"reduceFunctionDeclaration",value:function(e,r){var a=r.name,s=r.params,o=r.body;return seq$1(e.isAsync?t("async"):empty$1(),t("function"),e.isGenerator?t("*"):empty$1(),e.name.name==="*default*"?empty$1():a,s,o)}},{key:"reduceFunctionExpression",value:function(e,r){var a=r.name,s=r.params,o=r.body,c=seq$1(e.isAsync?t("async"):empty$1(),t("function"),e.isGenerator?t("*"):empty$1(),a||empty$1(),s,o);return c.startsWithFunctionOrClass=!0,c}},{key:"reduceFormalParameters",value:function(e,r){var a=r.items,s=r.rest;return paren(commaSep(a.concat(s==null?[]:[seq$1(t("..."),s)])))}},{key:"reduceArrowExpression",value:function(e,r){var a=r.params,s=r.body;a=this.regenerateArrowParams(e.params,a);var o=!1;return e.body.type!=="FunctionBody"&&(s.startsWithCurly?s=paren(s):s.containsIn&&(o=!0)),(0,_objectAssign2$1.default)(seq$1(e.isAsync?t("async"):empty$1(),a,t("=>"),p(e.body,_coderep$1.Precedence.Assignment,s)),{containsIn:o})}},{key:"reduceGetter",value:function(e,r){var a=r.name,s=r.body;return seq$1(t("get"),a,paren(empty$1()),s)}},{key:"reduceIdentifierExpression",value:function(e){var r=t(e.name);return e.name==="let"&&(r.startsWithLet=!0),r}},{key:"reduceIfStatement",value:function(e,r){var a=r.test,s=r.consequent,o=r.alternate;return o&&s.endsWithMissingElse&&(s=brace(s)),(0,_objectAssign2$1.default)(seq$1(t("if"),paren(a),s,o?seq$1(t("else"),o):empty$1()),{endsWithMissingElse:o?o.endsWithMissingElse:!0})}},{key:"reduceImport",value:function(e,r){var a=r.defaultBinding,s=r.namedImports,o=[];return a!=null&&o.push(a),s.length>0&&o.push(brace(commaSep(s))),o.length===0?seq$1(t("import"),t((0,_coderep$1.escapeStringLiteral)(e.moduleSpecifier)),semiOp()):seq$1(t("import"),commaSep(o),t("from"),t((0,_coderep$1.escapeStringLiteral)(e.moduleSpecifier)),semiOp())}},{key:"reduceImportNamespace",value:function(e,r){var a=r.defaultBinding,s=r.namespaceBinding;return seq$1(t("import"),a==null?empty$1():seq$1(a,t(",")),t("*"),t("as"),s,t("from"),t((0,_coderep$1.escapeStringLiteral)(e.moduleSpecifier)),semiOp())}},{key:"reduceImportSpecifier",value:function(e,r){var a=r.binding;return e.name==null?a:seq$1(t(e.name),t("as"),a)}},{key:"reduceExportAllFrom",value:function(e){return seq$1(t("export"),t("*"),t("from"),t((0,_coderep$1.escapeStringLiteral)(e.moduleSpecifier)),semiOp())}},{key:"reduceExportFrom",value:function(e,r){var a=r.namedExports;return seq$1(t("export"),brace(commaSep(a)),t("from"),t((0,_coderep$1.escapeStringLiteral)(e.moduleSpecifier)),semiOp())}},{key:"reduceExportLocals",value:function(e,r){var a=r.namedExports;return seq$1(t("export"),brace(commaSep(a)),semiOp())}},{key:"reduceExport",value:function(e,r){var a=r.declaration;switch(e.declaration.type){case"FunctionDeclaration":case"ClassDeclaration":break;default:a=seq$1(a,semiOp())}return seq$1(t("export"),a)}},{key:"reduceExportDefault",value:function(e,r){var a=r.body;switch(a=a.startsWithFunctionOrClass?paren(a):a,e.body.type){case"FunctionDeclaration":case"ClassDeclaration":return seq$1(t("export default"),a);default:return seq$1(t("export default"),p(e.body,_coderep$1.Precedence.Assignment,a),semiOp())}}},{key:"reduceExportFromSpecifier",value:function(e){return e.exportedName==null?t(e.name):seq$1(t(e.name),t("as"),t(e.exportedName))}},{key:"reduceExportLocalSpecifier",value:function(e,r){var a=r.name;return e.exportedName==null?a:seq$1(a,t("as"),t(e.exportedName))}},{key:"reduceLabeledStatement",value:function(e,r){var a=r.body;return(0,_objectAssign2$1.default)(seq$1(t(e.label+":"),a),{endsWithMissingElse:a.endsWithMissingElse})}},{key:"reduceLiteralBooleanExpression",value:function(e){return t(e.value.toString())}},{key:"reduceLiteralNullExpression",value:function(){return t("null")}},{key:"reduceLiteralInfinityExpression",value:function(){return t("2e308")}},{key:"reduceLiteralNumericExpression",value:function(e){return new _coderep$1.NumberCodeRep(e.value)}},{key:"reduceLiteralRegExpExpression",value:function(e){return t("/"+e.pattern+"/"+(e.global?"g":"")+(e.ignoreCase?"i":"")+(e.multiLine?"m":"")+(e.dotAll?"s":"")+(e.unicode?"u":"")+(e.sticky?"y":""),!0)}},{key:"reduceLiteralStringExpression",value:function(e){return t((0,_coderep$1.escapeStringLiteral)(e.value))}},{key:"reduceMethod",value:function(e,r){var a=r.name,s=r.params,o=r.body;return seq$1(e.isAsync?t("async"):empty$1(),e.isGenerator?t("*"):empty$1(),a,s,o)}},{key:"reduceModule",value:function(e,r){var a=r.directives,s=r.items;return s.length&&(s[0]=this.parenToAvoidBeingDirective(e.items[0],s[0])),seq$1.apply(void 0,_toConsumableArray$2(a).concat(_toConsumableArray$2(s)))}},{key:"reduceNewExpression",value:function(e,r){var a=r.callee,s=r.arguments,o=s.map(function(l,m){return p(e.arguments[m],_coderep$1.Precedence.Assignment,l)}),c=(0,_coderep$1.getPrecedence)(e.callee)===_coderep$1.Precedence.Call?paren(a):p(e.callee,(0,_coderep$1.getPrecedence)(e),a);return seq$1(t("new"),c,s.length===0?empty$1():paren(commaSep(o)))}},{key:"reduceNewTargetExpression",value:function(){return t("new.target")}},{key:"reduceObjectExpression",value:function(e,r){var a=r.properties,s=brace(commaSep(a));return s.startsWithCurly=!0,s}},{key:"reduceUpdateExpression",value:function(e,r){var a=r.operand;return e.isPrefix?this.reduceUnaryExpression.apply(this,arguments):(0,_objectAssign2$1.default)(seq$1(p(e.operand,_coderep$1.Precedence.New,a),t(e.operator)),{startsWithCurly:a.startsWithCurly,startsWithLetSquareBracket:a.startsWithLetSquareBracket,startsWithFunctionOrClass:a.startsWithFunctionOrClass})}},{key:"reduceUnaryExpression",value:function(e,r){var a=r.operand;return seq$1(t(e.operator),p(e.operand,(0,_coderep$1.getPrecedence)(e),a))}},{key:"reduceReturnStatement",value:function(e,r){var a=r.expression;return seq$1(t("return"),a||empty$1(),semiOp())}},{key:"reduceScript",value:function(e,r){var a=r.directives,s=r.statements;return s.length&&(s[0]=this.parenToAvoidBeingDirective(e.statements[0],s[0])),seq$1.apply(void 0,_toConsumableArray$2(a).concat(_toConsumableArray$2(s)))}},{key:"reduceSetter",value:function(e,r){var a=r.name,s=r.param,o=r.body;return seq$1(t("set"),a,paren(s),o)}},{key:"reduceShorthandProperty",value:function(e,r){var a=r.name;return a}},{key:"reduceStaticMemberAssignmentTarget",value:function(e,r){var a=r.object,s=seq$1(p(e.object,(0,_coderep$1.getPrecedence)(e),a),t("."),t(e.property));return s.startsWithLet=a.startsWithLet,s.startsWithCurly=a.startsWithCurly,s.startsWithLetSquareBracket=a.startsWithLetSquareBracket,s.startsWithFunctionOrClass=a.startsWithFunctionOrClass,s}},{key:"reduceStaticMemberExpression",value:function(e,r){var a=r.object,s=seq$1(p(e.object,(0,_coderep$1.getPrecedence)(e),a),t("."),t(e.property));return s.startsWithLet=a.startsWithLet,s.startsWithCurly=a.startsWithCurly,s.startsWithLetSquareBracket=a.startsWithLetSquareBracket,s.startsWithFunctionOrClass=a.startsWithFunctionOrClass,s}},{key:"reduceStaticPropertyName",value:function(e){if(_esutils$1.keyword.isIdentifierNameES6(e.value))return t(e.value);var r=parseFloat(e.value);return r>=0&&r.toString()===e.value?new _coderep$1.NumberCodeRep(r):t((0,_coderep$1.escapeStringLiteral)(e.value))}},{key:"reduceSuper",value:function(){return t("super")}},{key:"reduceSwitchCase",value:function(e,r){var a=r.test,s=r.consequent;return seq$1(t("case"),a,t(":"),seq$1.apply(void 0,_toConsumableArray$2(s)))}},{key:"reduceSwitchDefault",value:function(e,r){var a=r.consequent;return seq$1(t("default:"),seq$1.apply(void 0,_toConsumableArray$2(a)))}},{key:"reduceSwitchStatement",value:function(e,r){var a=r.discriminant,s=r.cases;return seq$1(t("switch"),paren(a),brace(seq$1.apply(void 0,_toConsumableArray$2(s))))}},{key:"reduceSwitchStatementWithDefault",value:function(e,r){var a=r.discriminant,s=r.preDefaultCases,o=r.defaultCase,c=r.postDefaultCases;return seq$1(t("switch"),paren(a),brace(seq$1.apply(void 0,_toConsumableArray$2(s).concat([o],_toConsumableArray$2(c)))))}},{key:"reduceTemplateExpression",value:function(e,r){var a=r.tag,s=r.elements,o=e.tag==null?empty$1():p(e.tag,(0,_coderep$1.getPrecedence)(e),a);o=seq$1(o,t("`"));for(var c=0,l=e.elements.length;c<l;++c)e.elements[c].type==="TemplateElement"?o=seq$1(o,c>0?t("}"):empty$1(),s[c],c<l-1?t("${"):empty$1()):o=seq$1(o,s[c]);return o=seq$1(o,t("`")),e.tag!=null&&(o.startsWithCurly=a.startsWithCurly,o.startsWithLet=a.startsWithLet,o.startsWithLetSquareBracket=a.startsWithLetSquareBracket,o.startsWithFunctionOrClass=a.startsWithFunctionOrClass),o}},{key:"reduceTemplateElement",value:function(e){return new _coderep$1.RawToken(e.rawValue)}},{key:"reduceThisExpression",value:function(){return t("this")}},{key:"reduceThrowStatement",value:function(e,r){var a=r.expression;return seq$1(t("throw"),a,semiOp())}},{key:"reduceTryCatchStatement",value:function(e,r){var a=r.body,s=r.catchClause;return seq$1(t("try"),a,s)}},{key:"reduceTryFinallyStatement",value:function(e,r){var a=r.body,s=r.catchClause,o=r.finalizer;return seq$1(t("try"),a,s||empty$1(),t("finally"),o)}},{key:"reduceYieldExpression",value:function(e,r){var a=r.expression;return e.expression==null?t("yield"):(0,_objectAssign2$1.default)(seq$1(t("yield"),p(e.expression,(0,_coderep$1.getPrecedence)(e),a)),{containsIn:a.containsIn})}},{key:"reduceYieldGeneratorExpression",value:function(e,r){var a=r.expression;return(0,_objectAssign2$1.default)(seq$1(t("yield"),t("*"),p(e.expression,(0,_coderep$1.getPrecedence)(e),a)),{containsIn:a.containsIn})}},{key:"reduceDirective",value:function(e){var r=e.rawValue.match(/(^|[^\\])(\\\\)*"/)?"'":'"';return seq$1(t(r+e.rawValue+r),semiOp())}},{key:"reduceVariableDeclaration",value:function(e,r){var a=r.declarators;return seq$1(t(e.kind),commaSep(a))}},{key:"reduceVariableDeclarationStatement",value:function(e,r){var a=r.declaration;return seq$1(a,semiOp())}},{key:"reduceVariableDeclarator",value:function(e,r){var a=r.binding,s=r.init,o=s&&s.containsIn&&!s.containsGroup;return s&&(s.containsGroup?s=paren(s):s=markContainsIn$1(s)),(0,_objectAssign2$1.default)(s==null?a:seq$1(a,t("="),s),{containsIn:o})}},{key:"reduceWhileStatement",value:function(e,r){var a=r.test,s=r.body;return(0,_objectAssign2$1.default)(seq$1(t("while"),paren(a),s),{endsWithMissingElse:s.endsWithMissingElse})}},{key:"reduceWithStatement",value:function(e,r){var a=r.object,s=r.body;return(0,_objectAssign2$1.default)(seq$1(t("with"),paren(a),s),{endsWithMissingElse:s.endsWithMissingElse})}}]),u}(),_default$1=minimalCodegen$1.default=MinimalCodeGen;const minimalCodegen=_mergeNamespaces({__proto__:null,default:_default$1},[minimalCodegen$1]),require$$0$1=getAugmentedNamespace(minimalCodegen);var formattedCodegen$1={},ExtensibleCodeGen_1;Object.defineProperty(formattedCodegen$1,"__esModule",{value:!0});var FormattedCodeGen_1=formattedCodegen$1.FormattedCodeGen=ExtensibleCodeGen_1=formattedCodegen$1.ExtensibleCodeGen=Sep_1=formattedCodegen$1.Sep=void 0,_createClass$2=function(){function u(n,e){for(var r=0;r<e.length;r++){var a=e[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(n,e,r){return e&&u(n.prototype,e),r&&u(n,r),n}}(),_objectAssign=require$$0$3,_objectAssign2=_interopRequireDefault$1(_objectAssign),_esutils=require$$1$1,_coderep=require$$2;function _interopRequireDefault$1(u){return u&&u.__esModule?u:{default:u}}function _toConsumableArray$1(u){if(Array.isArray(u)){for(var n=0,e=Array(u.length);n<u.length;n++)e[n]=u[n];return e}else return Array.from(u)}function _classCallCheck$2(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn$1(u,n){if(!u)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n&&(typeof n=="object"||typeof n=="function")?n:u}function _inherits$1(u,n){if(typeof n!="function"&&n!==null)throw new TypeError("Super expression must either be null or a function, not "+typeof n);u.prototype=Object.create(n&&n.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(u,n):u.__proto__=n)}var INDENT="  ",Linebreak=function(u){_inherits$1(n,u);function n(){_classCallCheck$2(this,n);var e=_possibleConstructorReturn$1(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return e.indentation=0,e}return _createClass$2(n,[{key:"emit",value:function(r){r.put(`
`);for(var a=0;a<this.indentation;++a)r.put(INDENT)}}]),n}(_coderep.CodeRep);function empty(){return new _coderep.Empty}function noIn(u){return new _coderep.NoIn(u)}function markContainsIn(u){return u.containsIn?new _coderep.ContainsIn(u):u}function seq(){for(var u=arguments.length,n=Array(u),e=0;e<u;e++)n[e]=arguments[e];return new _coderep.Seq(n)}function isEmpty(u){return u instanceof _coderep.Empty||u instanceof Linebreak||u instanceof _coderep.Seq&&u.children.every(isEmpty)}var Sep={},separatorNames=["ARRAY_EMPTY","ARRAY_BEFORE_COMMA","ARRAY_AFTER_COMMA","SPREAD","AWAIT","AFTER_FORAWAIT_AWAIT","BEFORE_DEFAULT_EQUALS","AFTER_DEFAULT_EQUALS","REST","OBJECT_BEFORE_COMMA","OBJECT_AFTER_COMMA","BEFORE_PROP","AFTER_PROP","BEFORE_JUMP_LABEL","ARGS_BEFORE_COMMA","ARGS_AFTER_COMMA","CALL","BEFORE_CATCH_BINDING","AFTER_CATCH_BINDING","BEFORE_CLASS_NAME","BEFORE_EXTENDS","AFTER_EXTENDS","BEFORE_CLASS_DECLARATION_ELEMENTS","BEFORE_CLASS_EXPRESSION_ELEMENTS","AFTER_STATIC","BEFORE_CLASS_ELEMENT","AFTER_CLASS_ELEMENT","BEFORE_TERNARY_QUESTION","AFTER_TERNARY_QUESTION","BEFORE_TERNARY_COLON","AFTER_TERNARY_COLON","COMPUTED_MEMBER_EXPRESSION","COMPUTED_MEMBER_ASSIGNMENT_TARGET","AFTER_DO","BEFORE_DOWHILE_WHILE","AFTER_DOWHILE_WHILE","AFTER_FORIN_FOR","BEFORE_FORIN_IN","AFTER_FORIN_FOR","BEFORE_FORIN_BODY","AFTER_FOROF_FOR","BEFORE_FOROF_OF","AFTER_FOROF_FOR","BEFORE_FOROF_BODY","AFTER_FOR_FOR","BEFORE_FOR_INIT","AFTER_FOR_INIT","EMPTY_FOR_INIT","BEFORE_FOR_TEST","AFTER_FOR_TEST","EMPTY_FOR_TEST","BEFORE_FOR_UPDATE","AFTER_FOR_UPDATE","EMPTY_FOR_UPDATE","BEFORE_FOR_BODY","BEFORE_GENERATOR_STAR","AFTER_GENERATOR_STAR","BEFORE_FUNCTION_PARAMS","BEFORE_FUNCTION_DECLARATION_BODY","BEFORE_FUNCTION_EXPRESSION_BODY","AFTER_FUNCTION_DIRECTIVES","BEFORE_ARROW","AFTER_ARROW","AFTER_GET","BEFORE_GET_PARAMS","BEFORE_GET_BODY","AFTER_IF","AFTER_IF_TEST","BEFORE_ELSE","AFTER_ELSE","PARAMETER_BEFORE_COMMA","PARAMETER_AFTER_COMMA","NAMED_IMPORT_BEFORE_COMMA","NAMED_IMPORT_AFTER_COMMA","IMPORT_BEFORE_COMMA","IMPORT_AFTER_COMMA","BEFORE_IMPORT_BINDINGS","BEFORE_IMPORT_MODULE","AFTER_IMPORT_BINDINGS","AFTER_FROM","BEFORE_IMPORT_NAMESPACE","BEFORE_IMPORT_STAR","AFTER_IMPORT_STAR","AFTER_IMPORT_AS","AFTER_NAMESPACE_BINDING","BEFORE_IMPORT_AS","AFTER_IMPORT_AS","EXPORTS_BEFORE_COMMA","EXPORTS_AFTER_COMMA","BEFORE_EXPORT_STAR","AFTER_EXPORT_STAR","BEFORE_EXPORT_BINDINGS","AFTER_EXPORT_FROM_BINDINGS","AFTER_EXPORT_LOCAL_BINDINGS","AFTER_EXPORT","EXPORT_DEFAULT","AFTER_EXPORT_DEFAULT","BEFORE_EXPORT_AS","AFTER_EXPORT_AS","BEFORE_LABEL_COLON","AFTER_LABEL_COLON","AFTER_METHOD_GENERATOR_STAR","AFTER_METHOD_ASYNC","AFTER_METHOD_NAME","BEFORE_METHOD_BODY","AFTER_MODULE_DIRECTIVES","AFTER_NEW","BEFORE_NEW_ARGS","EMPTY_NEW_CALL","NEW_TARGET_BEFORE_DOT","NEW_TARGET_AFTER_DOT","RETURN","AFTER_SET","BEFORE_SET_PARAMS","BEFORE_SET_BODY","AFTER_SCRIPT_DIRECTIVES","BEFORE_STATIC_MEMBER_DOT","AFTER_STATIC_MEMBER_DOT","BEFORE_STATIC_MEMBER_ASSIGNMENT_TARGET_DOT","AFTER_STATIC_MEMBER_ASSIGNMENT_TARGET_DOT","BEFORE_CASE_TEST","AFTER_CASE_TEST","BEFORE_CASE_BODY","AFTER_CASE_BODY","DEFAULT","AFTER_DEFAULT_BODY","BEFORE_SWITCH_DISCRIM","BEFORE_SWITCH_BODY","TEMPLATE_TAG","BEFORE_TEMPLATE_EXPRESSION","AFTER_TEMPLATE_EXPRESSION","THROW","AFTER_TRY","BEFORE_CATCH","BEFORE_FINALLY","AFTER_FINALLY","VARIABLE_DECLARATION","YIELD","BEFORE_YIELD_STAR","AFTER_YIELD_STAR","DECLARATORS_BEFORE_COMMA","DECLARATORS_AFTER_COMMA","BEFORE_INIT_EQUALS","AFTER_INIT_EQUALS","AFTER_WHILE","BEFORE_WHILE_BODY","AFTER_WITH","BEFORE_WITH_BODY","PAREN_AVOIDING_DIRECTIVE_BEFORE","PAREN_AVOIDING_DIRECTIVE_AFTER","PRECEDENCE_BEFORE","PRECEDENCE_AFTER","EXPRESSION_PAREN_BEFORE","EXPRESSION_PAREN_AFTER","CALL_PAREN_BEFORE","CALL_PAREN_AFTER","CALL_PAREN_EMPTY","CATCH_PAREN_BEFORE","CATCH_PAREN_AFTER","DO_WHILE_TEST_PAREN_BEFORE","DO_WHILE_TEST_PAREN_AFTER","EXPRESSION_STATEMENT_PAREN_BEFORE","EXPRESSION_STATEMENT_PAREN_AFTER","FOR_LET_PAREN_BEFORE","FOR_LET_PAREN_AFTER","FOR_IN_LET_PAREN_BEFORE","FOR_IN_LET_PAREN_AFTER","FOR_IN_PAREN_BEFORE","FOR_IN_PAREN_AFTER","FOR_OF_LET_PAREN_BEFORE","FOR_OF_LET_PAREN_AFTER","FOR_OF_PAREN_BEFORE","FOR_OF_PAREN_AFTER","PARAMETERS_PAREN_BEFORE","PARAMETERS_PAREN_AFTER","PARAMETERS_PAREN_EMPTY","ARROW_PARAMETERS_PAREN_BEFORE","ARROW_PARAMETERS_PAREN_AFTER","ARROW_PARAMETERS_PAREN_EMPTY","ARROW_BODY_PAREN_BEFORE","ARROW_BODY_PAREN_AFTER","BEFORE_ARROW_ASYNC_PARAMS","GETTER_PARAMS","IF_PAREN_BEFORE","IF_PAREN_AFTER","EXPORT_PAREN_BEFORE","EXPORT_PAREN_AFTER","NEW_CALLEE_PAREN_BEFORE","NEW_CALLEE_PAREN_AFTER","NEW_PAREN_BEFORE","NEW_PAREN_AFTER","NEW_PAREN_EMPTY","SETTER_PARAM_BEFORE","SETTER_PARAM_AFTER","SWITCH_DISCRIM_PAREN_BEFORE","SWITCH_DISCRIM_PAREN_AFTER","WHILE_TEST_PAREN_BEFORE","WHILE_TEST_PAREN_AFTER","WITH_PAREN_BEFORE","WITH_PAREN_AFTER","OBJECT_BRACE_INITIAL","OBJECT_BRACE_FINAL","OBJECT_EMPTY","BLOCK_BRACE_INITIAL","BLOCK_BRACE_FINAL","BLOCK_EMPTY","CLASS_BRACE_INITIAL","CLASS_BRACE_FINAL","CLASS_EMPTY","CLASS_EXPRESSION_BRACE_INITIAL","CLASS_EXPRESSION_BRACE_FINAL","CLASS_EXPRESSION_BRACE_EMPTY","FUNCTION_BRACE_INITIAL","FUNCTION_BRACE_FINAL","FUNCTION_EMPTY","FUNCTION_EXPRESSION_BRACE_INITIAL","FUNCTION_EXPRESSION_BRACE_FINAL","FUNCTION_EXPRESSION_EMPTY","ARROW_BRACE_INITIAL","ARROW_BRACE_FINAL","ARROW_BRACE_EMPTY","GET_BRACE_INTIAL","GET_BRACE_FINAL","GET_BRACE_EMPTY","MISSING_ELSE_INTIIAL","MISSING_ELSE_FINAL","MISSING_ELSE_EMPTY","IMPORT_BRACE_INTIAL","IMPORT_BRACE_FINAL","IMPORT_BRACE_EMPTY","EXPORT_BRACE_INITIAL","EXPORT_BRACE_FINAL","EXPORT_BRACE_EMPTY","METHOD_BRACE_INTIAL","METHOD_BRACE_FINAL","METHOD_BRACE_EMPTY","SET_BRACE_INTIIAL","SET_BRACE_FINAL","SET_BRACE_EMPTY","SWITCH_BRACE_INTIAL","SWITCH_BRACE_FINAL","SWITCH_BRACE_EMPTY","ARRAY_INITIAL","ARRAY_FINAL","COMPUTED_MEMBER_BRACKET_INTIAL","COMPUTED_MEMBER_BRACKET_FINAL","COMPUTED_MEMBER_ASSIGNMENT_TARGET_BRACKET_INTIAL","COMPUTED_MEMBER_ASSIGNMENT_TARGET_BRACKET_FINAL","COMPUTED_PROPERTY_BRACKET_INTIAL","COMPUTED_PROPERTY_BRACKET_FINAL"];for(var i=0;i<separatorNames.length;++i)Sep[separatorNames[i]]={type:separatorNames[i]};Sep.BEFORE_ASSIGN_OP=function(u){return{type:"BEFORE_ASSIGN_OP",op:u}};Sep.AFTER_ASSIGN_OP=function(u){return{type:"AFTER_ASSIGN_OP",op:u}};Sep.BEFORE_BINOP=function(u){return{type:"BEFORE_BINOP",op:u}};Sep.AFTER_BINOP=function(u){return{type:"AFTER_BINOP",op:u}};Sep.BEFORE_POSTFIX=function(u){return{type:"BEFORE_POSTFIX",op:u}};Sep.UNARY=function(u){return{type:"UNARY",op:u}};Sep.AFTER_STATEMENT=function(u){return{type:"AFTER_STATEMENT",node:u}};Sep.BEFORE_FUNCTION_NAME=function(u){return{type:"BEFORE_FUNCTION_NAME",node:u}};var Sep_1=formattedCodegen$1.Sep=Sep,ExtensibleCodeGen=ExtensibleCodeGen_1=formattedCodegen$1.ExtensibleCodeGen=function(){function u(){_classCallCheck$2(this,u)}return _createClass$2(u,[{key:"parenToAvoidBeingDirective",value:function(e,r){return e&&e.type==="ExpressionStatement"&&e.expression.type==="LiteralStringExpression"?seq(this.paren(r.children[0],Sep.PAREN_AVOIDING_DIRECTIVE_BEFORE,Sep.PAREN_AVOIDING_DIRECTIVE_AFTER),this.semiOp()):r}},{key:"t",value:function(e){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return new _coderep.Token(e,r)}},{key:"p",value:function(e,r,a){return(0,_coderep.getPrecedence)(e)<r?this.paren(a,Sep.PRECEDENCE_BEFORE,Sep.PRECEDENCE_AFTER):a}},{key:"getAssignmentExpr",value:function(e){return e?e.containsGroup?this.paren(e,Sep.EXPRESSION_PAREN_BEFORE,Sep.EXPRESSION_PAREN_AFTER):e:empty()}},{key:"paren",value:function(e,r,a,s){return isEmpty(e)?new _coderep.Paren(this.sep(s)):new _coderep.Paren(seq(r?this.sep(r):empty(),e,a?this.sep(a):empty()))}},{key:"brace",value:function(e,r,a,s,o){return isEmpty(e)?new _coderep.Brace(this.sep(o)):new _coderep.Brace(seq(this.sep(a),e,this.sep(s)))}},{key:"bracket",value:function(e,r,a,s){return isEmpty(e)?new _coderep.Bracket(this.sep(s)):new _coderep.Bracket(seq(this.sep(r),e,this.sep(a)))}},{key:"commaSep",value:function(e,r,a){var s=this,o=!0;return e=e.map(function(c){return o?(o=!1,c):seq(s.sep(r),s.t(","),s.sep(a),c)}),seq.apply(void 0,_toConsumableArray$1(e))}},{key:"semiOp",value:function(){return new _coderep.SemiOp}},{key:"sep",value:function(){return empty()}},{key:"reduceArrayExpression",value:function(e,r){var a=this,s=r.elements;if(s.length===0)return this.bracket(empty(),null,null,Sep.ARRAY_EMPTY);var o=this.commaSep(s.map(function(c){return a.getAssignmentExpr(c)}),Sep.ARRAY_BEFORE_COMMA,Sep.ARRAY_AFTER_COMMA);return s.length>0&&s[s.length-1]==null&&(o=seq(o,this.sep(Sep.ARRAY_BEFORE_COMMA),this.t(","),this.sep(Sep.ARRAY_AFTER_COMMA))),this.bracket(o,Sep.ARRAY_INITIAL,Sep.ARRAY_FINAL)}},{key:"reduceAwaitExpression",value:function(e,r){var a=r.expression;return seq(this.t("await"),this.sep(Sep.AWAIT),this.p(e.expression,(0,_coderep.getPrecedence)(e),a))}},{key:"reduceSpreadElement",value:function(e,r){var a=r.expression;return seq(this.t("..."),this.sep(Sep.SPREAD),this.p(e.expression,_coderep.Precedence.Assignment,a))}},{key:"reduceSpreadProperty",value:function(e,r){var a=r.expression;return seq(this.t("..."),this.sep(Sep.SPREAD),this.getAssignmentExpr(a))}},{key:"reduceAssignmentExpression",value:function(e,r){var a=r.binding,s=r.expression,o=a,c=s,l=s.containsIn,m=a.startsWithCurly,E=a.startsWithLetSquareBracket,A=a.startsWithFunctionOrClass;return(0,_coderep.getPrecedence)(e.expression)<(0,_coderep.getPrecedence)(e)&&(c=this.paren(c,Sep.EXPRESSION_PAREN_BEFORE,Sep.EXPRESSION_PAREN_AFTER),l=!1),(0,_objectAssign2.default)(seq(o,this.sep(Sep.BEFORE_ASSIGN_OP("=")),this.t("="),this.sep(Sep.AFTER_ASSIGN_OP("=")),c),{containsIn:l,startsWithCurly:m,startsWithLetSquareBracket:E,startsWithFunctionOrClass:A})}},{key:"reduceAssignmentTargetIdentifier",value:function(e){var r=this.t(e.name);return e.name==="let"&&(r.startsWithLet=!0),r}},{key:"reduceAssignmentTargetWithDefault",value:function(e,r){var a=r.binding,s=r.init;return seq(a,this.sep(Sep.BEFORE_DEFAULT_EQUALS),this.t("="),this.sep(Sep.AFTER_DEFAULT_EQUALS),this.p(e.init,_coderep.Precedence.Assignment,s))}},{key:"reduceCompoundAssignmentExpression",value:function(e,r){var a=r.binding,s=r.expression,o=a,c=s,l=s.containsIn,m=a.startsWithCurly,E=a.startsWithLetSquareBracket,A=a.startsWithFunctionOrClass;return(0,_coderep.getPrecedence)(e.expression)<(0,_coderep.getPrecedence)(e)&&(c=this.paren(c,Sep.EXPRESSION_PAREN_BEFORE,Sep.EXPRESSION_PAREN_AFTER),l=!1),(0,_objectAssign2.default)(seq(o,this.sep(Sep.BEFORE_ASSIGN_OP(e.operator)),this.t(e.operator),this.sep(Sep.AFTER_ASSIGN_OP(e.operator)),c),{containsIn:l,startsWithCurly:m,startsWithLetSquareBracket:E,startsWithFunctionOrClass:A})}},{key:"reduceBinaryExpression",value:function(e,r){var a=r.left,s=r.right,o=a,c=a.startsWithCurly,l=a.startsWithLetSquareBracket,m=a.startsWithFunctionOrClass,E=a.containsIn,A=e.operator==="**";((0,_coderep.getPrecedence)(e.left)<(0,_coderep.getPrecedence)(e)||A&&((0,_coderep.getPrecedence)(e.left)===(0,_coderep.getPrecedence)(e)||e.left.type==="UnaryExpression"))&&(o=this.paren(o,Sep.EXPRESSION_PAREN_BEFORE,Sep.EXPRESSION_PAREN_AFTER),c=!1,l=!1,m=!1,E=!1);var _=s,v=s.containsIn;return((0,_coderep.getPrecedence)(e.right)<(0,_coderep.getPrecedence)(e)||!A&&(0,_coderep.getPrecedence)(e.right)===(0,_coderep.getPrecedence)(e))&&(_=this.paren(_,Sep.EXPRESSION_PAREN_BEFORE,Sep.EXPRESSION_PAREN_AFTER),v=!1),(0,_objectAssign2.default)(seq(o,this.sep(Sep.BEFORE_BINOP(e.operator)),this.t(e.operator),this.sep(Sep.AFTER_BINOP(e.operator)),_),{containsIn:E||v||e.operator==="in",containsGroup:e.operator===",",startsWithCurly:c,startsWithLetSquareBracket:l,startsWithFunctionOrClass:m})}},{key:"reduceBindingWithDefault",value:function(e,r){var a=r.binding,s=r.init;return seq(a,this.sep(Sep.BEFORE_DEFAULT_EQUALS),this.t("="),this.sep(Sep.AFTER_DEFAULT_EQUALS),this.p(e.init,_coderep.Precedence.Assignment,s))}},{key:"reduceBindingIdentifier",value:function(e){var r=this.t(e.name);return e.name==="let"&&(r.startsWithLet=!0),r}},{key:"reduceArrayAssignmentTarget",value:function(e,r){var a=this,s=r.elements,o=r.rest,c=void 0;return s.length===0?c=o==null?empty():seq(this.t("..."),this.sep(Sep.REST),o):(s=s.concat(o==null?[]:[seq(this.t("..."),this.sep(Sep.REST),o)]),c=this.commaSep(s.map(function(l){return a.getAssignmentExpr(l)}),Sep.ARRAY_BEFORE_COMMA,Sep.ARRAY_AFTER_COMMA),s.length>0&&s[s.length-1]==null&&(c=seq(c,this.sep(Sep.ARRAY_BEFORE_COMMA),this.t(","),this.sep(Sep.ARRAY_AFTER_COMMA)))),this.bracket(c,Sep.ARRAY_INITIAL,Sep.ARRAY_FINAL,Sep.ARRAY_EMPTY)}},{key:"reduceArrayBinding",value:function(e,r){var a=this,s=r.elements,o=r.rest,c=void 0;return s.length===0?c=o==null?empty():seq(this.t("..."),this.sep(Sep.REST),o):(s=s.concat(o==null?[]:[seq(this.t("..."),this.sep(Sep.REST),o)]),c=this.commaSep(s.map(function(l){return a.getAssignmentExpr(l)}),Sep.ARRAY_BEFORE_COMMA,Sep.ARRAY_AFTER_COMMA),s.length>0&&s[s.length-1]==null&&(c=seq(c,this.sep(Sep.ARRAY_BEFORE_COMMA),this.t(","),this.sep(Sep.ARRAY_AFTER_COMMA)))),this.bracket(c,Sep.ARRAY_INITIAL,Sep.ARRAY_FINAL,Sep.ARRAY_EMPTY)}},{key:"reduceObjectAssignmentTarget",value:function(e,r){var a=r.properties,s=r.rest,o=void 0;a.length===0?o=s==null?empty():seq(this.t("..."),this.sep(Sep.REST),s):(o=this.commaSep(a,Sep.OBJECT_BEFORE_COMMA,Sep.OBJECT_AFTER_COMMA),o=s==null?o:this.commaSep([o,seq(this.t("..."),this.sep(Sep.REST),s)],Sep.OBJECT_BEFORE_COMMA,Sep.OBJECT_AFTER_COMMA));var c=this.brace(o,e,Sep.OBJECT_BRACE_INITIAL,Sep.OBJECT_BRACE_FINAL,Sep.OBJECT_EMPTY);return c.startsWithCurly=!0,c}},{key:"reduceObjectBinding",value:function(e,r){var a=r.properties,s=r.rest,o=void 0;a.length===0?o=s==null?empty():seq(this.t("..."),this.sep(Sep.REST),s):(o=this.commaSep(a,Sep.OBJECT_BEFORE_COMMA,Sep.OBJECT_AFTER_COMMA),o=s==null?o:this.commaSep([o,seq(this.t("..."),this.sep(Sep.REST),s)],Sep.OBJECT_BEFORE_COMMA,Sep.OBJECT_AFTER_COMMA));var c=this.brace(o,e,Sep.OBJECT_BRACE_INITIAL,Sep.OBJECT_BRACE_FINAL,Sep.OBJECT_EMPTY);return c.startsWithCurly=!0,c}},{key:"reduceAssignmentTargetPropertyIdentifier",value:function(e,r){var a=r.binding,s=r.init;return e.init==null?a:seq(a,this.sep(Sep.BEFORE_DEFAULT_EQUALS),this.t("="),this.sep(Sep.AFTER_DEFAULT_EQUALS),this.p(e.init,_coderep.Precedence.Assignment,s))}},{key:"reduceAssignmentTargetPropertyProperty",value:function(e,r){var a=r.name,s=r.binding;return seq(a,this.sep(Sep.BEFORE_PROP),this.t(":"),this.sep(Sep.AFTER_PROP),s)}},{key:"reduceBindingPropertyIdentifier",value:function(e,r){var a=r.binding,s=r.init;return e.init==null?a:seq(a,this.sep(Sep.BEFORE_DEFAULT_EQUALS),this.t("="),this.sep(Sep.AFTER_DEFAULT_EQUALS),this.p(e.init,_coderep.Precedence.Assignment,s))}},{key:"reduceBindingPropertyProperty",value:function(e,r){var a=r.name,s=r.binding;return seq(a,this.sep(Sep.BEFORE_PROP),this.t(":"),this.sep(Sep.AFTER_PROP),s)}},{key:"reduceBlock",value:function(e,r){var a=r.statements;return this.brace(seq.apply(void 0,_toConsumableArray$1(a)),e,Sep.BLOCK_BRACE_INITIAL,Sep.BLOCK_BRACE_FINAL,Sep.BLOCK_EMPTY)}},{key:"reduceBlockStatement",value:function(e,r){var a=r.block;return seq(a,this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceBreakStatement",value:function(e){return seq(this.t("break"),e.label?seq(this.sep(Sep.BEFORE_JUMP_LABEL),this.t(e.label)):empty(),this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceCallExpression",value:function(e,r){var a=this,s=r.callee,o=r.arguments,c=o.map(function(l,m){return a.p(e.arguments[m],_coderep.Precedence.Assignment,l)});return(0,_objectAssign2.default)(seq(this.p(e.callee,(0,_coderep.getPrecedence)(e),s),this.sep(Sep.CALL),this.paren(this.commaSep(c,Sep.ARGS_BEFORE_COMMA,Sep.ARGS_AFTER_COMMA),Sep.CALL_PAREN_BEFORE,Sep.CALL_PAREN_AFTER,Sep.CALL_PAREN_EMPTY)),{startsWithCurly:s.startsWithCurly,startsWithLet:s.startsWithLet,startsWithLetSquareBracket:s.startsWithLetSquareBracket,startsWithFunctionOrClass:s.startsWithFunctionOrClass})}},{key:"reduceCatchClause",value:function(e,r){var a=r.binding,s=r.body;return seq(this.t("catch"),this.sep(Sep.BEFORE_CATCH_BINDING),this.paren(a,Sep.CATCH_PAREN_BEFORE,Sep.CATCH_PAREN_AFTER),this.sep(Sep.AFTER_CATCH_BINDING),s)}},{key:"reduceClassDeclaration",value:function(e,r){var a=r.name,s=r.super,o=r.elements,c=seq(this.t("class"),e.name.name==="*default*"?empty():seq(this.sep(Sep.BEFORE_CLASS_NAME),a));return s!=null&&(c=seq(c,this.sep(Sep.BEFORE_EXTENDS),this.t("extends"),this.sep(Sep.AFTER_EXTENDS),this.p(e.super,_coderep.Precedence.New,s))),c=seq(c,this.sep(Sep.BEFORE_CLASS_DECLARATION_ELEMENTS),this.brace(seq.apply(void 0,_toConsumableArray$1(o)),e,Sep.CLASS_BRACE_INITIAL,Sep.CLASS_BRACE_FINAL,Sep.CLASS_EMPTY),this.sep(Sep.AFTER_STATEMENT(e))),c}},{key:"reduceClassExpression",value:function(e,r){var a=r.name,s=r.super,o=r.elements,c=this.t("class");return a!=null&&(c=seq(c,this.sep(Sep.BEFORE_CLASS_NAME),a)),s!=null&&(c=seq(c,this.sep(Sep.BEFORE_EXTENDS),this.t("extends"),this.sep(Sep.AFTER_EXTENDS),this.p(e.super,_coderep.Precedence.New,s))),c=seq(c,this.sep(Sep.BEFORE_CLASS_EXPRESSION_ELEMENTS),this.brace(seq.apply(void 0,_toConsumableArray$1(o)),e,Sep.CLASS_EXPRESSION_BRACE_INITIAL,Sep.CLASS_EXPRESSION_BRACE_FINAL,Sep.CLASS_EXPRESSION_BRACE_EMPTY)),c.startsWithFunctionOrClass=!0,c}},{key:"reduceClassElement",value:function(e,r){var a=r.method;return a=seq(this.sep(Sep.BEFORE_CLASS_ELEMENT),a,this.sep(Sep.AFTER_CLASS_ELEMENT)),e.isStatic?seq(this.t("static"),this.sep(Sep.AFTER_STATIC),a):a}},{key:"reduceComputedMemberAssignmentTarget",value:function(e,r){var a=r.object,s=r.expression,o=a.startsWithLetSquareBracket||e.object.type==="IdentifierExpression"&&e.object.name==="let";return(0,_objectAssign2.default)(seq(this.p(e.object,(0,_coderep.getPrecedence)(e),a),this.sep(Sep.COMPUTED_MEMBER_ASSIGNMENT_TARGET),this.bracket(s,Sep.COMPUTED_MEMBER_ASSIGNMENT_TARGET_BRACKET_INTIAL,Sep.COMPUTED_MEMBER_ASSIGNMENT_TARGET_BRACKET_FINAL)),{startsWithLet:a.startsWithLet,startsWithLetSquareBracket:o,startsWithCurly:a.startsWithCurly,startsWithFunctionOrClass:a.startsWithFunctionOrClass})}},{key:"reduceComputedMemberExpression",value:function(e,r){var a=r.object,s=r.expression,o=a.startsWithLetSquareBracket||e.object.type==="IdentifierExpression"&&e.object.name==="let";return(0,_objectAssign2.default)(seq(this.p(e.object,(0,_coderep.getPrecedence)(e),a),this.sep(Sep.COMPUTED_MEMBER_EXPRESSION),this.bracket(s,Sep.COMPUTED_MEMBER_BRACKET_INTIAL,Sep.COMPUTED_MEMBER_BRACKET_FINAL)),{startsWithLet:a.startsWithLet,startsWithLetSquareBracket:o,startsWithCurly:a.startsWithCurly,startsWithFunctionOrClass:a.startsWithFunctionOrClass})}},{key:"reduceComputedPropertyName",value:function(e,r){var a=r.expression;return this.bracket(this.p(e.expression,_coderep.Precedence.Assignment,a),Sep.COMPUTED_PROPERTY_BRACKET_INTIAL,Sep.COMPUTED_PROPERTY_BRACKET_FINAL)}},{key:"reduceConditionalExpression",value:function(e,r){var a=r.test,s=r.consequent,o=r.alternate,c=a.containsIn||o.containsIn,l=a.startsWithCurly,m=a.startsWithLetSquareBracket,E=a.startsWithFunctionOrClass;return(0,_objectAssign2.default)(seq(this.p(e.test,_coderep.Precedence.LogicalOR,a),this.sep(Sep.BEFORE_TERNARY_QUESTION),this.t("?"),this.sep(Sep.AFTER_TERNARY_QUESTION),this.p(e.consequent,_coderep.Precedence.Assignment,s),this.sep(Sep.BEFORE_TERNARY_COLON),this.t(":"),this.sep(Sep.AFTER_TERNARY_COLON),this.p(e.alternate,_coderep.Precedence.Assignment,o)),{containsIn:c,startsWithCurly:l,startsWithLetSquareBracket:m,startsWithFunctionOrClass:E})}},{key:"reduceContinueStatement",value:function(e){return seq(this.t("continue"),e.label?seq(this.sep(Sep.BEFORE_JUMP_LABEL),this.t(e.label)):empty(),this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceDataProperty",value:function(e,r){var a=r.name,s=r.expression;return seq(a,this.sep(Sep.BEFORE_PROP),this.t(":"),this.sep(Sep.AFTER_PROP),this.getAssignmentExpr(s))}},{key:"reduceDebuggerStatement",value:function(e){return seq(this.t("debugger"),this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceDoWhileStatement",value:function(e,r){var a=r.body,s=r.test;return seq(this.t("do"),this.sep(Sep.AFTER_DO),a,this.sep(Sep.BEFORE_DOWHILE_WHILE),this.t("while"),this.sep(Sep.AFTER_DOWHILE_WHILE),this.paren(s,Sep.DO_WHILE_TEST_PAREN_BEFORE,Sep.DO_WHILE_TEST_PAREN_AFTER),this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceEmptyStatement",value:function(e){return seq(this.t(";"),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceExpressionStatement",value:function(e,r){var a=r.expression,s=a.startsWithCurly||a.startsWithLetSquareBracket||a.startsWithFunctionOrClass;return seq(s?this.paren(a,Sep.EXPRESSION_STATEMENT_PAREN_BEFORE,Sep.EXPRESSION_STATEMENT_PAREN_AFTER):a,this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceForInStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return a=e.left.type==="VariableDeclaration"?noIn(markContainsIn(a)):a,(0,_objectAssign2.default)(seq(this.t("for"),this.sep(Sep.AFTER_FORIN_FOR),this.paren(seq(a.startsWithLet?this.paren(a,Sep.FOR_IN_LET_PAREN_BEFORE,Sep.FOR_IN_LET_PAREN_AFTER):a,this.sep(Sep.BEFORE_FORIN_IN),this.t("in"),this.sep(Sep.AFTER_FORIN_FOR),s),Sep.FOR_IN_PAREN_BEFORE,Sep.FOR_IN_PAREN_AFTER),this.sep(Sep.BEFORE_FORIN_BODY),o,this.sep(Sep.AFTER_STATEMENT(e))),{endsWithMissingElse:o.endsWithMissingElse})}},{key:"reduceForOfStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return a=e.left.type==="VariableDeclaration"?noIn(markContainsIn(a)):a,(0,_objectAssign2.default)(seq(this.t("for"),this.sep(Sep.AFTER_FOROF_FOR),this.paren(seq(a.startsWithLet?this.paren(a,Sep.FOR_OF_LET_PAREN_BEFORE,Sep.FOR_OF_LET_PAREN_AFTER):a,this.sep(Sep.BEFORE_FOROF_OF),this.t("of"),this.sep(Sep.AFTER_FOROF_FOR),this.p(e.right,_coderep.Precedence.Assignment,s)),Sep.FOR_OF_PAREN_BEFORE,Sep.FOR_OF_PAREN_AFTER),this.sep(Sep.BEFORE_FOROF_BODY),o,this.sep(Sep.AFTER_STATEMENT(e))),{endsWithMissingElse:o.endsWithMissingElse})}},{key:"reduceForStatement",value:function(e,r){var a=r.init,s=r.test,o=r.update,c=r.body;return a&&(a.startsWithLetSquareBracket&&(a=this.paren(a,Sep.FOR_LET_PAREN_BEFORE,Sep.FOR_LET_PAREN_AFTER)),a=noIn(markContainsIn(a))),(0,_objectAssign2.default)(seq(this.t("for"),this.sep(Sep.AFTER_FOR_FOR),this.paren(seq(a?seq(this.sep(Sep.BEFORE_FOR_INIT),a,this.sep(Sep.AFTER_FOR_INIT)):this.sep(Sep.EMPTY_FOR_INIT),this.t(";"),s?seq(this.sep(Sep.BEFORE_FOR_TEST),s,this.sep(Sep.AFTER_FOR_TEST)):this.sep(Sep.EMPTY_FOR_TEST),this.t(";"),o?seq(this.sep(Sep.BEFORE_FOR_UPDATE),o,this.sep(Sep.AFTER_FOR_UPDATE)):this.sep(Sep.EMPTY_FOR_UPDATE))),this.sep(Sep.BEFORE_FOR_BODY),c,this.sep(Sep.AFTER_STATEMENT(e))),{endsWithMissingElse:c.endsWithMissingElse})}},{key:"reduceForAwaitStatement",value:function(e,r){var a=r.left,s=r.right,o=r.body;return a=e.left.type==="VariableDeclaration"?noIn(markContainsIn(a)):a,(0,_objectAssign2.default)(seq(this.t("for"),this.sep(Sep.AFTER_FOROF_FOR),this.t("await"),this.sep(Sep.AFTER_FORAWAIT_AWAIT),this.paren(seq(a.startsWithLet?this.paren(a,Sep.FOR_OF_LET_PAREN_BEFORE,Sep.FOR_OF_LET_PAREN_AFTER):a,this.sep(Sep.BEFORE_FOROF_OF),this.t("of"),this.sep(Sep.AFTER_FOROF_FOR),this.p(e.right,_coderep.Precedence.Assignment,s)),Sep.FOR_OF_PAREN_BEFORE,Sep.FOR_OF_PAREN_AFTER),this.sep(Sep.BEFORE_FOROF_BODY),o,this.sep(Sep.AFTER_STATEMENT(e))),{endsWithMissingElse:o.endsWithMissingElse})}},{key:"reduceFunctionBody",value:function(e,r){var a=r.directives,s=r.statements;return s.length&&(s[0]=this.parenToAvoidBeingDirective(e.statements[0],s[0])),seq.apply(void 0,_toConsumableArray$1(a).concat([a.length?this.sep(Sep.AFTER_FUNCTION_DIRECTIVES):empty()],_toConsumableArray$1(s)))}},{key:"reduceFunctionDeclaration",value:function(e,r){var a=r.name,s=r.params,o=r.body;return seq(e.isAsync?this.t("async"):empty(),this.t("function"),e.isGenerator?seq(this.sep(Sep.BEFORE_GENERATOR_STAR),this.t("*"),this.sep(Sep.AFTER_GENERATOR_STAR)):empty(),this.sep(Sep.BEFORE_FUNCTION_NAME(e)),e.name.name==="*default*"?empty():a,this.sep(Sep.BEFORE_FUNCTION_PARAMS),this.paren(s,Sep.PARAMETERS_PAREN_BEFORE,Sep.PARAMETERS_PAREN_AFTER,Sep.PARAMETERS_PAREN_EMPTY),this.sep(Sep.BEFORE_FUNCTION_DECLARATION_BODY),this.brace(o,e,Sep.FUNCTION_BRACE_INITIAL,Sep.FUNCTION_BRACE_FINAL,Sep.FUNCTION_EMPTY),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceFunctionExpression",value:function(e,r){var a=r.name,s=r.params,o=r.body,c=seq(e.isAsync?this.t("async"):empty(),this.t("function"),e.isGenerator?seq(this.sep(Sep.BEFORE_GENERATOR_STAR),this.t("*"),this.sep(Sep.AFTER_GENERATOR_STAR)):empty(),this.sep(Sep.BEFORE_FUNCTION_NAME(e)),a||empty(),this.sep(Sep.BEFORE_FUNCTION_PARAMS),this.paren(s,Sep.PARAMETERS_PAREN_BEFORE,Sep.PARAMETERS_PAREN_AFTER,Sep.PARAMETERS_PAREN_EMPTY),this.sep(Sep.BEFORE_FUNCTION_EXPRESSION_BODY),this.brace(o,e,Sep.FUNCTION_EXPRESSION_BRACE_INITIAL,Sep.FUNCTION_EXPRESSION_BRACE_FINAL,Sep.FUNCTION_EXPRESSION_EMPTY));return c.startsWithFunctionOrClass=!0,c}},{key:"reduceFormalParameters",value:function(e,r){var a=r.items,s=r.rest;return this.commaSep(a.concat(s==null?[]:[seq(this.t("..."),this.sep(Sep.REST),s)]),Sep.PARAMETER_BEFORE_COMMA,Sep.PARAMETER_AFTER_COMMA)}},{key:"reduceArrowExpression",value:function(e,r){var a=r.params,s=r.body;(e.params.rest!=null||e.params.items.length!==1||e.params.items[0].type!=="BindingIdentifier")&&(a=this.paren(a,Sep.ARROW_PARAMETERS_PAREN_BEFORE,Sep.ARROW_PARAMETERS_PAREN_AFTER,Sep.ARROW_PARAMETERS_PAREN_EMPTY));var o=!1;return e.body.type==="FunctionBody"?s=this.brace(s,e,Sep.ARROW_BRACE_INITIAL,Sep.ARROW_BRACE_FINAL,Sep.ARROW_BRACE_EMPTY):s.startsWithCurly?s=this.paren(s,Sep.ARROW_BODY_PAREN_BEFORE,Sep.ARROW_BODY_PAREN_AFTER):s.containsIn&&(o=!0),(0,_objectAssign2.default)(seq(e.isAsync?seq(this.t("async"),this.sep(Sep.BEFORE_ARROW_ASYNC_PARAMS)):empty(),a,this.sep(Sep.BEFORE_ARROW),this.t("=>"),this.sep(Sep.AFTER_ARROW),this.p(e.body,_coderep.Precedence.Assignment,s)),{containsIn:o})}},{key:"reduceGetter",value:function(e,r){var a=r.name,s=r.body;return seq(this.t("get"),this.sep(Sep.AFTER_GET),a,this.sep(Sep.BEFORE_GET_PARAMS),this.paren(empty(),null,null,Sep.GETTER_PARAMS),this.sep(Sep.BEFORE_GET_BODY),this.brace(s,e,Sep.GET_BRACE_INTIAL,Sep.GET_BRACE_FINAL,Sep.GET_BRACE_EMPTY))}},{key:"reduceIdentifierExpression",value:function(e){var r=this.t(e.name);return e.name==="let"&&(r.startsWithLet=!0),r}},{key:"reduceIfStatement",value:function(e,r){var a=r.test,s=r.consequent,o=r.alternate;return o&&s.endsWithMissingElse&&(s=this.brace(s,e,Sep.MISSING_ELSE_INTIIAL,Sep.MISSING_ELSE_FINAL,Sep.MISSING_ELSE_EMPTY)),(0,_objectAssign2.default)(seq(this.t("if"),this.sep(Sep.AFTER_IF),this.paren(a,Sep.IF_PAREN_BEFORE,Sep.IF_PAREN_AFTER),this.sep(Sep.AFTER_IF_TEST),s,o?seq(this.sep(Sep.BEFORE_ELSE),this.t("else"),this.sep(Sep.AFTER_ELSE),o):empty(),this.sep(Sep.AFTER_STATEMENT(e))),{endsWithMissingElse:o?o.endsWithMissingElse:!0})}},{key:"reduceImport",value:function(e,r){var a=r.defaultBinding,s=r.namedImports,o=[];return a!=null&&o.push(a),s.length>0&&o.push(this.brace(this.commaSep(s,Sep.NAMED_IMPORT_BEFORE_COMMA,Sep.NAMED_IMPORT_AFTER_COMMA),e,Sep.IMPORT_BRACE_INTIAL,Sep.IMPORT_BRACE_FINAL,Sep.IMPORT_BRACE_EMPTY)),o.length===0?seq(this.t("import"),this.sep(Sep.BEFORE_IMPORT_MODULE),this.t((0,_coderep.escapeStringLiteral)(e.moduleSpecifier)),this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e))):seq(this.t("import"),this.sep(Sep.BEFORE_IMPORT_BINDINGS),this.commaSep(o,Sep.IMPORT_BEFORE_COMMA,Sep.IMPORT_AFTER_COMMA),this.sep(Sep.AFTER_IMPORT_BINDINGS),this.t("from"),this.sep(Sep.AFTER_FROM),this.t((0,_coderep.escapeStringLiteral)(e.moduleSpecifier)),this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceImportNamespace",value:function(e,r){var a=r.defaultBinding,s=r.namespaceBinding;return seq(this.t("import"),this.sep(Sep.BEFORE_IMPORT_NAMESPACE),a==null?empty():seq(a,this.sep(Sep.IMPORT_BEFORE_COMMA),this.t(","),this.sep(Sep.IMPORT_AFTER_COMMA)),this.sep(Sep.BEFORE_IMPORT_STAR),this.t("*"),this.sep(Sep.AFTER_IMPORT_STAR),this.t("as"),this.sep(Sep.AFTER_IMPORT_AS),s,this.sep(Sep.AFTER_NAMESPACE_BINDING),this.t("from"),this.sep(Sep.AFTER_FROM),this.t((0,_coderep.escapeStringLiteral)(e.moduleSpecifier)),this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceImportSpecifier",value:function(e,r){var a=r.binding;return e.name==null?a:seq(this.t(e.name),this.sep(Sep.BEFORE_IMPORT_AS),this.t("as"),this.sep(Sep.AFTER_IMPORT_AS),a)}},{key:"reduceExportAllFrom",value:function(e){return seq(this.t("export"),this.sep(Sep.BEFORE_EXPORT_STAR),this.t("*"),this.sep(Sep.AFTER_EXPORT_STAR),this.t("from"),this.sep(Sep.AFTER_FROM),this.t((0,_coderep.escapeStringLiteral)(e.moduleSpecifier)),this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceExportFrom",value:function(e,r){var a=r.namedExports;return seq(this.t("export"),this.sep(Sep.BEFORE_EXPORT_BINDINGS),this.brace(this.commaSep(a,Sep.EXPORTS_BEFORE_COMMA,Sep.EXPORTS_AFTER_COMMA),e,Sep.EXPORT_BRACE_INITIAL,Sep.EXPORT_BRACE_FINAL,Sep.EXPORT_BRACE_EMPTY),this.sep(Sep.AFTER_EXPORT_FROM_BINDINGS),this.t("from"),this.sep(Sep.AFTER_FROM),this.t((0,_coderep.escapeStringLiteral)(e.moduleSpecifier)),this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceExportLocals",value:function(e,r){var a=r.namedExports;return seq(this.t("export"),this.sep(Sep.BEFORE_EXPORT_BINDINGS),this.brace(this.commaSep(a,Sep.EXPORTS_BEFORE_COMMA,Sep.EXPORTS_AFTER_COMMA),e,Sep.EXPORT_BRACE_INITIAL,Sep.EXPORT_BRACE_FINAL,Sep.EXPORT_BRACE_EMPTY),this.sep(Sep.AFTER_EXPORT_LOCAL_BINDINGS),this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceExport",value:function(e,r){var a=r.declaration;switch(e.declaration.type){case"FunctionDeclaration":case"ClassDeclaration":break;default:a=seq(a,this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}return seq(this.t("export"),this.sep(Sep.AFTER_EXPORT),a)}},{key:"reduceExportDefault",value:function(e,r){var a=r.body;switch(a=a.startsWithFunctionOrClass?this.paren(a,Sep.EXPORT_PAREN_BEFORE,Sep.EXPORT_PAREN_AFTER):a,e.body.type){case"FunctionDeclaration":case"ClassDeclaration":return seq(this.t("export"),this.sep(Sep.EXPORT_DEFAULT),this.t("default"),this.sep(Sep.AFTER_EXPORT_DEFAULT),a);default:return seq(this.t("export"),this.sep(Sep.EXPORT_DEFAULT),this.t("default"),this.sep(Sep.AFTER_EXPORT_DEFAULT),this.p(e.body,_coderep.Precedence.Assignment,a),this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}}},{key:"reduceExportFromSpecifier",value:function(e){return e.exportedName==null?this.t(e.name):seq(this.t(e.name),this.sep(Sep.BEFORE_EXPORT_AS),this.t("as"),this.sep(Sep.AFTER_EXPORT_AS),this.t(e.exportedName))}},{key:"reduceExportLocalSpecifier",value:function(e,r){var a=r.name;return e.exportedName==null?a:seq(a,this.sep(Sep.BEFORE_EXPORT_AS),this.t("as"),this.sep(Sep.AFTER_EXPORT_AS),this.t(e.exportedName))}},{key:"reduceLabeledStatement",value:function(e,r){var a=r.body;return(0,_objectAssign2.default)(seq(this.t(e.label),this.sep(Sep.BEFORE_LABEL_COLON),this.t(":"),this.sep(Sep.AFTER_LABEL_COLON),a),{endsWithMissingElse:a.endsWithMissingElse})}},{key:"reduceLiteralBooleanExpression",value:function(e){return this.t(e.value.toString())}},{key:"reduceLiteralNullExpression",value:function(){return this.t("null")}},{key:"reduceLiteralInfinityExpression",value:function(){return this.t("2e308")}},{key:"reduceLiteralNumericExpression",value:function(e){return new _coderep.NumberCodeRep(e.value)}},{key:"reduceLiteralRegExpExpression",value:function(e){return this.t("/"+e.pattern+"/"+(e.global?"g":"")+(e.ignoreCase?"i":"")+(e.multiLine?"m":"")+(e.dotAll?"s":"")+(e.unicode?"u":"")+(e.sticky?"y":""),!0)}},{key:"reduceLiteralStringExpression",value:function(e){return this.t((0,_coderep.escapeStringLiteral)(e.value))}},{key:"reduceMethod",value:function(e,r){var a=r.name,s=r.params,o=r.body;return seq(e.isAsync?seq(this.t("async"),this.sep(Sep.AFTER_METHOD_ASYNC)):empty(),e.isGenerator?seq(this.t("*"),this.sep(Sep.AFTER_METHOD_GENERATOR_STAR)):empty(),a,this.sep(Sep.AFTER_METHOD_NAME),this.paren(s,Sep.PARAMETERS_PAREN_BEFORE,Sep.PARAMETERS_PAREN_AFTER,Sep.PARAMETERS_PAREN_EMPTY),this.sep(Sep.BEFORE_METHOD_BODY),this.brace(o,e,Sep.METHOD_BRACE_INTIAL,Sep.METHOD_BRACE_FINAL,Sep.METHOD_BRACE_EMPTY))}},{key:"reduceModule",value:function(e,r){var a=r.directives,s=r.items;return s.length&&(s[0]=this.parenToAvoidBeingDirective(e.items[0],s[0])),seq.apply(void 0,_toConsumableArray$1(a).concat([a.length?this.sep(Sep.AFTER_MODULE_DIRECTIVES):empty()],_toConsumableArray$1(s)))}},{key:"reduceNewExpression",value:function(e,r){var a=this,s=r.callee,o=r.arguments,c=o.map(function(m,E){return a.p(e.arguments[E],_coderep.Precedence.Assignment,m)}),l=(0,_coderep.getPrecedence)(e.callee)===_coderep.Precedence.Call?this.paren(s,Sep.NEW_CALLEE_PAREN_BEFORE,Sep.NEW_CALLEE_PAREN_AFTER):this.p(e.callee,(0,_coderep.getPrecedence)(e),s);return seq(this.t("new"),this.sep(Sep.AFTER_NEW),l,o.length===0?this.sep(Sep.EMPTY_NEW_CALL):seq(this.sep(Sep.BEFORE_NEW_ARGS),this.paren(this.commaSep(c,Sep.ARGS_BEFORE_COMMA,Sep.ARGS_AFTER_COMMA),Sep.NEW_PAREN_BEFORE,Sep.NEW_PAREN_AFTER,Sep.NEW_PAREN_EMPTY)))}},{key:"reduceNewTargetExpression",value:function(){return seq(this.t("new"),this.sep(Sep.NEW_TARGET_BEFORE_DOT),this.t("."),this.sep(Sep.NEW_TARGET_AFTER_DOT),this.t("target"))}},{key:"reduceObjectExpression",value:function(e,r){var a=r.properties,s=this.brace(this.commaSep(a,Sep.OBJECT_BEFORE_COMMA,Sep.OBJECT_AFTER_COMMA),e,Sep.OBJECT_BRACE_INITIAL,Sep.OBJECT_BRACE_FINAL,Sep.OBJECT_EMPTY);return s.startsWithCurly=!0,s}},{key:"reduceUpdateExpression",value:function(e,r){var a=r.operand;return e.isPrefix?this.reduceUnaryExpression.apply(this,arguments):(0,_objectAssign2.default)(seq(this.p(e.operand,_coderep.Precedence.New,a),this.sep(Sep.BEFORE_POSTFIX(e.operator)),this.t(e.operator)),{startsWithCurly:a.startsWithCurly,startsWithLetSquareBracket:a.startsWithLetSquareBracket,startsWithFunctionOrClass:a.startsWithFunctionOrClass})}},{key:"reduceUnaryExpression",value:function(e,r){var a=r.operand;return seq(this.t(e.operator),this.sep(Sep.UNARY(e.operator)),this.p(e.operand,(0,_coderep.getPrecedence)(e),a))}},{key:"reduceReturnStatement",value:function(e,r){var a=r.expression;return seq(this.t("return"),a?seq(this.sep(Sep.RETURN),a):empty(),this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceScript",value:function(e,r){var a=r.directives,s=r.statements;return s.length&&(s[0]=this.parenToAvoidBeingDirective(e.statements[0],s[0])),seq.apply(void 0,_toConsumableArray$1(a).concat([a.length?this.sep(Sep.AFTER_SCRIPT_DIRECTIVES):empty()],_toConsumableArray$1(s)))}},{key:"reduceSetter",value:function(e,r){var a=r.name,s=r.param,o=r.body;return seq(this.t("set"),this.sep(Sep.AFTER_SET),a,this.sep(Sep.BEFORE_SET_PARAMS),this.paren(s,Sep.SETTER_PARAM_BEFORE,Sep.SETTER_PARAM_AFTER),this.sep(Sep.BEFORE_SET_BODY),this.brace(o,e,Sep.SET_BRACE_INTIIAL,Sep.SET_BRACE_FINAL,Sep.SET_BRACE_EMPTY))}},{key:"reduceShorthandProperty",value:function(e,r){var a=r.name;return a}},{key:"reduceStaticMemberAssignmentTarget",value:function(e,r){var a=r.object,s=seq(this.p(e.object,(0,_coderep.getPrecedence)(e),a),this.sep(Sep.BEFORE_STATIC_MEMBER_ASSIGNMENT_TARGET_DOT),this.t("."),this.sep(Sep.AFTER_STATIC_MEMBER_ASSIGNMENT_TARGET_DOT),this.t(e.property));return s.startsWithLet=a.startsWithLet,s.startsWithCurly=a.startsWithCurly,s.startsWithLetSquareBracket=a.startsWithLetSquareBracket,s.startsWithFunctionOrClass=a.startsWithFunctionOrClass,s}},{key:"reduceStaticMemberExpression",value:function(e,r){var a=r.object,s=seq(this.p(e.object,(0,_coderep.getPrecedence)(e),a),this.sep(Sep.BEFORE_STATIC_MEMBER_DOT),this.t("."),this.sep(Sep.AFTER_STATIC_MEMBER_DOT),this.t(e.property));return s.startsWithLet=a.startsWithLet,s.startsWithCurly=a.startsWithCurly,s.startsWithLetSquareBracket=a.startsWithLetSquareBracket,s.startsWithFunctionOrClass=a.startsWithFunctionOrClass,s}},{key:"reduceStaticPropertyName",value:function(e){if(_esutils.keyword.isIdentifierNameES6(e.value))return this.t(e.value);var r=parseFloat(e.value);return r>=0&&r.toString()===e.value?new _coderep.NumberCodeRep(r):this.t((0,_coderep.escapeStringLiteral)(e.value))}},{key:"reduceSuper",value:function(){return this.t("super")}},{key:"reduceSwitchCase",value:function(e,r){var a=r.test,s=r.consequent;return seq(this.t("case"),this.sep(Sep.BEFORE_CASE_TEST),a,this.sep(Sep.AFTER_CASE_TEST),this.t(":"),this.sep(Sep.BEFORE_CASE_BODY),seq.apply(void 0,_toConsumableArray$1(s)),this.sep(Sep.AFTER_CASE_BODY))}},{key:"reduceSwitchDefault",value:function(e,r){var a=r.consequent;return seq(this.t("default"),this.sep(Sep.DEFAULT),this.t(":"),this.sep(Sep.BEFORE_CASE_BODY),seq.apply(void 0,_toConsumableArray$1(a)),this.sep(Sep.AFTER_DEFAULT_BODY))}},{key:"reduceSwitchStatement",value:function(e,r){var a=r.discriminant,s=r.cases;return seq(this.t("switch"),this.sep(Sep.BEFORE_SWITCH_DISCRIM),this.paren(a,Sep.SWITCH_DISCRIM_PAREN_BEFORE,Sep.SWITCH_DISCRIM_PAREN_AFTER),this.sep(Sep.BEFORE_SWITCH_BODY),this.brace(seq.apply(void 0,_toConsumableArray$1(s)),e,Sep.SWITCH_BRACE_INTIAL,Sep.SWITCH_BRACE_FINAL,Sep.SWITCH_BRACE_EMPTY),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceSwitchStatementWithDefault",value:function(e,r){var a=r.discriminant,s=r.preDefaultCases,o=r.defaultCase,c=r.postDefaultCases;return seq(this.t("switch"),this.sep(Sep.BEFORE_SWITCH_DISCRIM),this.paren(a,Sep.SWITCH_DISCRIM_PAREN_BEFORE,Sep.SWITCH_DISCRIM_PAREN_AFTER),this.sep(Sep.BEFORE_SWITCH_BODY),this.brace(seq.apply(void 0,_toConsumableArray$1(s).concat([o],_toConsumableArray$1(c))),e,Sep.SWITCH_BRACE_INTIAL,Sep.SWITCH_BRACE_FINAL,Sep.SWITCH_BRACE_EMPTY),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceTemplateExpression",value:function(e,r){var a=r.tag,s=r.elements,o=e.tag==null?empty():seq(this.p(e.tag,(0,_coderep.getPrecedence)(e),a),this.sep(Sep.TEMPLATE_TAG));o=seq(o,this.t("`"));for(var c=0,l=e.elements.length;c<l;++c)if(e.elements[c].type==="TemplateElement"){var m="";c>0&&(m+="}"),m+=e.elements[c].rawValue,c<l-1&&(m+="${"),o=seq(o,this.t(m))}else o=seq(o,this.sep(Sep.BEFORE_TEMPLATE_EXPRESSION),s[c],this.sep(Sep.AFTER_TEMPLATE_EXPRESSION));return o=seq(o,this.t("`")),e.tag!=null&&(o.startsWithCurly=a.startsWithCurly,o.startsWithLet=a.startsWithLet,o.startsWithLetSquareBracket=a.startsWithLetSquareBracket,o.startsWithFunctionOrClass=a.startsWithFunctionOrClass),o}},{key:"reduceTemplateElement",value:function(e){return this.t(e.rawValue)}},{key:"reduceThisExpression",value:function(){return this.t("this")}},{key:"reduceThrowStatement",value:function(e,r){var a=r.expression;return seq(this.t("throw"),this.sep(Sep.THROW),a,this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceTryCatchStatement",value:function(e,r){var a=r.body,s=r.catchClause;return seq(this.t("try"),this.sep(Sep.AFTER_TRY),a,this.sep(Sep.BEFORE_CATCH),s,this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceTryFinallyStatement",value:function(e,r){var a=r.body,s=r.catchClause,o=r.finalizer;return seq(this.t("try"),this.sep(Sep.AFTER_TRY),a,s?seq(this.sep(Sep.BEFORE_CATCH),s):empty(),this.sep(Sep.BEFORE_FINALLY),this.t("finally"),this.sep(Sep.AFTER_FINALLY),o,this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceYieldExpression",value:function(e,r){var a=r.expression;return e.expression==null?this.t("yield"):(0,_objectAssign2.default)(seq(this.t("yield"),this.sep(Sep.YIELD),this.p(e.expression,(0,_coderep.getPrecedence)(e),a)),{containsIn:a.containsIn})}},{key:"reduceYieldGeneratorExpression",value:function(e,r){var a=r.expression;return(0,_objectAssign2.default)(seq(this.t("yield"),this.sep(Sep.BEFORE_YIELD_STAR),this.t("*"),this.sep(Sep.AFTER_YIELD_STAR),this.p(e.expression,(0,_coderep.getPrecedence)(e),a)),{containsIn:a.containsIn})}},{key:"reduceDirective",value:function(e){var r=e.rawValue.match(/(^|[^\\])(\\\\)*"/)?"'":'"';return seq(this.t(r+e.rawValue+r),this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceVariableDeclaration",value:function(e,r){var a=r.declarators;return seq(this.t(e.kind),this.sep(Sep.VARIABLE_DECLARATION),this.commaSep(a,Sep.DECLARATORS_BEFORE_COMMA,Sep.DECLARATORS_AFTER_COMMA))}},{key:"reduceVariableDeclarationStatement",value:function(e,r){var a=r.declaration;return seq(a,this.semiOp(),this.sep(Sep.AFTER_STATEMENT(e)))}},{key:"reduceVariableDeclarator",value:function(e,r){var a=r.binding,s=r.init,o=s&&s.containsIn&&!s.containsGroup;return s&&(s.containsGroup?s=this.paren(s,Sep.EXPRESSION_PAREN_BEFORE,Sep.EXPRESSION_PAREN_AFTER):s=markContainsIn(s)),(0,_objectAssign2.default)(s==null?a:seq(a,this.sep(Sep.BEFORE_INIT_EQUALS),this.t("="),this.sep(Sep.AFTER_INIT_EQUALS),s),{containsIn:o})}},{key:"reduceWhileStatement",value:function(e,r){var a=r.test,s=r.body;return(0,_objectAssign2.default)(seq(this.t("while"),this.sep(Sep.AFTER_WHILE),this.paren(a,Sep.WHILE_TEST_PAREN_BEFORE,Sep.WHILE_TEST_PAREN_AFTER),this.sep(Sep.BEFORE_WHILE_BODY),s,this.sep(Sep.AFTER_STATEMENT(e))),{endsWithMissingElse:s.endsWithMissingElse})}},{key:"reduceWithStatement",value:function(e,r){var a=r.object,s=r.body;return(0,_objectAssign2.default)(seq(this.t("with"),this.sep(Sep.AFTER_WITH),this.paren(a,Sep.WITH_PAREN_BEFORE,Sep.WITH_PAREN_AFTER),this.sep(Sep.BEFORE_WITH_BODY),s,this.sep(Sep.AFTER_STATEMENT(e))),{endsWithMissingElse:s.endsWithMissingElse})}}]),u}();function withoutTrailingLinebreak(u){if(u&&u instanceof _coderep.Seq){for(var n=u.children[u.children.length-1];n instanceof _coderep.Empty;)u.children.pop(),n=u.children[u.children.length-1];n instanceof _coderep.Seq?withoutTrailingLinebreak(n):n instanceof Linebreak&&u.children.pop()}return u}function indent(u,n){var e=void 0;function r(a){a instanceof Linebreak&&(e=a,++a.indentation)}return u.forEach(r),n||--e.indentation,u}FormattedCodeGen_1=formattedCodegen$1.FormattedCodeGen=function(u){_inherits$1(n,u);function n(){return _classCallCheck$2(this,n),_possibleConstructorReturn$1(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return _createClass$2(n,[{key:"parenToAvoidBeingDirective",value:function(r,a){return r&&r.type==="ExpressionStatement"&&r.expression.type==="LiteralStringExpression"?seq(this.paren(a.children[0],Sep.PAREN_AVOIDING_DIRECTIVE_BEFORE,Sep.PAREN_AVOIDING_DIRECTIVE_AFTER),this.semiOp(),this.sep(Sep.AFTER_STATEMENT(r))):a}},{key:"brace",value:function(r,a){if(isEmpty(r))return this.t("{}");switch(a.type){case"ObjectAssignmentTarget":case"ObjectBinding":case"Import":case"ExportFrom":case"ExportLocals":case"ObjectExpression":return new _coderep.Brace(r)}return r=seq(new Linebreak,r),indent(r,!1),new _coderep.Brace(r)}},{key:"reduceDoWhileStatement",value:function(r,a){var s=a.body,o=a.test;return seq(this.t("do"),this.sep(Sep.AFTER_DO),withoutTrailingLinebreak(s),this.sep(Sep.BEFORE_DOWHILE_WHILE),this.t("while"),this.sep(Sep.AFTER_DOWHILE_WHILE),this.paren(o,Sep.DO_WHILE_TEST_PAREN_BEFORE,Sep.DO_WHILE_TEST_PAREN_AFTER),this.semiOp(),this.sep(Sep.AFTER_STATEMENT(r)))}},{key:"reduceIfStatement",value:function(r,a){var s=a.test,o=a.consequent,c=a.alternate;return c&&o.endsWithMissingElse&&(o=this.brace(o,r)),(0,_objectAssign2.default)(seq(this.t("if"),this.sep(Sep.AFTER_IF),this.paren(s,Sep.IF_PAREN_BEFORE,Sep.IF_PAREN_AFTER),this.sep(Sep.AFTER_IF_TEST),withoutTrailingLinebreak(o),c?seq(this.sep(Sep.BEFORE_ELSE),this.t("else"),this.sep(Sep.AFTER_ELSE),withoutTrailingLinebreak(c)):empty(),this.sep(Sep.AFTER_STATEMENT(r))),{endsWithMissingElse:c?c.endsWithMissingElse:!0})}},{key:"reduceSwitchCase",value:function(r,a){var s=a.test,o=a.consequent;return o=indent(withoutTrailingLinebreak(seq.apply(void 0,[this.sep(Sep.BEFORE_CASE_BODY)].concat(_toConsumableArray$1(o)))),!0),seq(this.t("case"),this.sep(Sep.BEFORE_CASE_TEST),s,this.sep(Sep.AFTER_CASE_TEST),this.t(":"),o,this.sep(Sep.AFTER_CASE_BODY))}},{key:"reduceSwitchDefault",value:function(r,a){var s=a.consequent;return s=indent(withoutTrailingLinebreak(seq.apply(void 0,[this.sep(Sep.BEFORE_CASE_BODY)].concat(_toConsumableArray$1(s)))),!0),seq(this.t("default"),this.sep(Sep.DEFAULT),this.t(":"),s,this.sep(Sep.AFTER_DEFAULT_BODY))}},{key:"sep",value:function(r){switch(r.type){case"AWAIT":case"AFTER_FORAWAIT_AWAIT":case"ARRAY_AFTER_COMMA":case"OBJECT_AFTER_COMMA":case"ARGS_AFTER_COMMA":case"PARAMETER_AFTER_COMMA":case"DECLARATORS_AFTER_COMMA":case"NAMED_IMPORT_AFTER_COMMA":case"IMPORT_AFTER_COMMA":case"BEFORE_DEFAULT_EQUALS":case"AFTER_DEFAULT_EQUALS":case"AFTER_PROP":case"BEFORE_JUMP_LABEL":case"BEFORE_CATCH_BINDING":case"AFTER_CATCH_BINDING":case"BEFORE_CLASS_NAME":case"BEFORE_EXTENDS":case"AFTER_EXTENDS":case"BEFORE_CLASS_DECLARATION_ELEMENTS":case"BEFORE_CLASS_EXPRESSION_ELEMENTS":case"AFTER_STATIC":case"BEFORE_TERNARY_QUESTION":case"AFTER_TERNARY_QUESTION":case"BEFORE_TERNARY_COLON":case"AFTER_TERNARY_COLON":case"AFTER_DO":case"BEFORE_DOWHILE_WHILE":case"AFTER_DOWHILE_WHILE":case"AFTER_FORIN_FOR":case"BEFORE_FORIN_IN":case"BEFORE_FORIN_BODY":case"BEFORE_FOROF_OF":case"AFTER_FOROF_FOR":case"BEFORE_FOROF_BODY":case"AFTER_FOR_FOR":case"BEFORE_FOR_TEST":case"BEFORE_FOR_UPDATE":case"BEFORE_FOR_BODY":case"BEFORE_FUNCTION_DECLARATION_BODY":case"BEFORE_FUNCTION_EXPRESSION_BODY":case"BEFORE_ARROW":case"AFTER_ARROW":case"BEFORE_ARROW_ASYNC_PARAMS":case"AFTER_GET":case"BEFORE_GET_BODY":case"AFTER_IF":case"AFTER_IF_TEST":case"BEFORE_ELSE":case"AFTER_ELSE":case"BEFORE_IMPORT_BINDINGS":case"BEFORE_IMPORT_MODULE":case"AFTER_IMPORT_BINDINGS":case"AFTER_FROM":case"BEFORE_IMPORT_NAMESPACE":case"BEFORE_IMPORT_STAR":case"AFTER_IMPORT_STAR":case"AFTER_NAMESPACE_BINDING":case"BEFORE_IMPORT_AS":case"AFTER_IMPORT_AS":case"EXPORTS_AFTER_COMMA":case"BEFORE_EXPORT_STAR":case"AFTER_EXPORT_STAR":case"BEFORE_EXPORT_BINDINGS":case"AFTER_EXPORT_FROM_BINDINGS":case"AFTER_EXPORT":case"AFTER_EXPORT_DEFAULT":case"BEFORE_EXPORT_AS":case"AFTER_EXPORT_AS":case"AFTER_LABEL_COLON":case"AFTER_METHOD_ASYNC":case"BEFORE_METHOD_BODY":case"AFTER_NEW":case"RETURN":case"AFTER_SET":case"BEFORE_SET_BODY":case"BEFORE_SET_PARAMS":case"BEFORE_CASE_TEST":case"BEFORE_SWITCH_DISCRIM":case"BEFORE_SWITCH_BODY":case"THROW":case"AFTER_TRY":case"BEFORE_CATCH":case"BEFORE_FINALLY":case"AFTER_FINALLY":case"VARIABLE_DECLARATION":case"YIELD":case"AFTER_YIELD_STAR":case"BEFORE_INIT_EQUALS":case"AFTER_INIT_EQUALS":case"AFTER_WHILE":case"BEFORE_WHILE_BODY":case"AFTER_WITH":case"BEFORE_WITH_BODY":case"BEFORE_FUNCTION_NAME":case"AFTER_BINOP":case"BEFORE_ASSIGN_OP":case"AFTER_ASSIGN_OP":return this.t(" ");case"AFTER_STATEMENT":switch(r.node.type){case"ForInStatement":case"ForOfStatement":case"ForStatement":case"WhileStatement":case"WithStatement":return empty();default:return new Linebreak}case"AFTER_CLASS_ELEMENT":case"BEFORE_CASE_BODY":case"AFTER_CASE_BODY":case"AFTER_DEFAULT_BODY":return new Linebreak;case"BEFORE_BINOP":return r.op===","?empty():this.t(" ");case"UNARY":return r.op==="delete"||r.op==="void"||r.op==="typeof"?this.t(" "):empty();default:return empty()}}}]),n}(ExtensibleCodeGen);const formattedCodegen=_mergeNamespaces({__proto__:null,get FormattedCodeGen(){return FormattedCodeGen_1},get ExtensibleCodeGen(){return ExtensibleCodeGen_1},get Sep(){return Sep_1},default:formattedCodegen$1},[formattedCodegen$1]),require$$1=getAugmentedNamespace(formattedCodegen);var withLocation$1={},tokenStream$1={},unicode$1={},idContinueBool_1,idContinueLargeRegex_1,idStartBool_1,idStartLargeRegex_1,whitespaceBool_1,whitespaceArray_1;Object.defineProperty(unicode$1,"__esModule",{value:!0});whitespaceArray_1=unicode$1.whitespaceArray=[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279];whitespaceBool_1=unicode$1.whitespaceBool=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!1,!0,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1];idStartLargeRegex_1=unicode$1.idStartLargeRegex=/^[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]$/;idStartBool_1=unicode$1.idStartBool=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!1,!1,!1,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!1,!1,!1,!1];idContinueLargeRegex_1=unicode$1.idContinueLargeRegex=/^[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]$/;idContinueBool_1=unicode$1.idContinueBool=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!1,!1,!1,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!1,!1,!1,!1];const unicode=_mergeNamespaces({__proto__:null,get whitespaceArray(){return whitespaceArray_1},get whitespaceBool(){return whitespaceBool_1},get idStartLargeRegex(){return idStartLargeRegex_1},get idStartBool(){return idStartBool_1},get idContinueLargeRegex(){return idContinueLargeRegex_1},get idContinueBool(){return idContinueBool_1},default:unicode$1},[unicode$1]),require$$0=getAugmentedNamespace(unicode);Object.defineProperty(tokenStream$1,"__esModule",{value:!0});var TokenStream_1=tokenStream$1.TokenStream=void 0,_createClass$1=function(){function u(n,e){for(var r=0;r<e.length;r++){var a=e[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(n,e,r){return e&&u(n.prototype,e),r&&u(n,r),n}}(),needsDoubleDot_1=tokenStream$1.needsDoubleDot=needsDoubleDot,_unicode=require$$0;function _toConsumableArray(u){if(Array.isArray(u)){for(var n=0,e=Array(u.length);n<u.length;n++)e[n]=u[n];return e}else return Array.from(u)}function _classCallCheck$1(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}function isIdentifierPartES6(u){var n=u.charCodeAt(0);return n<128?_unicode.idContinueBool[n]:_unicode.idContinueLargeRegex.test(u)}function needsDoubleDot(u){return u.indexOf(".")<0&&u.indexOf("e")<0&&u.indexOf("x")<0}function renderNumber(u){var n=void 0;return u>=1e3&&u%10===0?(n=u.toString(10),/[eE]/.test(n)?n.replace(/[eE]\+/,"e"):u.toString(10).replace(/0{3,}$/,function(e){return"e"+e.length})):u%1===0?u>1e15&&u<1e20?"0x"+u.toString(16).toUpperCase():u.toString(10).replace(/[eE]\+/,"e"):u.toString(10).replace(/^0\./,".").replace(/[eE]\+/,"e")}TokenStream_1=tokenStream$1.TokenStream=function(){function u(){_classCallCheck$1(this,u),this.result="",this.lastNumber=null,this.lastCodePoint=null,this.lastTokenStr="",this.optionalSemi=!1,this.previousWasRegExp=!1,this.partialHtmlComment=!1}return _createClass$1(u,[{key:"putNumber",value:function(e){var r=renderNumber(e);this.put(r),this.lastNumber=r}},{key:"putOptionalSemi",value:function(){this.optionalSemi=!0}},{key:"putRaw",value:function(e){this.result+=e,this.lastTokenStr=e}},{key:"put",value:function(e,r){if(this.optionalSemi&&(this.optionalSemi=!1,e!=="}"&&(this.result+=";",this.lastCodePoint=";",this.previousWasRegExp=!1)),this.lastNumber!==null&&e.length===1&&e==="."){this.result+=needsDoubleDot(this.lastNumber)?"..":".",this.lastNumber=null,this.lastCodePoint=".";return}var a=[].concat(_toConsumableArray(e)).length;if(a>0){this.lastNumber=null;var s=String.fromCodePoint(e.codePointAt(0)),o=this.lastCodePoint;this.lastCodePoint=String.fromCodePoint(e.codePointAt(a-1));var c=this.previousWasRegExp;this.previousWasRegExp=r,o&&((o==="+"||o==="-")&&o===s||isIdentifierPartES6(o)&&isIdentifierPartES6(s)||o==="/"&&s==="/"||c&&s==="i"||this.partialHtmlComment&&e.startsWith("--"))&&(this.result+=" ")}this.partialHtmlComment=this.lastTokenStr.endsWith("<")&&e==="!",this.result+=e,this.lastTokenStr=e}}]),u}();const tokenStream=_mergeNamespaces({__proto__:null,get TokenStream(){return TokenStream_1},needsDoubleDot:needsDoubleDot_1,default:tokenStream$1},[tokenStream$1]),require$$5=getAugmentedNamespace(tokenStream);Object.defineProperty(withLocation$1,"__esModule",{value:!0});var _createClass=function(){function u(n,e){for(var r=0;r<e.length;r++){var a=e[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(n,e,r){return e&&u(n.prototype,e),r&&u(n,r),n}}(),_get=function u(n,e,r){n===null&&(n=Function.prototype);var a=Object.getOwnPropertyDescriptor(n,e);if(a===void 0){var s=Object.getPrototypeOf(n);return s===null?void 0:u(s,e,r)}else{if("value"in a)return a.value;var o=a.get;return o===void 0?void 0:o.call(r)}},_default=withLocation$1.default=codeGenWithLocation,_shiftReducer=require$$4,_tokenStream=require$$5,_minimalCodegen=require$$0$1,_minimalCodegen2=_interopRequireDefault(_minimalCodegen);function _interopRequireDefault(u){return u&&u.__esModule?u:{default:u}}function _classCallCheck(u,n){if(!(u instanceof n))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(u,n){if(!u)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n&&(typeof n=="object"||typeof n=="function")?n:u}function _inherits(u,n){if(typeof n!="function"&&n!==null)throw new TypeError("Super expression must either be null or a function, not "+typeof n);u.prototype=Object.create(n&&n.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(u,n):u.__proto__=n)}function mightHaveSemi(u){return/(Import)|(Export)|(Statement)|(Directive)|(SwitchCase)|(SwitchDefault)/.test(u)}var TokenStreamWithLocation=function(u){_inherits(n,u);function n(){_classCallCheck(this,n);var e=_possibleConstructorReturn(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return e.line=1,e.column=0,e.startingNodes=[],e.finishingStatements=[],e.lastNumberNode=null,e.locations=new WeakMap,e}return _createClass(n,[{key:"putRaw",value:function(r){var a=this.result.length;_get(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"putRaw",this).call(this,r),this.startNodes(r,a)}},{key:"put",value:function(r,a){if(this.optionalSemi&&r!=="}"){var s=!0,o=!1,c=void 0;try{for(var l=this.finishingStatements[Symbol.iterator](),m;!(s=(m=l.next()).done);s=!0){var E=m.value;++E.end.column,++E.end.offset}}catch(v){o=!0,c=v}finally{try{!s&&l.return&&l.return()}finally{if(o)throw c}}}if(this.finishingStatements=[],this.lastNumber!==null&&r==="."&&(0,_tokenStream.needsDoubleDot)(this.lastNumber)){var A=this.locations.get(this.lastNumberNode).end;++A.column,++A.offset}this.lastNumberNode=null;var _=this.result.length;_get(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"put",this).call(this,r,a),this.startNodes(r,_)}},{key:"startNodes",value:function(r,a){for(var s=/\r\n?|[\n\u2028\u2029]/g,o=!1,c=void 0,l=this.line,m=this.column;c=s.exec(r);)++this.line,this.column=r.length-c.index-c[0].length,o=!0;o||(this.column+=this.result.length-a,m=this.column-r.length);var E=!0,A=!1,_=void 0;try{for(var v=this.startingNodes[Symbol.iterator](),S;!(E=(S=v.next()).done);E=!0){var g=S.value;this.locations.set(g,{start:{line:l,column:m,offset:this.result.length-r.length},end:null})}}catch(D){A=!0,_=D}finally{try{!E&&v.return&&v.return()}finally{if(A)throw _}}this.startingNodes=[]}},{key:"startEmit",value:function(r){this.startingNodes.push(r)}},{key:"finishEmit",value:function(r){this.locations.get(r).end={line:this.line,column:this.column,offset:this.result.length},mightHaveSemi(r.type)&&this.finishingStatements.push(this.locations.get(r))}}]),n}(_tokenStream.TokenStream);function addLocation(u,n){var e=u.emit.bind(u);return n.type==="Script"||n.type==="Module"?u.emit=function(r){for(var a=arguments.length,s=Array(a>1?a-1:0),o=1;o<a;o++)s[o-1]=arguments[o];r.locations.set(n,{start:{line:1,column:0,offset:0},end:null}),e.apply(void 0,[r].concat(s)),r.locations.get(n).end={line:r.line,column:r.column,offset:r.result.length}}:n.type==="LiteralNumericExpression"?u.emit=function(r){for(var a=arguments.length,s=Array(a>1?a-1:0),o=1;o<a;o++)s[o-1]=arguments[o];r.startEmit(n),e.apply(void 0,[r].concat(s)),r.finishEmit(n),r.lastNumberNode=n}:u.emit=function(r){for(var a=arguments.length,s=Array(a>1?a-1:0),o=1;o<a;o++)s[o-1]=arguments[o];r.startEmit(n),e.apply(void 0,[r].concat(s)),r.finishEmit(n)},u}function addLocationToReducer(u){var n=(0,_shiftReducer.adapt)(addLocation,u),e=n.regenerateArrowParams.bind(n);n.regenerateArrowParams=function(a,s){var o=e(a,s);return o!==s&&addLocation(o,a),o};var r=n.parenToAvoidBeingDirective.bind(n);return n.parenToAvoidBeingDirective=function(a,s){var o=r(a,s);return o!==s&&addLocation(o,a),o},n}function codeGenWithLocation(u){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:new _minimalCodegen2.default,e=new TokenStreamWithLocation,r=(0,_shiftReducer.reduce)(addLocationToReducer(n),u);return r.emit(e),{source:e.result,locations:e.locations}}const withLocation=_mergeNamespaces({__proto__:null,default:_default},[withLocation$1]),require$$3=getAugmentedNamespace(withLocation);(function(u){Object.defineProperty(u,"__esModule",{value:!0}),u.codeGenWithLocation=u.SemiOp=u.CommaSep=u.Semi=u.Seq=u.ContainsIn=u.NoIn=u.Brace=u.Bracket=u.Paren=u.NumberCodeRep=u.Token=u.Empty=u.CodeRep=u.escapeStringLiteral=u.getPrecedence=u.Precedence=u.Sep=u.FormattedCodeGen=u.ExtensibleCodeGen=u.MinimalCodeGen=void 0,u.default=E;var n=require$$0$1;Object.defineProperty(u,"MinimalCodeGen",{enumerable:!0,get:function(){return m(n).default}});var e=require$$1;Object.defineProperty(u,"ExtensibleCodeGen",{enumerable:!0,get:function(){return e.ExtensibleCodeGen}}),Object.defineProperty(u,"FormattedCodeGen",{enumerable:!0,get:function(){return e.FormattedCodeGen}}),Object.defineProperty(u,"Sep",{enumerable:!0,get:function(){return e.Sep}});var r=require$$2;Object.defineProperty(u,"Precedence",{enumerable:!0,get:function(){return r.Precedence}}),Object.defineProperty(u,"getPrecedence",{enumerable:!0,get:function(){return r.getPrecedence}}),Object.defineProperty(u,"escapeStringLiteral",{enumerable:!0,get:function(){return r.escapeStringLiteral}}),Object.defineProperty(u,"CodeRep",{enumerable:!0,get:function(){return r.CodeRep}}),Object.defineProperty(u,"Empty",{enumerable:!0,get:function(){return r.Empty}}),Object.defineProperty(u,"Token",{enumerable:!0,get:function(){return r.Token}}),Object.defineProperty(u,"NumberCodeRep",{enumerable:!0,get:function(){return r.NumberCodeRep}}),Object.defineProperty(u,"Paren",{enumerable:!0,get:function(){return r.Paren}}),Object.defineProperty(u,"Bracket",{enumerable:!0,get:function(){return r.Bracket}}),Object.defineProperty(u,"Brace",{enumerable:!0,get:function(){return r.Brace}}),Object.defineProperty(u,"NoIn",{enumerable:!0,get:function(){return r.NoIn}}),Object.defineProperty(u,"ContainsIn",{enumerable:!0,get:function(){return r.ContainsIn}}),Object.defineProperty(u,"Seq",{enumerable:!0,get:function(){return r.Seq}}),Object.defineProperty(u,"Semi",{enumerable:!0,get:function(){return r.Semi}}),Object.defineProperty(u,"CommaSep",{enumerable:!0,get:function(){return r.CommaSep}}),Object.defineProperty(u,"SemiOp",{enumerable:!0,get:function(){return r.SemiOp}});var a=require$$3;Object.defineProperty(u,"codeGenWithLocation",{enumerable:!0,get:function(){return m(a).default}});var s=require$$4,o=m(s),c=require$$5,l=m(n);function m(A){return A&&A.__esModule?A:{default:A}}function E(A){var _=arguments.length>1&&arguments[1]!==void 0?arguments[1]:new l.default,v=new c.TokenStream,S=(0,o.default)(_,A);return S.emit(v),v.result}})(dist);const shiftCodegen=getDefaultExportFromCjs(dist);shiftCodegen.default;const{Pattern:Pattern$1}=strudel;Object.keys(Pattern$1.prototype.factories).concat(["mini"]);const{pure,Pattern,Fraction,stack,slowcat,sequence,timeCat,silence,reify:reify$1}=strudel;var _seedState=0;const randOffset=2e-4;function _nextSeed(){return _seedState++}const applyOptions=u=>(n,e)=>{const a=u.source_[e].options_,s=a==null?void 0:a.operator;if(s){switch(s.type_){case"stretch":const c=Fraction(s.arguments_.amount).inverse();return reify$1(n).fast(c);case"bjorklund":return n.euclid(s.arguments_.pulse,s.arguments_.step,s.arguments_.rotation);case"degradeBy":return reify$1(n)._degradeByWith(rand.early(randOffset*_nextSeed()).segment(1),s.arguments_.amount)}console.warn(`operator "${s.type_}" not implemented`)}if(a!=null&&a.weight)return n;const o=Object.keys(a||{}).filter(c=>c!=="operator");return o.length&&console.warn(`option${o.length>1?"s":""} ${o.map(c=>`"${c}"`).join(", ")} not implemented`),n};function resolveReplications(u){u.source_=u.source_.map(n=>{const{replicate:e,...r}=n.options_||{};return e?{...n,options_:{...r,weight:e},source_:{type_:"pattern",arguments_:{alignment:"h"},source_:[{type_:"element",source_:n.source_,location_:n.location_,options_:{operator:{type_:"stretch",arguments_:{amount:Fraction(e).inverse().toString()}}}}]}}:n})}function patternifyAST(u){switch(u.type_){case"pattern":resolveReplications(u);const n=u.source_.map(patternifyAST).map(applyOptions(u)),e=u.arguments_.alignment;if(e==="v")return stack(...n);if(e==="r")return chooseInWith(rand.early(randOffset*_nextSeed()).segment(1),n);const r=u.source_.some(a=>{var s;return!!((s=a.options_)!=null&&s.weight)});if(!r&&e==="t")return slowcat(...n);if(r){const a=timeCat(...u.source_.map((s,o)=>{var c;return[((c=s.options_)==null?void 0:c.weight)||1,n[o]]}));if(e==="t"){const s=u.source_.reduce((o,c)=>{var l;return o+(((l=c.options_)==null?void 0:l.weight)||1)},0);return a._slow(s)}return a}return sequence(...n);case"element":if(u.source_==="~")return silence;if(typeof u.source_!="object"){if(!u.location_)return console.warn("no location for",u),u.source_;const{start:a,end:s}=u.location_,o=isNaN(Number(u.source_))?u.source_:Number(u.source_);return pure(o).withLocation([a.line,a.column,a.offset],[s.line,s.column,s.offset])}return patternifyAST(u.source_);case"stretch":return patternifyAST(u.source_).slow(u.arguments_.amount);default:return console.warn(`node type "${u.type_}" not implemented -> returning silence`),silence}}const mini=(...u)=>{const n=u.map(e=>{const r=peg$parse(`"${e}"`);return patternifyAST(r)});return sequence(...n)},h=u=>{const n=peg$parse(u);return patternifyAST(n)};Pattern.prototype.define("mini",mini,{composable:!0});Pattern.prototype.define("m",mini,{composable:!0});Pattern.prototype.define("h",h,{composable:!0});function minify(u){return typeof u=="string"?mini(u):reify$1(u)}exports.SyntaxError=peg$SyntaxError;exports.h=h;exports.mini=mini;exports.minify=minify;exports.parse=peg$parse;exports.patternifyAST=patternifyAST;

},{}],11:[function(require,module,exports){
/*
 * https://github.com/antimatter15/heapqueue.js/blob/master/heapqueue.js
 *
 * This implementation is very loosely based off js-priority-queue
 * by Adam Hooper from https://github.com/adamhooper/js-priority-queue
 *
 * The js-priority-queue implementation seemed a teensy bit bloated
 * with its require.js dependency and multiple storage strategies
 * when all but one were strongly discouraged. So here is a kind of
 * condensed version of the functionality with only the features that
 * I particularly needed.
 *
 * Using it is pretty simple, you just create an instance of HeapQueue
 * while optionally specifying a comparator as the argument:
 *
 * var heapq = new HeapQueue();
 *
 * //IF NEGATIVE, RETURN A
 *
 * var customq = new HeapQueue(function(a, b){
 *   // if b > a, return negative
 *   // means that it spits out the smallest item first
 *   return a - b;
 * });
 *
 * Note that in this case, the default comparator is identical to
 * the comparator which is used explicitly in the second queue.
 *
 * Once you've initialized the heapqueue, you can plop some new
 * elements into the queue with the push method (vaguely reminiscent
 * of typical javascript arays)
 *
 * heapq.push(42);
 * heapq.push("kitten");
 *
 * The push method returns the new number of elements of the queue.
 *
 * You can push anything you'd like onto the queue, so long as your
 * comparator function is capable of handling it. The default
 * comparator is really stupid so it won't be able to handle anything
 * other than an number by default.
 *
 * You can preview the smallest item by using peek.
 *
 * heapq.push(-9999);
 * heapq.peek(); // ==> -9999
 *
 * The useful complement to to the push method is the pop method,
 * which returns the smallest item and then removes it from the
 * queue.
 *
 * heapq.push(1);
 * heapq.push(2);
 * heapq.push(3);
 * heapq.pop(); // ==> 1
 * heapq.pop(); // ==> 2
 * heapq.pop(); // ==> 3
 */
const HeapQueue = function(cmp){
  this.cmp = (cmp || function(a, b){ return a - b; });
  this.length = 0;
  this.data = [];
}
HeapQueue.prototype.peek = function(){
  return this.data[0];
};
HeapQueue.prototype.push = function(value){
  this.data.push(value);

  var pos = this.data.length - 1,
  parent, x;

  while(pos > 0){
    parent = (pos - 1) >>> 1;
    if(this.cmp(this.data[pos], this.data[parent]) < 0){
      x = this.data[parent];
      this.data[parent] = this.data[pos];
      this.data[pos] = x;
      pos = parent;
    }else break;
  }
  return this.length++;
};
HeapQueue.prototype.pop = function(){
  var last_val = this.data.pop(),
  ret = this.data[0];
  if(this.data.length > 0){
    this.data[0] = last_val;
    var pos = 0,
    last = this.data.length - 1,
    left, right, minIndex, x;
    while(1){
      left = (pos << 1) + 1;
      right = left + 1;
      minIndex = pos;
      if(left <= last && this.cmp(this.data[left], this.data[minIndex]) < 0) minIndex = left;
      if(right <= last && this.cmp(this.data[right], this.data[minIndex]) < 0) minIndex = right;
      if(minIndex !== pos){
        x = this.data[minIndex];
        this.data[minIndex] = this.data[pos];
        this.data[pos] = x;
        pos = minIndex;
      }else break;
    }
  } else {
    ret = last_val;
  }
  this.length--;
  return ret;
};

module.exports = HeapQueue

},{}],12:[function(require,module,exports){

/**
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

module.exports = function Realm (scope, parentElement) {
  const frame = document.createElement('iframe');
  frame.style.cssText = 'position:absolute;left:0;top:-999px;width:1px;height:1px;';
  parentElement.appendChild(frame);
  const win = frame.contentWindow;
  const doc = win.document;
  let vars = 'var window,$hook';
  for (const i in win) {
    if (!(i in scope) && i !== 'eval') {
      vars += ',';
      vars += i;
    }
  }
  for (const i in scope) {
    vars += ',';
    vars += i;
    vars += '=self.';
    vars += i;
  }
  const script = doc.createElement('script');
  script.appendChild(doc.createTextNode(
    `function $hook(self,console) {"use strict";
        ${vars};return function() {return eval(arguments[0])}}`
  ));
  doc.body.appendChild(script);
  this.exec = win.$hook.call(scope, scope, console);
}

},{}],13:[function(require,module,exports){
const __proxy = require( './workletProxy.js' )
const effectProto = require( './fx/effect.js' )

module.exports = function( Gibberish ) {
  const proxy = __proxy( Gibberish )
  
  const factory = function( ugen, graph, __name, values, cb=null, shouldProxy = true ) {
    if( Gibberish.mode === 'processor' )
      ugen.callback = cb === null ? Gibberish.genish.gen.createCallback( graph, Gibberish.memory, false, true ) : cb
    else
      ugen.callback = { out:[] }

    let name = Array.isArray( __name ) ? __name[ __name.length - 1 ] : __name

    Object.assign( ugen, {
      //type: 'ugen',
      id: values.id || Gibberish.utilities.getUID(), 
      ugenName: name + '_',
      graph: graph,
      inputNames: ugen.inputNames || new Set( Gibberish.genish.gen.parameters ),
      isStereo: Array.isArray( graph ),
      dirty: true,
      __properties__:values,
      __addresses__:{}
    })

    ugen.ugenName += ugen.id
    if( Gibberish.mode === 'processor' ) {
      ugen.callback.ugenName = ugen.ugenName // XXX hacky
      ugen.callback.id = ugen.id
    }

    //console.log( 'ugen name/id:', ugen.ugenName, ugen.id )
    //console.log( 'callback name/id:', ugen.callback.ugenName, ugen.callback.id )

    for( let param of ugen.inputNames ) {
      if( param === 'memory' ) continue

      let value = values[ param ],
          isNumber = typeof value === 'object' || isNaN( value ) ? false : true,
          idx

      if( isNumber ) { 
        idx = Gibberish.memory.alloc( 1 )
        Gibberish.memory.heap[ idx ] = value
        ugen.__addresses__[ param ] = idx
      }

      // TODO: do we need to check for a setter?
      let desc = Object.getOwnPropertyDescriptor( ugen, param ),
          setter

      if( desc !== undefined ) {
        setter = desc.set
      }

      Object.defineProperty( ugen, param, {
        configurable:true,
        get() { 
          if( isNumber ) {
            return Gibberish.memory.heap[ idx ]
          }else{
            return value 
          }
        },
        set( v ) {
          //if( param === 'input' ) console.log( 'INPUT:', v, isNumber )
          if( value !== v ) {
            if( setter !== undefined ) setter( v )
            if( typeof v === 'number' ) {
              Gibberish.memory.heap[ idx ] = value = v
              if( isNumber === false ) Gibberish.dirty( ugen )
              isNumber = true
            }else{
              value = v
              /*if( isNumber === true )*/ Gibberish.dirty( ugen )
              //console.log( 'switching from number:', param, value )
              isNumber = false
            }
          }
        }
      })
    }

    // add bypass 
    if( effectProto.isPrototypeOf( ugen ) ) {
      let value = ugen.bypass
      Object.defineProperty( ugen, 'bypass', {
        configurable:true,
        get() { return value },
        set( v ) {
          if( value !== v ) {
            Gibberish.dirty( ugen )
            value = v
          }
        }
      })

    }

    if( ugen.__requiresRecompilation !== undefined ) {
      ugen.__requiresRecompilation.forEach( prop => {
        let value = values[ prop ]
        let isNumber = !isNaN( value )

        Object.defineProperty( ugen, prop, {
          configurable:true,
          get() { 
            if( isNumber ) {
              let idx = ugen.__addresses__[ prop ]
              return Gibberish.memory.heap[ idx ]
            }else{
              //console.log( 'returning:', prop, value, Gibberish.mode )
              return value 
            }
          },
          set( v ) {
            if( value !== v ) {
              if( typeof v === 'number' ) {
                let idx = ugen.__addresses__[ prop ]
                if( idx === undefined ){
                  idx = Gibberish.memory.alloc( 1 )
                  ugen.__addresses__[ prop ] = idx
                }
                value = values[ prop ] = Gibberish.memory.heap[ idx ] = v
                isNumber = true
              }else{
                value = values[ prop ] = v
                isNumber = false
                //console.log( 'setting ugen', value, Gibberish.mode )
                Gibberish.dirty( ugen )
              }

              //console.log( 'SETTING REDO GRAPH', prop, Gibberish.mode )
              
              // needed for filterType at the very least, becauae the props
              // are reused when re-creating the graph. This seems like a cheaper
              // way to solve this problem.
              //values[ prop ] = v

              this.__redoGraph()
            }
          }
        })
      })
    }

    // will only create proxy if worklets are being used
    // otherwise will return unaltered ugen

    if( values.shouldAddToUgen === true ) Object.assign( ugen, values )

    return shouldProxy ? proxy( __name, values, ugen ) : ugen
  }

  factory.getUID = () => { return Gibberish.utilities.getUID() }

  return factory
}

},{"./fx/effect.js":28,"./workletProxy.js":74}],14:[function(require,module,exports){
let g = require( 'genish.js' )
 
// constructor for schroeder allpass filters
let allPass = function( _input, length=500, feedback=.5 ) {
  let index  = g.counter( 1,0,length ),
      buffer = g.data( length ),
      bufferSample = g.peek( buffer, index, { interp:'none', mode:'samples' }),
      out = g.memo( g.add( g.mul( -1, _input), bufferSample ) )
                
  g.poke( buffer, g.add( _input, g.mul( bufferSample, feedback ) ), index )
 
  return out
}

module.exports = allPass

},{"genish.js":114}],15:[function(require,module,exports){
let g = require( 'genish.js' ),
    filter = require( './filter.js' )

module.exports = function( Gibberish ) {

  const genish = g
  Gibberish.genish.biquad = ( input, __cutoff, __Q, mode, isStereo ) => {
    'use jsdsp'
    let in1a0,x0a1,x1a2,y0b0,y1b1,
        in1a0_r,x0a1_r,x1a2_r,y0b0_r,y1b1_r,
        c

    let returnValue
    
    const x = genish.data([ 0,0 ], 1, { meta:true })
    const y = genish.data([ 0,0 ], 1, { meta:true })
    const a = genish.data([ 0,0,0 ], 1, { meta:true })
    const b = genish.data([ 0,0 ], 1, { meta:true })
    
    const Q = g.min( .5 + __Q * 22, 22.5 ) 
    const cutoff = g.max( .005, g.min( __cutoff,.995 ) ) * g.gen.samplerate / 4 
    //let w0 = g.memo( g.mul( 2 * Math.PI, g.div( g.max(.005, g.min(cutoff,.995)),  g.gen.samplerate ) ) ),
    let w0 =  (2 * Math.PI) * (cutoff / g.gen.samplerate),
        sinw0 = g.sin( w0 ),
        cosw0 = g.cos( w0 ),
        alpha = sinw0 / ( 2 * Q )

    //let w0 = g.memo( g.mul( 2 * Math.PI, g.div( cutoff,  g.gen.samplerate ) ) ),
      
    let oneMinusCosW = 1 - cosw0

    /******** process coefficients ********/
    switch( mode ) {
      case 1:
        a[0] = (1 + cosw0) / 2
        a[1] = (1 + cosw0) * -1
        a[2] = a[0]
        c    = 1 + alpha
        b[0] = -2 * cosw0
        b[1] = 1 - alpha
        break;
      case 2:
        a[0] = Q * alpha
        a[1] = 0
        a[2] = a[0] * -1
        c    = 1 + alpha
        b[0] = -2 * cosw0
        b[1] = 1 - alpha
        break;
      default: // LP
        a[0] = oneMinusCosW / 2
        a[1] = oneMinusCosW
        a[2] = a[0]
        c    = 1 + alpha
        b[0] = -2 * cosw0
        b[1] = 1 - alpha
    }

    a[0] = a[0] / c; a[1] = a[1] / c; a[2] = a[2] / c
    b[0] = b[0] / c; b[1] = b[1] / c

    /******** end coefficients ********/

    /****** left / mono output ********/

    let l = isStereo === true ? input[0] : input
    in1a0 = l * a[0]
    x0a1  = x[0] * a[1]
    x1a2  = x[1] * a[2]

    x[1] = x[0] 
    x[0] = l

    let sumLeft = in1a0 + x0a1 + x1a2

    y0b0 = y[0] * b[0]
    y1b1 = y[1] * b[1]
    y[1] = y[0] 

    let sumRight = y0b0 + y1b1

    let diff = sumLeft - sumRight

    y[0] = diff
    
    /******** end left/mono **********/

    if( isStereo ) {
      const xr = genish.data([ 0,0 ], 1, { meta:true })
      const yr = genish.data([ 0,0 ], 1, { meta:true })
      //let x1_1 = g.history(), x2_1 = g.history(), y1_1 = g.history(), y2_1 = g.history()

      const r = input[1] 
      in1a0_r = r * a[0] //g.mul( x1_1.in( input[1] ), a0 )
      x0a1_r  = xr[0] * a[1]//g.mul( x2_1.in( x1_1.out ), a1 )
      x1a2_r  = xr[1] * a[2]//g.mul( x2_1.out,            a2 )

      xr[1]   = xr[0]
      xr[0] = r

      const sumLeft_r = in1a0_r + x0a1_r + x1a2_r

      y0b0_r = yr[0] * b[0]//g.mul( y2_1.in( y1_1.out ), b1 )
      y1b1_r = yr[1] * b[1]//g.mul( y2_1.out, b2 )
      yr[1] = yr[0]

      const sumRight_r = y0b0_r + y1b1_r

      const diff_r = sumLeft_r - sumRight_r

      yr[0] = diff_r
      
      returnValue = [ diff, diff_r ]
    }else{
      returnValue = diff
    }

    return returnValue
  }

  let Biquad = inputProps => {
    const biquad = Object.create( filter )
    const props = Object.assign( {}, Biquad.defaults, inputProps ) 
    let __out

    Object.assign( biquad, props )

    biquad.__createGraph = function() {
      let isStereo = false
      if( __out === undefined ) {
        isStereo = props.input !== undefined && props.input.isStereo !== undefined ? props.input.isStereo : false 
      }else{
        isStereo = __out.input.isStereo
        __out.isStereo = isStereo
      }
      biquad.graph = Gibberish.genish.biquad( g.in('input'), g.in('cutoff'),  g.in('Q'), biquad.mode, isStereo )
    }

    biquad.__createGraph()
    biquad.__requiresRecompilation = [ 'mode', 'input' ]

    __out = Gibberish.factory(
      biquad,
      biquad.graph,
      ['filters','Filter12Biquad'], 
      props
    )

    return __out
  }

  Biquad.defaults = {
    input:0,
    Q: .15,
    cutoff:.05,
    mode:0
  }

  return Biquad

}


},{"./filter.js":18,"genish.js":114}],16:[function(require,module,exports){
let g = require( 'genish.js' )

let combFilter = function( _input, combLength, damping=.5*.4, feedbackCoeff=.84 ) {
  let lastSample   = g.history(),
  	  readWriteIdx = g.counter( 1,0,combLength ),
      combBuffer   = g.data( combLength ),
	    out          = g.peek( combBuffer, readWriteIdx, { interp:'none', mode:'samples' }),
      storeInput   = g.memo( g.add( g.mul( out, g.sub( 1, damping)), g.mul( lastSample.out, damping ) ) )
      
  lastSample.in( storeInput )
 
  g.poke( combBuffer, g.add( _input, g.mul( storeInput, feedbackCoeff ) ), readWriteIdx )
 
  return out
}

module.exports = combFilter

},{"genish.js":114}],17:[function(require,module,exports){
const g = require( 'genish.js' ),
      filter = require( './filter.js' )

const genish = g
module.exports = function( Gibberish ) {
  Gibberish.genish.diodeZDF = ( input, __Q, __freq, saturation, isStereo=false ) => {
    const iT = 1 / g.gen.samplerate,
          kz1 = g.history(0),
          kz2 = g.history(0),
          kz3 = g.history(0),
          kz4 = g.history(0)

    let   ka1 = 1.0,
          ka2 = 0.5,
          ka3 = 0.5,
          ka4 = 0.5,
          kindx = 0   

    const freq = g.mul( g.max(.005, g.min( __freq, .995)),  genish.gen.samplerate / 2 )
    //const freq = g.max(.005, g.min( __freq, .995))

    // XXX this is where the magic number hapens for Q...
    const Q = g.memo( g.add( .5, g.mul( __Q, g.add( 5, g.sub( 5, g.mul( g.div( freq, 20000  ), 5 ) ) ) ) ) )
    // kwd = 2 * $M_PI * acf[kindx]
    const kwd = g.memo( g.mul( Math.PI * 2, freq ) )

    // kwa = (2/iT) * tan(kwd * iT/2) 
    const kwa =g.memo( g.mul( 2/iT, g.tan( g.mul( kwd, iT/2 ) ) ) )

    // kG  = kwa * iT/2 
    const kg = g.memo( g.mul( kwa, iT/2 ) )
    
    const kG4 = g.memo( g.mul( .5, g.div( kg, g.add( 1, kg ) ) ) )
    const kG3 = g.memo( g.mul( .5, g.div( kg, g.sub( g.add( 1, kg ), g.mul( g.mul( .5, kg ), kG4 ) ) ) ) )
    const kG2 = g.memo( g.mul( .5, g.div( kg, g.sub( g.add( 1, kg ), g.mul( g.mul( .5, kg ), kG3 ) ) ) ) )
    const kG1 = g.memo( g.div( kg, g.sub( g.add( 1, kg ), g.mul( kg, kG2 ) ) ) )

    const kGAMMA = g.memo( g.mul( g.mul( kG4, kG3 ) , g.mul( kG2, kG1 ) ) )

    const kSG1 = g.memo( g.mul( g.mul( kG4, kG3 ), kG2 ) ) 

    const kSG2 = g.memo( g.mul( kG4, kG3) )  
    const kSG3 = kG4 
    let kSG4 = 1.0 
    // kk = 4.0*(kQ - 0.5)/(25.0 - 0.5)
    const kalpha = g.memo( g.div( kg, g.add(1.0, kg) ) )

    const kbeta1 = g.memo( g.div( 1.0, g.sub( g.add( 1, kg ), g.mul( kg, kG2 ) ) ) )
    const kbeta2 = g.memo( g.div( 1.0, g.sub( g.add( 1, kg ), g.mul( g.mul( .5, kg ), kG3 ) ) ) )
    const kbeta3 = g.memo( g.div( 1.0, g.sub( g.add( 1, kg ), g.mul( g.mul( .5, kg ), kG4 ) ) ) )
    const kbeta4 = g.memo( g.div( 1.0, g.add( 1, kg ) ) ) 

    const kgamma1 = g.memo( g.add( 1, g.mul( kG1, kG2 ) ) )
    const kgamma2 = g.memo( g.add( 1, g.mul( kG2, kG3 ) ) )
    const kgamma3 = g.memo( g.add( 1, g.mul( kG3, kG4 ) ) )

    const kdelta1 = kg
    const kdelta2 = g.memo( g.mul( 0.5, kg ) )
    const kdelta3 = g.memo( g.mul( 0.5, kg ) )

    const kepsilon1 = kG2
    const kepsilon2 = kG3
    const kepsilon3 = kG4

    const klastcut = freq

    //;; feedback inputs 
    const kfb4 = g.memo( g.mul( kbeta4 , kz4.out ) ) 
    const kfb3 = g.memo( g.mul( kbeta3, g.add( kz3.out, g.mul( kfb4, kdelta3 ) ) ) )
    const kfb2 = g.memo( g.mul( kbeta2, g.add( kz2.out, g.mul( kfb3, kdelta2 ) ) ) )

    //;; feedback process

    const kfbo1 = g.memo( g.mul( kbeta1, g.add( kz1.out, g.mul( kfb2, kdelta1 ) ) ) ) 
    const kfbo2 = g.memo( g.mul( kbeta2, g.add( kz2.out, g.mul( kfb3, kdelta2 ) ) ) ) 
    const kfbo3 = g.memo( g.mul( kbeta3, g.add( kz3.out, g.mul( kfb4, kdelta3 ) ) ) ) 
    const kfbo4 = kfb4

    const kSIGMA = g.memo( 
      g.add( 
        g.add( 
          g.mul( kSG1, kfbo1 ), 
          g.mul( kSG2, kfbo2 )
        ), 
        g.add(
          g.mul( kSG3, kfbo3 ), 
          g.mul( kSG4, kfbo4 )
        ) 
      ) 
    )

    //const kSIGMA = 1
    //;; non-linear processing
    //if (knlp == 1) then
    //  kin = (1.0 / tanh(ksaturation)) * tanh(ksaturation * kin)
    //elseif (knlp == 2) then
    //  kin = tanh(ksaturation * kin) 
    //endif
    //
    //const kin = input 
    let kin = isStereo === true ? g.add( input[0], input[1] ) : input//g.memo( g.mul( g.div( 1, g.tanh( saturation ) ), g.tanh( g.mul( saturation, input ) ) ) )
    kin = g.tanh( g.mul( saturation, kin ) )

    const kun = g.div( g.sub( kin, g.mul( Q, kSIGMA ) ), g.add( 1, g.mul( Q, kGAMMA ) ) )
    //const kun = g.div( 1, g.add( 1, g.mul( Q, kGAMMA ) ) )
        //(kin - kk * kSIGMA) / (1.0 + kk * kGAMMA)

    //;; 1st stage
    let kxin = g.memo( g.add( g.add( g.mul( kun, kgamma1 ), kfb2), g.mul( kepsilon1, kfbo1 ) ) )
    // (kun * kgamma1 + kfb2 + kepsilon1 * kfbo1)
    let kv = g.memo( g.mul( g.sub( g.mul( ka1, kxin ), kz1.out ), kalpha ) )
    //kv = (ka1 * kxin - kz1) * kalpha 
    let klp = g.add( kv, kz1.out )
    //klp = kv + kz1
    kz1.in( g.add( klp, kv ) ) 
    //kz1 = klp + kv

        //;; 2nd stage
    //kxin = (klp * kgamma2 + kfb3 + kepsilon2 * kfbo2)
    //kv = (ka2 * kxin - kz2) * kalpha 
    //klp = kv + kz2
    //kz2 = klp + kv

    kxin = g.memo( g.add( g.add( g.mul( klp, kgamma2 ), kfb3), g.mul( kepsilon2, kfbo2 ) ) )
    // (kun * kgamma1 + kfb2 + kepsilon1 * kfbo1)
    kv = g.memo( g.mul( g.sub( g.mul( ka2, kxin ), kz2.out ), kalpha ) )
    //kv = (ka1 * kxin - kz1) * kalpha 
    klp = g.add( kv, kz2.out ) 
    //klp = kv + kz1
    kz2.in( g.add( klp, kv ) ) 
    //kz1 = klp + kv

    //;; 3rd stage
    //kxin = (klp * kgamma3 + kfb4 + kepsilon3 * kfbo3)
    //kv = (ka3 * kxin - kz3) * kalpha 
    //klp = kv + kz3
    //kz3 = klp + kv

    kxin = g.memo( g.add( g.add( g.mul( klp, kgamma3 ), kfb4), g.mul( kepsilon3, kfbo3 ) ) )
    // (kun * kgamma1 + kfb2 + kepsilon1 * kfbo1)
    kv = g.memo( g.mul( g.sub( g.mul( ka3, kxin ), kz3.out ), kalpha ) )
    //kv = (ka1 * kxin - kz1) * kalpha 
    klp = g.add( kv, kz3.out )
    //klp = kv + kz1
    kz3.in( g.add( klp, kv ) )
    //kz1 = klp + kv

    //;; 4th stage
    //kv = (ka4 * klp - kz4) * kalpha 
    //klp = kv + kz4
    //kz4 = klp + kv

    // (kun * kgamma1 + kfb2 + kepsilon1 * kfbo1)
    kv = g.memo( g.mul( g.sub( g.mul( ka4, kxin ), kz4.out ), kalpha ) )
    //kv = (ka1 * kxin - kz1) * kalpha 
    klp = g.add( kv, kz4.out )
    //klp = kv + kz1
    kz4.in( g.add( klp, kv ) )

    //kz1 = klp + kv
    if( isStereo ) {
      //let polesR = g.data([ 0,0,0,0 ], 1, { meta:true }),
      //    rezzR = g.clamp( g.mul( polesR[3], rez ) ),
      //    outputR = g.sub( input[1], rezzR )         

      //polesR[0] = g.add( polesR[0], g.mul( g.add( g.mul(-1, polesR[0] ), outputR   ), cutoff ))
      //polesR[1] = g.add( polesR[1], g.mul( g.add( g.mul(-1, polesR[1] ), polesR[0] ), cutoff ))
      //polesR[2] = g.add( polesR[2], g.mul( g.add( g.mul(-1, polesR[2] ), polesR[1] ), cutoff ))
      //polesR[3] = g.add( polesR[3], g.mul( g.add( g.mul(-1, polesR[3] ), polesR[2] ), cutoff ))

      //let right = g.switch( isLowPass, polesR[3], g.sub( outputR, polesR[3] ) )

      //returnValue = [left, right]
    }else{
     // returnValue = klp
    }
    //returnValue = klp
    
    return klp
 }

  const DiodeZDF = inputProps => {
    const zdf      = Object.create( filter )
    const props    = Object.assign( {}, DiodeZDF.defaults, filter.defaults, inputProps )
    const isStereo = props.input.isStereo 

    Object.assign( zdf, props )

    const __out = Gibberish.factory(
      zdf, 
      Gibberish.genish.diodeZDF( g.in('input'), g.in('Q'), g.in('cutoff'), g.in('saturation'), isStereo ), 
      ['filters','Filter24TB303'],
      props
    )

    return __out 
  }

  DiodeZDF.defaults = {
    input:0,
    Q: .65,
    saturation: 1,
    cutoff:.5 
  }

  return DiodeZDF

}

},{"./filter.js":18,"genish.js":114}],18:[function(require,module,exports){
let ugen = require( '../ugen.js' )()

let filter = Object.create( ugen )

Object.assign( filter, {
  defaults: { bypass:false } 
})

module.exports = filter

},{"../ugen.js":72}],19:[function(require,module,exports){
let g = require( 'genish.js' ),
    filter = require( './filter.js' )

module.exports = function( Gibberish ) {

  Gibberish.genish.filter24 = ( input, _rez, _cutoff, isLowPass, isStereo=false ) => {
    let returnValue,
        polesL = g.data([ 0,0,0,0 ], 1, { meta:true }),
        peekProps = { interp:'none', mode:'simple' },
        rez = g.memo( g.mul( _rez, 5 ) ),
        cutoff = g.memo( g.div( _cutoff, 11025 ) ),
        rezzL = g.clamp( g.mul( polesL[3], rez ) ),
        outputL = g.sub( isStereo ? input[0] : input, rezzL ) 

    polesL[0] = g.add( polesL[0], g.mul( g.add( g.mul(-1, polesL[0] ), outputL   ), cutoff ))
    polesL[1] = g.add( polesL[1], g.mul( g.add( g.mul(-1, polesL[1] ), polesL[0] ), cutoff ))
    polesL[2] = g.add( polesL[2], g.mul( g.add( g.mul(-1, polesL[2] ), polesL[1] ), cutoff ))
    polesL[3] = g.add( polesL[3], g.mul( g.add( g.mul(-1, polesL[3] ), polesL[2] ), cutoff ))
    
    let left = g.switch( isLowPass, polesL[3], g.sub( outputL, polesL[3] ) )

    if( isStereo ) {
      let polesR = g.data([ 0,0,0,0 ], 1, { meta:true }),
          rezzR = g.clamp( g.mul( polesR[3], rez ) ),
          outputR = g.sub( input[1], rezzR )         

      polesR[0] = g.add( polesR[0], g.mul( g.add( g.mul(-1, polesR[0] ), outputR   ), cutoff ))
      polesR[1] = g.add( polesR[1], g.mul( g.add( g.mul(-1, polesR[1] ), polesR[0] ), cutoff ))
      polesR[2] = g.add( polesR[2], g.mul( g.add( g.mul(-1, polesR[2] ), polesR[1] ), cutoff ))
      polesR[3] = g.add( polesR[3], g.mul( g.add( g.mul(-1, polesR[3] ), polesR[2] ), cutoff ))

      let right = g.switch( isLowPass, polesR[3], g.sub( outputR, polesR[3] ) )

      returnValue = [left, right]
    }else{
      returnValue = left
    }

    return returnValue
  }

  let Filter24 = inputProps => {
    let filter24   = Object.create( filter )
    let props    = Object.assign( {}, Filter24.defaults, filter.defaults, inputProps )
    let isStereo = props.input.isStereo 

    const __out = Gibberish.factory(
      filter24, 
      Gibberish.genish.filter24( g.in('input'), g.in('Q'), g.in('cutoff'), g.in('isLowPass'), isStereo ), 
      ['filters','Filter24Classic'],
      props
    )

    return __out
  }


  Filter24.defaults = {
    input:0,
    Q: .25,
    cutoff: 880,
    isLowPass:1
  }

  return Filter24

}


},{"./filter.js":18,"genish.js":114}],20:[function(require,module,exports){
module.exports = function( Gibberish ) {

  const g = Gibberish.genish

  const filters = {
    Filter24Classic : require( './filter24.js'  )( Gibberish ),
    Filter24Moog    : require( './ladder.dsp.js' )( Gibberish ),
    Filter24TB303   : require( './diodeFilterZDF.js' )( Gibberish ),
    Filter12Biquad  : require( './biquad.dsp.js'    )( Gibberish ),
    Filter12SVF     : require( './svf.js'       )( Gibberish ),
    
    // not for use by end-users
    genish: {
      Comb        : require( './combfilter.js' ),
      AllPass     : require( './allpass.js' )
    },

    factory( input, cutoff, saturation, _props, isStereo = false ) {
      let filteredOsc 

      let props = Object.assign({}, filters.defaults, _props )

      switch( props.filterModel ) {
        case 1:
          filteredOsc = g.zd24( input, g.min( g.in('Q'), .9999 ), cutoff, 0 ) // g.max(.005, g.min( cutoff, 1 ) ) )
          break;
        case 2:
          filteredOsc = g.diodeZDF( input, g.min( g.in('Q'), .9999 ), cutoff, saturation, isStereo ) 
          break;
        case 3:
          filteredOsc = g.svf( input, cutoff, g.sub( 1, g.in('Q')), props.filterMode, isStereo, true ) 
          break; 
        case 4:
          filteredOsc = g.biquad( input, cutoff,  g.in('Q'), props.filterMode, isStereo ) 
          break; 
        case 5:
          //isLowPass = g.param( 'lowPass', 1 ),
          filteredOsc = g.filter24( input, g.in('Q'), cutoff, props.filterMode, isStereo )
          break;
        default:
          // return unfiltered signal
          filteredOsc = input //g.filter24( oscWithGain, g.in('resonance'), cutoff, isLowPass )
          break;
      }

      return filteredOsc
    },

    defaults: { filterMode: 0, filterModel:0 }
  }

  filters.export = target => {
    for( let key in filters ) {
      if( key !== 'export' && key !== 'genish' ) {
        target[ key ] = filters[ key ]
      }
    }
  }

return filters

}

},{"./allpass.js":14,"./biquad.dsp.js":15,"./combfilter.js":16,"./diodeFilterZDF.js":17,"./filter24.js":19,"./ladder.dsp.js":21,"./svf.js":22}],21:[function(require,module,exports){
const genish = require( 'genish.js' ),
      filterProto = require( './filter.js' )

module.exports = function( Gibberish ) {

  const makeChannel = function( input, _Q, _freq ) {
    'use jsdsp'
    const iT = 1 / genish.gen.samplerate,
          z  = genish.data([ 0,0,0,0 ], 1, { meta:true })

    const freq = genish.max(.005, genish.min( _freq, 1 ) ) 
    const Q = .5 + _Q * 23
    // kwd = 2 * $M_PI * acf[kindx]
    const kwd = ( Math.PI * 2 ) * freq * genish.gen.samplerate / 2

    // kwa = (2/iT) * tan(kwd * iT/2) 
    const kwa = 2/iT * genish.tan( kwd * iT/2 )

    // kG  = kwa * iT/2 
    const kg = kwa * iT/2

    // kk = 4.0*(kQ - 0.5)/(25.0 - 0.5)
    const kk = 4 * (Q - .5) / 24.5

    // kg_plus_1 = (1.0 + kg)
    const kg_plus_1 = 1 + kg

    // kG = kg / kg_plus_1 
    const kG     = kg / kg_plus_1,
          kG_2   = kG * kG,
          kG_3   = kG_2 * kG,
          kGAMMA = kG_2 * kG_2

    const kS1 = z[0] / kg_plus_1,
          kS2 = z[1] / kg_plus_1,
          kS3 = z[2] / kg_plus_1,
          kS4 = z[3] / kg_plus_1

    //kS = kG_3 * kS1  + kG_2 * kS2 + kG * kS3 + kS4 
    const kS = kG_3 * kS1 + kG_2 * kS2 + kG * kS3 + kS4

    //ku = (kin - kk *  kS) / (1 + kk * kGAMMA)
    const ku  = (input - kk * kS) / (1 + kk * kGAMMA)

    let kv =  ( ku - z[0] ) * kG
    let klp = kv + z[0]
    z[0] = klp + kv

    kv  = ( klp - z[1] ) * kG
    klp = kv + z[1]
    z[1] = klp + kv

    kv  = (klp - z[2] ) * kG
    klp = kv + z[2]
    z[2] = klp + kv

    kv  = (klp - z[3] ) * kG
    klp = kv + z[3]
    z[3] = klp + kv

    return klp
  }

  Gibberish.genish.zd24 = ( input, _Q, freq, isStereo=false ) => {
    const leftInput = isStereo === true ? input[0] : input
    const left = makeChannel( leftInput, _Q, freq )

    let out
    if( isStereo === true ) {
      const right = makeChannel( input[1], _Q, freq )
      out = [ left, right ]
    }else{
      out = left
    }

    return out
  }

  const Zd24 = inputProps => {
    const filter   = Object.create( filterProto )
    const props    = Object.assign( {}, Zd24.defaults, filter.defaults, inputProps )
    let out

    filter.__requiresRecompilation = [ 'input' ]
    filter.__createGraph = function() {
      let isStereo = false
      if( out === undefined ) {
        isStereo = props.input !== undefined && props.input.isStereo !== undefined ? props.input.isStereo : false 
      }else{
        isStereo = out.input.isStereo
        out.isStereo = isStereo
      }

      filter.graph = Gibberish.genish.zd24( genish.in('input'), genish.in('Q'), genish.in('cutoff'), isStereo ) 
    } 

    filter.__createGraph()

    out = Gibberish.factory(
      filter, 
      filter.graph, 
      ['filters','Filter24Moog'],
      props
    )

    return out
  }

  Zd24.defaults = {
    input:0,
    Q: .75,
    cutoff: .25,
  }

  return Zd24

}


},{"./filter.js":18,"genish.js":114}],22:[function(require,module,exports){
const g = require( 'genish.js' ),
      filter = require( './filter.js' )

module.exports = function( Gibberish ) {
  Gibberish.genish.svf = ( input, cutoff, Q, mode, isStereo=false, shouldConvertFreqQ=false ) => {
    let d1 = g.data([0,0], 1, { meta:true }), d2 = g.data([0,0], 1, { meta:true }),
        peekProps = { mode:'simple', interp:'none' }

    if( shouldConvertFreqQ === true ) {
      //Q = g.min( g.add(.01 , __Q), 1 ) 
      cutoff = g.mul( g.max( .005, g.min( cutoff,.995 ) ), g.div( g.gen.samplerate, 4 ) )
    }

    let f1 = g.memo( g.mul( 2 * Math.PI, g.div( cutoff, g.gen.samplerate ) ) )
    let oneOverQ = g.memo( g.div( 1, Q ) )
    let l = g.memo( g.add( d2[0], g.mul( f1, d1[0] ) ) ),
        h = g.memo( g.sub( g.sub( isStereo ? input[0] : input, l ), g.mul( Q, d1[0] ) ) ),
        b = g.memo( g.add( g.mul( f1, h ), d1[0] ) ),
        n = g.memo( g.add( h, l ) )

    d1[0] = b
    d2[0] = l

    let out = g.selector( mode, l, h, b, n )

    let returnValue
    if( isStereo ) {
      let d12 = g.data([0,0], 1, { meta:true }), d22 = g.data([0,0], 1, { meta:true })
      let l2 = g.memo( g.add( d22[0], g.mul( f1, d12[0] ) ) ),
          h2 = g.memo( g.sub( g.sub( input[1], l2 ), g.mul( Q, d12[0] ) ) ),
          b2 = g.memo( g.add( g.mul( f1, h2 ), d12[0] ) ),
          n2 = g.memo( g.add( h2, l2 ) )

      d12[0] = b2
      d22[0] = l2

      let out2 = g.selector( mode, l2, h2, b2, n2 )

      returnValue = [ out, out2 ]
    }else{
      returnValue = out
    }

    return returnValue
  }

  let SVF = inputProps => {
    const svf = Object.create( filter )
    const props = Object.assign( {}, SVF.defaults, filter.defaults, inputProps ) 

    const isStereo = props.input.isStereo
    
    // XXX NEEDS REFACTORING
    const __out = Gibberish.factory( 
      svf,
      //Gibberish.genish.svf( g.in('input'), g.mul( g.in('cutoff'), g.gen.samplerate / 5 ), g.sub( 1, g.in('Q') ), g.in('mode'), isStereo ), 
      Gibberish.genish.svf( g.in('input'), g.mul( g.in('cutoff'), g.gen.samplerate / 5 ), g.sub( 1, g.in('Q') ), g.in('mode'), isStereo, true ), 
      ['filters','Filter12SVF'], 
      props
    )

    return __out
  }


  SVF.defaults = {
    input:0,
    Q: .65,
    cutoff:.25,
    mode:0
  }

  return SVF

}


},{"./filter.js":18,"genish.js":114}],23:[function(require,module,exports){
let g = require( 'genish.js' ),
    effect = require( './effect.js' )

module.exports = function( Gibberish ) {
 
let BitCrusher = inputProps => {
  const  props = Object.assign( { bitCrusherLength: 44100 }, BitCrusher.defaults, effect.defaults, inputProps ),
         bitCrusher = Object.create( effect )

  let out

  bitCrusher.__createGraph = function() {
    let isStereo = false
    if( out === undefined ) {
      isStereo = typeof props.input.isStereo !== 'undefined' ? props.input.isStereo : false 
    }else{
      isStereo = out.input.isStereo
      out.isStereo = isStereo
    }

    let input = g.in( 'input' ),
        inputGain = g.in( 'inputGain' ),
        bitDepth = g.in( 'bitDepth' ),
        sampleRate = g.in( 'sampleRate' ),
        leftInput = isStereo ? input[ 0 ] : input,
        rightInput = isStereo ? input[ 1 ] : null
    
    let storeL = g.history(0)
    let sampleReduxCounter = g.counter( sampleRate, 0, 1 )

    let bitMult = g.pow( g.mul( bitDepth, 16 ), 2 )
    let crushedL = g.div( g.floor( g.mul( g.mul( leftInput, inputGain ), bitMult ) ), bitMult )

    let outL = g.switch(
      sampleReduxCounter.wrap,
      crushedL,
      storeL.out
    )

    if( isStereo ) {
      let storeR = g.history(0)
      let crushedR = g.div( g.floor( g.mul( g.mul( rightInput, inputGain ), bitMult ) ), bitMult )

      let outR = g.switch( 
        sampleReduxCounter.wrap,
        crushedR,
        storeL.out
      )

      bitCrusher.graph = [ outL, outR ]
    }else{
      bitCrusher.graph = outL
    }
  }

  bitCrusher.__createGraph()
  bitCrusher.__requiresRecompilation = [ 'input' ]

  out = Gibberish.factory( 
    bitCrusher,
    bitCrusher.graph,
    ['fx','bitCrusher'], 
    props 
  )
  return out 
}

BitCrusher.defaults = {
  input:0,
  bitDepth:.5,
  sampleRate: .5
}

return BitCrusher

}

},{"./effect.js":28,"genish.js":114}],24:[function(require,module,exports){
let g = require( 'genish.js' ),
    effect = require( './effect.js' )

module.exports = function( Gibberish ) {
  let proto = Object.create( effect )

  let Shuffler = inputProps => {
    let bufferShuffler = Object.create( proto ),
        bufferSize = 88200

    const props = Object.assign( {}, Shuffler.defaults, effect.defaults, inputProps )
    
    let out
    bufferShuffler.__createGraph = function() {
      let isStereo = false
      if( out === undefined ) {
        isStereo = typeof props.input.isStereo !== 'undefined' ? props.input.isStereo : true 
      }else{
        isStereo = out.input.isStereo
        //out.isStereo = isStereo
      }      
      
      const phase = g.accum( 1,0,{ shouldWrap: false })

      const input = g.in( 'input' ),
            inputGain = g.in( 'inputGain' ),
            __leftInput = isStereo ? input[ 0 ] : input,
            __rightInput = isStereo ? input[ 1 ] : null,
            leftInput = g.mul( __leftInput, inputGain ),
            rightInput = g.mul( __rightInput, inputGain ),
            rateOfShuffling = g.in( 'rate' ),
            chanceOfShuffling = g.in( 'chance' ),
            reverseChance = g.in( 'reverseChance' ),
            repitchChance = g.in( 'repitchChance' ),
            repitchMin = g.in( 'repitchMin' ),
            repitchMax = g.in( 'repitchMax' )

      let pitchMemory = g.history(1)

      let shouldShuffleCheck = g.eq( g.mod( phase, rateOfShuffling ), 0 )
      let isShuffling = g.memo( g.sah( g.lt( g.noise(), chanceOfShuffling ), shouldShuffleCheck, 0 ) ) 

      // if we are shuffling and on a repeat boundary...
      let shuffleChanged = g.memo( g.and( shouldShuffleCheck, isShuffling ) )
      let shouldReverse = g.lt( g.noise(), reverseChance ),
          reverseMod = g.switch( shouldReverse, -1, 1 )

      let pitch = g.ifelse( 
        g.and( shuffleChanged, g.lt( g.noise(), repitchChance ) ),
        g.memo( g.mul( g.add( repitchMin, g.mul( g.sub( repitchMax, repitchMin ), g.noise() ) ), reverseMod ) ),
        reverseMod
      )
      
      // only switch pitches on repeat boundaries
      pitchMemory.in( g.switch( shuffleChanged, pitch, pitchMemory.out ) )

      let fadeLength = g.memo( g.div( rateOfShuffling, 100 ) ),
          fadeIncr = g.memo( g.div( 1, fadeLength ) )

      const bufferL = g.data( bufferSize )
      const bufferR = isStereo ? g.data( bufferSize ) : null
      let readPhase = g.accum( pitchMemory.out, 0, { shouldWrap:false }) 
      let stutter = g.wrap( g.sub( g.mod( readPhase, bufferSize ), 22050 ), 0, bufferSize )

      let normalSample = g.peek( bufferL, g.accum( 1, 0, { max:88200 }), { mode:'simple' })

      let stutterSamplePhase = g.switch( isShuffling, stutter, g.mod( readPhase, bufferSize ) )
      let stutterSample = g.memo( g.peek( 
        bufferL, 
        stutterSamplePhase,
        { mode:'samples' }
      ) )
      
      let stutterShouldFadeIn = g.and( shuffleChanged, isShuffling )
      let stutterPhase = g.accum( 1, shuffleChanged, { shouldWrap: false })

      let fadeInAmount = g.memo( g.div( stutterPhase, fadeLength ) )
      let fadeOutAmount = g.div( g.sub( rateOfShuffling, stutterPhase ), g.sub( rateOfShuffling, fadeLength ) )
      
      let fadedStutter = g.ifelse(
        g.lt( stutterPhase, fadeLength ),
        g.memo( g.mul( g.switch( g.lt( fadeInAmount, 1 ), fadeInAmount, 1 ), stutterSample ) ),
        g.gt( stutterPhase, g.sub( rateOfShuffling, fadeLength ) ),
        g.memo( g.mul( g.gtp( fadeOutAmount, 0 ), stutterSample ) ),
        stutterSample
      )
      
      let outputL = g.mix( normalSample, fadedStutter, isShuffling ) 

      let pokeL = g.poke( bufferL, leftInput, g.mod( g.add( phase, 44100 ), 88200 ) )

      let panner = g.pan( outputL, outputL, g.in( 'pan' ) )
      
      bufferShuffler.graph = [ panner.left, panner.right ]
    }

    bufferShuffler.__createGraph()
    bufferShuffler.__requiresRecompilation = [ 'input' ]
    
    out = Gibberish.factory( 
      bufferShuffler,
      bufferShuffler.graph,
      ['fx','shuffler'], 
      props 
    )

    return out 
  }
  
  Shuffler.defaults = {
    input:0,
    rate:22050,
    chance:.25,
    reverseChance:.5,
    repitchChance:.5,
    repitchMin:.5,
    repitchMax:2,
    pan:.5,
    mix:.5
  }

  return Shuffler 
}

},{"./effect.js":28,"genish.js":114}],25:[function(require,module,exports){
const g = require( 'genish.js' ),
      effect = require( './effect.js' )
  
module.exports = function( Gibberish ) {
 
let __Chorus = inputProps => {
  const props = Object.assign({}, __Chorus.defaults, effect.defaults, inputProps )
  let out
  
  const chorus = Object.create( effect )

  chorus.__createGraph = function() {
    const input = g.in('input'),
          inputGain = g.in( 'inputGain' ),
          freq1 = g.in('slowFrequency'),
          freq2 = g.in('fastFrequency'),
          amp1  = g.in('slowGain'),
          amp2  = g.in('fastGain')

    let isStereo = false
    if( out === undefined ) {
      isStereo = typeof props.input.isStereo !== 'undefined' ? props.input.isStereo : false 
    }else{
      isStereo = out.input.isStereo
      out.isStereo = isStereo
    }

    const leftInput = isStereo ? g.mul( input[0], inputGain ) : g.mul( input, inputGain )

    const win0   = g.env( 'inversewelch', 1024 ),
          win120 = g.env( 'inversewelch', 1024, 0, .333 ),
          win240 = g.env( 'inversewelch', 1024, 0, .666 )
    
    const slowPhasor = g.phasor( freq1, 0, { min:0 }),
          slowPeek1  = g.mul( g.peek( win0,   slowPhasor ), amp1 ),
          slowPeek2  = g.mul( g.peek( win120, slowPhasor ), amp1 ),
          slowPeek3  = g.mul( g.peek( win240, slowPhasor ), amp1 )
    
    const fastPhasor = g.phasor( freq2, 0, { min:0 }),
          fastPeek1  = g.mul( g.peek( win0,   fastPhasor ), amp2 ),
          fastPeek2  = g.mul( g.peek( win120, fastPhasor ), amp2 ),
          fastPeek3  = g.mul( g.peek( win240, fastPhasor ), amp2 )


    let sampleRate = Gibberish.ctx.sampleRate
     
    const ms = sampleRate / 1000 
    const maxDelayTime = 1000 * ms

    //console.log( 'sr:', sampleRate, 'ms:', ms, 'maxDelayTime:', maxDelayTime )

    const time1 =  g.mul( g.add( slowPeek1, fastPeek1, 5 ), ms ),
          time2 =  g.mul( g.add( slowPeek2, fastPeek2, 5 ), ms ),
          time3 =  g.mul( g.add( slowPeek3, fastPeek3, 5 ), ms )

    const delay1L = g.delay( leftInput, time1, { size:maxDelayTime }),
          delay2L = g.delay( leftInput, time2, { size:maxDelayTime }),
          delay3L = g.delay( leftInput, time3, { size:maxDelayTime })

    
    const leftOutput = g.add( delay1L, delay2L, delay3L )
    if( isStereo ) {
      const rightInput = g.mul( input[1], inputGain )
      const delay1R = g.delay(rightInput, time1, { size:maxDelayTime }),
            delay2R = g.delay(rightInput, time2, { size:maxDelayTime }),
            delay3R = g.delay(rightInput, time3, { size:maxDelayTime })

      // flip a couple delay lines for stereo effect?
      const rightOutput = g.add( delay1R, delay2L, delay3R )
      chorus.graph = [ g.add( delay1L, delay2R, delay3L), rightOutput ]
    }else{
      chorus.graph = leftOutput
    }
  }

  chorus.__createGraph()
  chorus.__requiresRecompilation = [ 'input' ]

  out = Gibberish.factory( chorus, chorus.graph, ['fx','chorus'], props )

  return out 
}

__Chorus.defaults = {
  input:0,
  slowFrequency: .18,
  slowGain:3,
  fastFrequency:6,
  fastGain:1,
  inputGain:1
}

return __Chorus

}

},{"./effect.js":28,"genish.js":114}],26:[function(require,module,exports){
let g = require( 'genish.js' ),
    effect = require( './effect.js' )

module.exports = function( Gibberish ) {
 
let Delay = inputProps => {
  let props = Object.assign( { delayLength: 88200 }, effect.defaults, Delay.defaults, inputProps ),
      delay = Object.create( effect )

  let out
  delay.__createGraph = function() {
    let isStereo = false
    if( out === undefined ) {
      isStereo = typeof props.input.isStereo !== 'undefined' ? props.input.isStereo : false 
    }else{
      isStereo = out.input.isStereo
      out.isStereo = isStereo
    }    

    const input      = g.in( 'input' ),
          inputGain  = g.in( 'inputGain' ),
          delayTime  = g.in( 'time' ),
          wetdry     = g.in( 'wetdry' ),
          leftInput  = isStereo ? g.mul( input[ 0 ], inputGain ) : g.mul( input, inputGain ),
          rightInput = isStereo ? g.mul( input[ 1 ], inputGain ) : null
      
    const feedback = g.in( 'feedback' )

    // left channel
    const feedbackHistoryL = g.history()
    const echoL = g.delay( g.add( leftInput, g.mul( feedbackHistoryL.out, feedback ) ), delayTime, { size:props.delayLength })
    feedbackHistoryL.in( echoL )
    const left = g.mix( leftInput, echoL, wetdry )

    if( isStereo ) {
      // right channel
      const feedbackHistoryR = g.history()
      const echoR = g.delay( g.add( rightInput, g.mul( feedbackHistoryR.out, feedback ) ), delayTime, { size:props.delayLength })
      feedbackHistoryR.in( echoR )
      const right = g.mix( rightInput, echoR, wetdry )

      delay.graph = [ left, right ]
    }else{
      delay.graph = left 
    }
  }

  delay.__createGraph()
  delay.__requiresRecompilation = [ 'input' ]
  
  out = Gibberish.factory( 
    delay,
    delay.graph, 
    ['fx','delay'], 
    props 
  )

  return out
}

Delay.defaults = {
  input:0,
  feedback:.5,
  time: 11025,
  wetdry: .5
}

return Delay

}

},{"./effect.js":28,"genish.js":114}],27:[function(require,module,exports){
const g = require( 'genish.js' ),
      effect = require( './effect.js' )

const genish = g

// taken from csound: http://manual.freeshell.org/csound5/distort1.html
/*

         exp(asig * (shape1 + pregain)) - exp(asig * (shape2 - pregain))
  aout = ---------------------------------------------------------------
         exp(asig * pregain)            + exp(-asig * pregain)

*/

module.exports = function( Gibberish ) {

  let Distortion = inputProps => {
    let props = Object.assign( {}, effect.defaults, Distortion.defaults, inputProps ),
        distortion= Object.create( effect ),
        out

    distortion.__createGraph = function() {
      let isStereo = false
      if( out === undefined ) {
        isStereo = typeof props.input.isStereo !== 'undefined' ? props.input.isStereo : false 
      }else{
        isStereo = out.input.isStereo
        out.isStereo = isStereo
      }

      const input = g.in( 'input' ),
            inputGain = g.in( 'inputGain' ),
            shape1 = g.in( 'shape1' ),
            shape2 = g.in( 'shape2' ),
            pregain = g.in( 'pregain' ),
            postgain = g.in( 'postgain' )

      let lout
      {
        'use jsdsp'
        const linput = isStereo ? g.mul( input[0], inputGain ) : g.mul( input, inputGain )
        const ltop = g.exp( linput * (shape1 + pregain) ) - g.exp( linput * (shape2 - pregain) )
        const lbottom = g.exp( linput * pregain ) + g.exp( -1 * linput * pregain )
        lout = ( ltop / lbottom ) * postgain
      }

      if( isStereo ) {
        let rout
        {
          'use jsdsp'
          const rinput = isStereo ? g.mul( input[1], inputGain ) : g.mul( input, inputGain )
          const rtop = g.exp( rinput * (shape1 + pregain) ) - g.exp( rinput * (shape2 - pregain) )
          const rbottom = g.exp( rinput * pregain ) + g.exp( -1 * rinput * pregain )
          rout = ( rtop / rbottom ) * postgain
        }

        distortion.graph = [ lout, rout ]
      }else{
        distortion.graph = lout 
      }
    }

    distortion.__createGraph()
    distortion.__requiresRecompilation = [ 'input' ]

    out = Gibberish.factory( 
      distortion,
      distortion.graph, 
      [ 'fx','distortion' ], 
      props 
    )
    return out 
  }

  Distortion.defaults = {
    input:0,
    shape1:.1,
    shape2:.1,
    pregain:5,
    postgain:.5,
  }

  return Distortion

}

},{"./effect.js":28,"genish.js":114}],28:[function(require,module,exports){
let ugen = require( '../ugen.js' )()

let effect = Object.create( ugen )

Object.assign( effect, {
  defaults: { bypass:false, inputGain:1 },
  type:'effect'
})

module.exports = effect

},{"../ugen.js":72}],29:[function(require,module,exports){
module.exports = function( Gibberish ) {

  const effects = {
    Freeverb    : require( './freeverb.js'  )( Gibberish ),
    //Plate       : require( './dattorro.dsp.js' )( Gibberish ),
    Flanger     : require( './flanger.js'   )( Gibberish ),
    Vibrato     : require( './vibrato.js'   )( Gibberish ),
    Delay       : require( './delay.js'     )( Gibberish ),
    BitCrusher  : require( './bitCrusher.js')( Gibberish ),
    Distortion  : require( './distortion.dsp.js')( Gibberish ),
    RingMod     : require( './ringMod.js'   )( Gibberish ),
    Tremolo     : require( './tremolo.js'   )( Gibberish ),
    Chorus      : require( './chorus.js'    )( Gibberish ),
    Wavefolder  : require( './wavefolder.dsp.js')( Gibberish )[0],
    Shuffler    : require( './bufferShuffler.js'  )( Gibberish ),
    //Gate        : require( './gate.js'      )( Gibberish ),
  }

  effects.export = target => {
    for( let key in effects ) {
      if( key !== 'export' ) {
        target[ key ] = effects[ key ]
      }
    }
  }

return effects

}

},{"./bitCrusher.js":23,"./bufferShuffler.js":24,"./chorus.js":25,"./delay.js":26,"./distortion.dsp.js":27,"./flanger.js":30,"./freeverb.js":31,"./ringMod.js":32,"./tremolo.js":33,"./vibrato.js":34,"./wavefolder.dsp.js":35}],30:[function(require,module,exports){
let g = require( 'genish.js' ),
    proto = require( './effect.js' )

module.exports = function( Gibberish ) {
 
let Flanger = inputProps => {
  let props   = Object.assign( { delayLength:44100 }, Flanger.defaults, proto.defaults, inputProps ),
      flanger = Object.create( proto ),
      out

  flanger.__createGraph = function() {
    let isStereo = false
    if( out === undefined ) {
      isStereo = typeof props.input.isStereo !== 'undefined' ? props.input.isStereo : false 
    }else{
      isStereo = out.input.isStereo
      out.isStereo = isStereo
    }

    const input = g.in( 'input' ),
          inputGain = g.in( 'inputGain' ),
          delayLength = props.delayLength,
          feedbackCoeff = g.in( 'feedback' ),
          modAmount = g.in( 'offset' ),
          frequency = g.in( 'frequency' ),
          delayBufferL = g.data( delayLength )

    const writeIdx = g.accum( 1,0, { min:0, max:delayLength, interp:'none', mode:'samples' })
    
    const offset = g.mul( modAmount, 500 )

    const mod = props.mod === undefined ? g.cycle( frequency ) : props.mod
    
    const readIdx = g.wrap( 
      g.add( 
        g.sub( writeIdx, offset ), 
        mod//g.mul( mod, g.sub( offset, 1 ) ) 
      ), 
      0, 
      delayLength
    )

    const leftInput = isStereo ? input[0] : input

    const delayedOutL = g.peek( delayBufferL, readIdx, { interp:'linear', mode:'samples' })
    
    g.poke( delayBufferL, g.add( leftInput, g.mul( delayedOutL, feedbackCoeff ) ), writeIdx )

    const left = g.add( leftInput, delayedOutL )

    if( isStereo === true ) {
      const rightInput = input[1]
      const delayBufferR = g.data( delayLength )
      
      let delayedOutR = g.peek( delayBufferR, readIdx, { interp:'linear', mode:'samples' })

      g.poke( delayBufferR, g.add( rightInput, g.mul( delayedOutR, feedbackCoeff ) ), writeIdx )
      const right = g.add( rightInput, delayedOutR )

      flanger.graph = [ left, right ]

    }else{
      flanger.graph = left
    }
  }

  flanger.__createGraph()
  flanger.__requiresRecompilation = [ 'input' ]

  out = Gibberish.factory( 
    flanger,
    flanger.graph, 
    ['fx','flanger'], 
    props 
  ) 

  return out 
}

Flanger.defaults = {
  input:0,
  feedback:.81,
  offset:.125,
  frequency:1
}

return Flanger

}

},{"./effect.js":28,"genish.js":114}],31:[function(require,module,exports){
const g = require( 'genish.js' ),
      effect = require( './effect.js' )

module.exports = function( Gibberish ) {
  
const allPass = Gibberish.filters.genish.AllPass
const combFilter = Gibberish.filters.genish.Comb

const tuning = {
  combCount:	  	8,
  combTuning: 		[ 1116, 1188, 1277, 1356, 1422, 1491, 1557, 1617 ],                    
  allPassCount: 	4,
  allPassTuning:	[ 225, 556, 441, 341 ],
  allPassFeedback:0.5,
  fixedGain: 		  0.015,
  scaleDamping: 	0.4,
  scaleRoom: 		  0.28,
  offsetRoom: 	  0.7,
  stereoSpread:   23
}

const Freeverb = inputProps => {
  const props = Object.assign( {}, effect.defaults, Freeverb.defaults, inputProps ),
        reverb = Object.create( effect ) 

  let out 
  reverb.__createGraph = function() {
    let isStereo = false
    if( out === undefined ) {
      isStereo = typeof props.input.isStereo !== 'undefined' ? props.input.isStereo : false 
    }else{
      isStereo = out.input.isStereo
    }    

    const combsL = [], combsR = []

    const input = g.in( 'input' ),
          inputGain = g.in( 'inputGain' ),
          wet1 = g.in( 'wet1'),
          wet2 = g.in( 'wet2' ),  
          dry = g.in( 'dry' ), 
          roomSize = g.in( 'roomSize' ), 
          damping = g.in( 'damping' )
    
    const __summedInput = isStereo === true ? g.add( input[0], input[1] ) : input,
          summedInput = g.mul( __summedInput, inputGain ),
          attenuatedInput = g.memo( g.mul( summedInput, tuning.fixedGain ) )
    
    // create comb filters in parallel...
    for( let i = 0; i < 8; i++ ) { 
      combsL.push( 
        combFilter( 
          attenuatedInput, 
          tuning.combTuning[i], 
          g.mul(damping,.4),
          g.mul( tuning.scaleRoom + tuning.offsetRoom, roomSize ) 
        ) 
      )
      combsR.push( 
        combFilter( 
          attenuatedInput, 
          tuning.combTuning[i] + tuning.stereoSpread, 
          g.mul(damping,.4), 
          g.mul( tuning.scaleRoom + tuning.offsetRoom, roomSize ) 
        ) 
      )
    }
    
    // ... and sum them with attenuated input, use of let is deliberate here
    let outL = g.add( attenuatedInput, ...combsL )
    let outR = g.add( attenuatedInput, ...combsR )
    
    // run through allpass filters in series
    for( let i = 0; i < 4; i++ ) { 
      outL = allPass( outL, tuning.allPassTuning[ i ] + tuning.stereoSpread )
      outR = allPass( outR, tuning.allPassTuning[ i ] + tuning.stereoSpread )
    }
    
    const outputL = g.add( g.mul( outL, wet1 ), g.mul( outR, wet2 ), g.mul( isStereo === true ? input[0] : input, dry ) ),
          outputR = g.add( g.mul( outR, wet1 ), g.mul( outL, wet2 ), g.mul( isStereo === true ? input[1] : input, dry ) )

    reverb.graph = [ outputL, outputR ]
  }

  reverb.__createGraph()
  reverb.__requiresRecompilation = [ 'input' ]

  out = Gibberish.factory( reverb, reverb.graph, ['fx','freeverb'], props )

  return out
}


Freeverb.defaults = {
  input: 0,
  wet1: 1,
  wet2: 0,
  dry: .5,
  roomSize: .925,
  damping:  .5,
}

return Freeverb 

}


},{"./effect.js":28,"genish.js":114}],32:[function(require,module,exports){
let g = require( 'genish.js' ),
    effect = require( './effect.js' )

module.exports = function( Gibberish ) {
 
let RingMod = inputProps => {
  let props   = Object.assign( {}, RingMod.defaults, effect.defaults, inputProps ),
      ringMod = Object.create( effect ),
      out

  ringMod.__createGraph = function() {
    let isStereo = false
    if( out === undefined ) {
      isStereo = typeof props.input.isStereo !== 'undefined' ? props.input.isStereo : false 
    }else{
      isStereo = out.input.isStereo
      out.isStereo = isStereo
    }    

    const input = g.in( 'input' ),
          inputGain = g.in( 'inputGain' ),
          frequency = g.in( 'frequency' ),
          gain = g.in( 'gain' ),
          mix = g.in( 'mix' )
    
    const leftInput = isStereo ? g.mul( input[0], inputGain ) : g.mul( input, inputGain ),
          sine = g.mul( g.cycle( frequency ), gain )
   
    const left = g.add( g.mul( leftInput, g.sub( 1, mix )), g.mul( g.mul( leftInput, sine ), mix ) ) 
        
    if( isStereo === true ) {
      const rightInput = g.mul( input[1], inputGain ),
            right = g.add( g.mul( rightInput, g.sub( 1, mix )), g.mul( g.mul( rightInput, sine ), mix ) ) 
      
      ringMod.graph = [ left, right ]
    }else{
      ringMod.graph = left
    }
  }

  ringMod.__createGraph() 
  ringMod.__requiresRecompilation = [ 'input' ]

  out = Gibberish.factory( 
    ringMod,
    ringMod.graph, 
    [ 'fx','ringMod'], 
    props 
  )
  
  return out 
}

RingMod.defaults = {
  input:0,
  frequency:220,
  gain: 1, 
  mix:1
}

return RingMod

}

},{"./effect.js":28,"genish.js":114}],33:[function(require,module,exports){
const g = require( 'genish.js' ),
      effect = require( './effect.js' )

module.exports = function( Gibberish ) {
 
const Tremolo = inputProps => {
  const props   = Object.assign( {}, Tremolo.defaults, effect.defaults, inputProps ),
        tremolo = Object.create( effect )
  
  let out
  tremolo.__createGraph = function() {
    let isStereo = false
    if( out === undefined ) {
      isStereo = typeof props.input.isStereo !== 'undefined' ? props.input.isStereo : false 
    }else{
      isStereo = out.input.isStereo
      out.isStereo = isStereo
    }    

    const input = g.in( 'input' ),
          inputGain = g.in( 'inputGain' ),
          frequency = g.in( 'frequency' ),
          amount = g.in( 'amount' )
    
    const leftInput = isStereo ? g.mul( input[0], inputGain ) : g.mul( input, inputGain )

    let osc
    if( props.shape === 'square' ) {
      osc = g.gt( g.phasor( frequency ), 0 )
    }else if( props.shape === 'saw' ) {
      osc = g.gtp( g.phasor( frequency ), 0 )
    }else{
      osc = g.cycle( frequency )
    }

    const mod = g.mul( osc, amount )
   
    const left = g.sub( leftInput, g.mul( leftInput, mod ) )

    if( isStereo === true ) {
      const rightInput = g.mul( input[1], inputGain ),
            right = g.mul( rightInput, mod )

      tremolo.graph = [ left, right ]
    }else{
      tremolo.graph = left
    }
  }
  
  tremolo.__createGraph()
  tremolo.__requiresRecompilation = [ 'input' ]

  out = Gibberish.factory( 
    tremolo,
    tremolo.graph,
    ['fx','tremolo'], 
    props 
  ) 
  return out 
}

Tremolo.defaults = {
  input:0,
  frequency:2,
  amount: 1, 
  shape:'sine'
}

return Tremolo

}

},{"./effect.js":28,"genish.js":114}],34:[function(require,module,exports){
const g = require( 'genish.js' ),
      effect = require( './effect.js' )

module.exports = function( Gibberish ) {
 
const Vibrato = inputProps => {
  const props   = Object.assign( {}, Vibrato.defaults, effect.defaults, inputProps ),
        vibrato = Object.create( effect )

  let out
  vibrato.__createGraph = function() {
    let isStereo = false
    if( out === undefined ) {
      isStereo = typeof props.input.isStereo !== 'undefined' ? props.input.isStereo : false 
    }else{
      isStereo = out.input.isStereo
      out.isStereo = isStereo
    }    

    const input = g.in( 'input' ),
          inputGain = g.in( 'inputGain' ),
          delayLength = 44100,
          feedbackCoeff = g.in( 'feedback' ),
          modAmount = g.in( 'amount' ),
          frequency = g.in( 'frequency' ),
          delayBufferL = g.data( delayLength )

    const writeIdx = g.accum( 1,0, { min:0, max:delayLength, interp:'none', mode:'samples' })
    
    const offset = g.mul( modAmount, 500 )
    
    const readIdx = g.wrap( 
      g.add( 
        g.sub( writeIdx, offset ), 
        g.mul( g.cycle( frequency ), g.sub( offset, 1 ) ) 
      ), 
      0, 
      delayLength
    )

    const leftInput = isStereo ? g.mul( input[0], inputGain ) : g.mul( input, inputGain )

    const delayedOutL = g.peek( delayBufferL, readIdx, { interp:'linear', mode:'samples' })
    
    g.poke( delayBufferL, g.add( leftInput, g.mul( delayedOutL, feedbackCoeff ) ), writeIdx )

    const left = delayedOutL

    if( isStereo === true ) {
      const rightInput = g.mul( input[1], inputGain )
      const delayBufferR = g.data( delayLength )
      
      const delayedOutR = g.peek( delayBufferR, readIdx, { interp:'linear', mode:'samples' })

      g.poke( delayBufferR, g.add( rightInput, mul( delayedOutR, feedbackCoeff ) ), writeIdx )
      const right = delayedOutR

      vibrato.graph = [ left, right ]
    }else{
      vibrato.graph = left 
    }
  }

  vibrato.__createGraph()
  vibrato.__requiresRecompilation = [ 'input' ]

  out = Gibberish.factory( 
    vibrato,
    vibrato.graph,    
    [ 'fx', 'vibrato' ], 
    props 
  ) 
  return out 
}

Vibrato.defaults = {
  input:0,
  feedback:.01,
  amount:.5,
  frequency:4
}

return Vibrato

}

},{"./effect.js":28,"genish.js":114}],35:[function(require,module,exports){
const g = require( 'genish.js' ),
      effect = require( './effect.js' )

const genish = g

const RL = 7.5e3,
       R = 15e3, 
      VT = 26e-3,
      Is = 10e-16,
       a = 2*RL/R,
       b = (R+2*RL)/(VT*R),
       d = (RL*Is)/VT

// Antialiasing error threshold
const thresh = 10e-10;

const wavestage = in1 => {
  const body = `  const thresh = 10e-10;

  let w = Ln1;
  let expw, p, r, s;

  const e = Math.E
  const pow = Math.pow
  const abs = Math.abs
  for(let i=0; i<1000; i++) {
    expw = pow(e,w);

    p = w*expw - x;
    r = (w+1)*expw;
    s = (w+2)/(2*(w+1));        
    err = (p/(r-(p*s)));

    if (abs(err)<thresh) {
      break;
    }

    w = w - err;
  }

  return w;`

  const Lambert_W = g.process( 'x','Ln1', body )

  const Ln1 = g.history(0),
        Fn1 = g.history(0),
        xn1 = g.history(0)

  {
    'use jsdsp'
    // Compute Antiderivative
    const l = g.sign(in1); 
    let u = d * g.pow( Math.E, l * b * in1 )
    let Ln = Lambert_W.call(u,Ln1.out)
    const Fn = (0.5 * VT/b ) * (Ln * (Ln + 2)) - 0.5*a*in1*in1

    let xn = 0.5 * ( in1 + xn1.out )
    u = d * g.pow( Math.E, l * b * xn )
    Ln = Lambert_W.call( u, Ln1.out )

    //out1 = ;
    // Check for ill-conditioning
    const out1 = g.ifelse(
      g.lt( g.abs( in1 - xn1.out ), thresh), 
      (l * VT * Ln) - ( a * xn ),
      (Fn - Fn1.out) / (in1 - xn1.out)
    )

    // Update States
    Ln1.in( Ln )
    Fn1.in( Fn )
    xn1.in( in1 )

    return out1
  }
}

module.exports = function( Gibberish ) {

  const Wavefolder = inputProps => {

    let props = Object.assign( {}, effect.defaults, Wavefolder.defaults, inputProps ),
        wavefolder = Object.create( effect ),
        out

    wavefolder.__createGraph = function() {
      let isStereo = false
      if( out === undefined ) {
        isStereo = typeof props.input.isStereo !== 'undefined' ? props.input.isStereo : false 
      }else{
        isStereo = out.input.isStereo
        out.isStereo = isStereo
      }

      const input = g.in( 'input' ),
            gain  = g.in( 'gain' ),
            postgain = g.in( 'postgain' )

      let lout
      {
        'use jsdsp'

        const linput = isStereo ? input[0] * gain : input * gain
        lout = linput * .333
        lout = wavestage( wavestage( wavestage( wavestage( lout ) ) ) )
        lout = lout * .6
        lout = g.tanh( lout ) * postgain
      }

      wavefolder.graph = lout

      if( isStereo ) {
        let rout
        {
          'use jsdsp'
          const rinput = isStereo ? input[1] * gain : input * gain
          rout = rinput * .333
          rout = wavestage( wavestage( wavestage( wavestage( rout ) ) ) )
          rout = rout * .6
          rout = g.tanh( rout ) * postgain
        }

        wavefolder.graph = [ lout, rout ]
      }
    }

    wavefolder.__createGraph()
    wavefolder.__requiresRecompilation = [ 'input' ]

    out = Gibberish.factory( 
      wavefolder,
      wavefolder.graph, 
      [ 'fx','wavefolder' ], 
      props 
    )

    return out 
  }

  Wavefolder.defaults = {
    input:0,
    gain:2,
    postgain:1
  }

  return [ Wavefolder, wavestage ]

}

},{"./effect.js":28,"genish.js":114}],36:[function(require,module,exports){
let MemoryHelper = require( 'memory-helper' ),
    genish       = require( 'genish.js' )
    
let Gibberish = {
  blockCallbacks: [], // called every block
  dirtyUgens: [],
  callbackUgens: [],
  callbackNames: [],
  analyzers: [],
  graphIsDirty: false,
  ugens: {},
  debug: false,
  id: -1,
  preventProxy:false,
  proxyEnabled: true,

  output: null,

  memory : null, // 20 minutes by default?
  factory: null, 
  genish,
  scheduler: require( './scheduling/scheduler.js' ),
  //workletProcessorLoader: require( './workletProcessor.js' ),
  workletProcessor: null,

  memoed: {},
  mode:'scriptProcessor',

  prototypes: {
    ugen: null,//require('./ugen.js'),
    instrument: require( './instruments/instrument.js' ),
    effect: require( './fx/effect.js' ),
    analyzer: require( './analysis/analyzer.js' )
  },

  mixins: {
    polyinstrument: require( './instruments/polyMixin.js' )
  },

  workletPath: './gibberish_worklet.js',

  init( memAmount, ctx, mode='worklet' ) {
    let numBytes = isNaN( memAmount ) ? 20 * 60 * 44100 : memAmount

    // regardless of whether or not gibberish is using worklets,
    // we still want genish to output vanilla js functions instead
    // of audio worklet classes; these functions will be called
    // from within the gibberish audioworklet processor node.
    this.genish.gen.mode = 'scriptProcessor'

    this.memory = MemoryHelper.create( numBytes, Float64Array )

    this.mode = mode

    const startup = this.utilities.createWorklet

    this.scheduler.init( this )
    
    this.analyzers.dirty = false

    if( this.mode === 'worklet' ) {

      const p = new Promise( (resolve, reject ) => {

        const pp = new Promise( (__resolve, __reject ) => {
          this.utilities.createContext( ctx, startup.bind( this.utilities ), __resolve )
        }).then( ()=> {
          Gibberish.preventProxy = true
          Gibberish.load()
          Gibberish.preventProxy = false
          Gibberish.output = this.Bus2()

          // Gibberish.output needs to be assign so that ugens can
          // connect to it by default. There's no other way to assign it
          // outside of evaling code at this point.
          Gibberish.worklet.port.postMessage({ 
            address:'eval', 
            code:`Gibberish.output = this.ugens.get(${Gibberish.output.id});` 
          })

          resolve()
        })

      })
      
      return p

    }else if( this.mode === 'processor' ) {
      Gibberish.load()
    }
  },

  load() {
    this.factory      = require( './factory.js' )( this )
    
    this.Panner       = require( './misc/panner.js' )( this )
    this.PolyTemplate = require( './instruments/polytemplate.js' )( this )
    this.oscillators  = require( './oscillators/oscillators.js' )( this )
    this.filters      = require( './filters/filters.js' )( this )
    this.binops       = require( './misc/binops.js' )( this )
    this.monops       = require( './misc/monops.js' )( this )
    this.Bus          = require( './misc/bus.js' )( this )
    this.Bus2         = require( './misc/bus2.js' )( this )
    this.instruments  = require( './instruments/instruments.js' )( this )
    this.fx           = require( './fx/effects.js' )( this )
    this.Sequencer    = require( './scheduling/sequencer.js' )( this )
    this.Sequencer2   = require( './scheduling/seq2.js' )( this )
    this.Tidal        = require( './scheduling/tidal.js' )( this )
    this.envelopes    = require( './envelopes/envelopes.js' )( this )
    this.analysis     = require( './analysis/analyzers.js' )( this )
    this.time         = require( './misc/time.js' )( this )
    this.Proxy        = require( './workletProxy.js' )( this )
  },

  export( target, shouldExportGenish=false ) {
    if( target === undefined ) throw Error('You must define a target object for Gibberish to export variables to.')

    if( shouldExportGenish ) this.genish.export( target )

    this.instruments.export( target )
    this.fx.export( target )
    this.filters.export( target )
    this.oscillators.export( target )
    this.binops.export( target )
    this.monops.export( target )
    this.envelopes.export( target )
    this.analysis.export( target )
    target.Sequencer = this.Sequencer
    target.Sequencer2 = this.Sequencer2
    target.Bus = this.Bus
    target.Bus2 = this.Bus2
    target.Scheduler = this.scheduler
    target.Tidal = this.Tidal
    this.time.export( target )
    this.utilities.export( target )
  },

  printcb() { 
    Gibberish.worklet.port.postMessage({ address:'callback' }) 
  },
  printobj( obj ) {
    Gibberish.worklet.port.postMessage({ address:'print', object:obj.id }) 
  },
  send( msg ){
    Gibberish.worklet.port.postMessage( msg )
  },

  dirty( ugen ) {
    if( ugen === this.analyzers ) {
      this.graphIsDirty = true
      this.analyzers.dirty = true
    } else {
      this.dirtyUgens.push( ugen )
      this.graphIsDirty = true
      if( this.memoed[ ugen.ugenName ] ) {
        delete this.memoed[ ugen.ugenName ]
      }
    } 
  },

  clear() {
    // do not delete the gain and the pan of the master bus 
    this.output.inputs.splice( 0, this.output.inputs.length - 2 )
    //this.output.inputNames.length = 0
    this.analyzers.length = 0
    this.scheduler.clear()
    this.dirty( this.output )
    if( this.mode === 'worklet' ) {
      this.worklet.port.postMessage({ 
        address:'method', 
        object:this.id,
        name:'clear',
        args:[]
      })
    }
    // clear memory... XXX should this be a MemoryHelper function?
    //this.memory.heap.fill(0)
    //this.memory.list = {}

    Gibberish.genish.gen.removeAllListeners('memory init')
    Gibberish.genish.gen.histories.clear()

    //Gibberish.output = this.Bus2()
    
  },

  // used to sort analysis ugens by priority.
  // higher priorities mean lower ordering in the array,
  // which means they will run first in the callback function.
  // by defult, analysis ugens are assigned a priority of 0 in the
  // analysis prototype.
  analysisCompare( a,b ) {
    return (isNaN(b.priority) ? 0 : b.priority) - (isNaN(a.priority) ? 0: a.priority )
  },

  generateCallback() {
    if( this.mode === 'worklet' ) {
      Gibberish.callback = function() { return 0 }
      Gibberish.callback.out = []
      return Gibberish.callback
    }
    let uid = 0,
        callbackBody, lastLine, analysis=''

    this.memoed = {}

    callbackBody = this.processGraph( this.output )
    lastLine = callbackBody[ callbackBody.length - 1]
    callbackBody.unshift( "\t'use strict'" )

    this.analyzers
      .sort( this.analysisCompare )
      .forEach( v=> {
        const analysisBlock = Gibberish.processUgen( v )
        //if( Gibberish.mode === 'processor' ) {
        //  console.log( 'analysis:', analysisBlock, v  )
        //}
        let analysisLine

        if( typeof analysisBlock === 'object' ) {
          analysisLine = analysisBlock.pop()

          analysisBlock.forEach( v => {
            callbackBody.splice( callbackBody.length - 1, 0, v )
          })
        }else{
          analysisLine = analysisBlock
        }

        callbackBody.push( analysisLine )
      })

    this.analyzers.forEach( v => {
      if( this.callbackUgens.indexOf( v.callback ) === -1 )
        this.callbackUgens.push( v.callback )
    })

    this.callbackNames = this.callbackUgens.map( v => v.ugenName )

    callbackBody.push( '\n\treturn ' + lastLine.split( '=' )[0].split( ' ' )[1] )

    if( this.debug === true ) console.log( 'callback:\n', callbackBody.join('\n') )
    
    this.callbackNames.push( 'mem' )
    this.callbackUgens.push( this.memory.heap )
    this.callback = Function( ...this.callbackNames, callbackBody.join( '\n' ) )//.bind( null, ...this.callbackUgens )
    this.callback.out = []

    if( this.oncallback ) this.oncallback( this.callback )

    return this.callback 
  },

  processGraph( output ) {
    this.callbackUgens.length = 0
    this.callbackNames.length = 0

    this.callbackUgens.push( output.callback )

    let body = this.processUgen( output )
    

    this.dirtyUgens.length = 0
    this.graphIsDirty = false

    return body
  },
  proxyReplace( obj ) {
    if( typeof obj === 'object' && obj !== null ) {
      if( obj.id !== undefined ) {
        const __obj = Gibberish.processor.ugens.get( obj.id )
        //console.log( 'retrieved:', __obj.name )

        //if( obj.prop !== undefined ) console.log( 'got a ssd.out', obj )
        return obj.prop !== undefined ? __obj[ obj.prop ] : __obj
      }else if( obj.isFunc === true ) {
        let func =  eval( '(' + obj.value + ')' )

        //console.log( 'replacing function:', func )

        return func
      }
    }

    return obj
  },

  processUgen( ugen, block ) {
    if( block === undefined ) block = []
    if( ugen === undefined ) return block


    let dirtyIdx = Gibberish.dirtyUgens.indexOf( ugen )

    let memo = Gibberish.memoed[ ugen.ugenName ]

    if( memo !== undefined ) {
      return memo
    } else if( ugen === true || ugen === false ) {
      throw "Why is ugen a boolean? [true] or [false]";
    } else if( ugen.block === undefined || dirtyIndex !== -1 ) {
      // weird edge case with analysis (follow) ugen
      if( ugen.id === undefined ) {
        ugen.id = ugen.__properties__.overrideid
      }

      let line = `\tconst v_${ugen.id} = ` 
      if( !ugen.isop ) line += `${ugen.ugenName}( `

      // must get array so we can keep track of length for comma insertion
      const keys = ugen.isop === true || ugen.type === 'bus'  
        ? Object.keys( ugen.inputs ) 
        : [...ugen.inputNames ] 

      line = ugen.isop === true 
        ? Gibberish.__processBinop( ugen, line, block, keys ) 
        : Gibberish.__processNonBinop( ugen, line, block, keys )

      line = Gibberish.__addLineEnding( line, ugen, keys )

      block.push( line )
      
      Gibberish.memoed[ ugen.ugenName ] = `v_${ugen.id}`

      if( dirtyIdx !== -1 ) {
        Gibberish.dirtyUgens.splice( dirtyIdx, 1 )
      }

    }else if( ugen.block ) {
      return ugen.block
    }

    return block
  }, 

  __processBinop( ugen, line, block, keys ) {
    //__getInputString( line, input, block, key, ugen ) {
    const isLeftStereo = Gibberish.__isStereo( ugen.inputs[0] ), 
          isRightStereo = Gibberish.__isStereo( ugen.inputs[1] ),
          left = Gibberish.__getInputString( line, ugen.inputs[0], block, '0', keys ),
          right= Gibberish.__getInputString( line, ugen.inputs[1], block, '1', keys ),
          op = ugen.op
        
    let graph, out

    if( isLeftStereo === true && isRightStereo === false ) {
      line += `[ ${left}[0] ${op} ${right}, ${left}[1] ${op} ${right} ]`
      //graph = [ g.add( args[0].graph[0], args[1] ), g.add( args[0].graph[1], args[1] )]
    }else if( isLeftStereo === false && isRightStereo === true ) {
      //graph = [ g.add( args[0], args[1].graph[0] ), g.add( args[0], args[1].graph[1] )]
      line += `[ ${left} ${op} ${right}[0], ${left} ${op} ${right}[1] ]`
    }else if( isLeftStereo === true && isRightStereo === true ) {
      //graph = [ g.add( args[0].graph[0], args[1].graph[0] ), g.add( args[0].graph[1], args[1].graph[1] )]
      line += `[ ${left}[0] ${op} ${right}[0], ${left}[1] ${op} ${right}[1] ]`
    }else{
      // XXX important, must re-assign when calling processNonBinop
      line = Gibberish.__processNonBinop( ugen, line, block, keys )
    }
    
    return line
  },

  __processNonBinop( ugen, line, block, keys ) {
    for( let i = 0; i < keys.length; i++ ) {
      let key = keys[ i ]
      // binop.inputs is actual values, not just property names
      let input 
      if( ugen.isop || ugen.type ==='bus' ) {
        input = ugen.inputs[ key ]
      }else{
        input = ugen[ key ] 
      }

      if( input !== undefined ) { 
        input = Gibberish.__getBypassedInput( input )
        line += Gibberish.__getInputString( line, input, block, key, ugen )
        line  = Gibberish.__addSeparator( line, input, ugen, i < keys.length - 1 )
      }
    }

    return line
  },

  // determine if a ugen is stereo
  __isStereo( ugen ) {
    let isStereo = false

    if( ugen === undefined || ugen === null ) return false

    if( ugen.isStereo === true ) return true

    if( ugen.isop === true ) {
      return Gibberish.__isStereo( ugen.inputs[0] ) || Gibberish.__isStereo( ugen.inputs[1] )
    }
    
    return isStereo
  },

  // if an effect is bypassed, get next one in chain (or output destination)
  __getBypassedInput( input ) {
    if( input.bypass === true ) {
      // loop through inputs of chain until one is found
      // that is not being bypassed

      let found = false

      while( input.input !== 'undefined' && found === false ) {
        if( typeof input.input.bypass !== 'undefined' ) {
          input = input.input
          if( input.bypass === false ) found = true
        }else{
          input = input.input
          found = true
        }
      }
    }

    return input
  },

  // get a string representing a ugen for insertion into callback.
  // if a ugen contains other ugens, trigger codegen for those ugens as well.
  __getInputString( line, input, block, key, ugen ) {
    let value = ''
    if( typeof input === 'number' ) {
      if( isNaN(key) ) {
        value += `mem[${ugen.__addresses__[ key ]}]`//input
      }else{
        value += input
      }
    } else if( typeof input === 'boolean' ) {
      value += '' + input
    }else{
      //console.log( 'key:', key, 'input:', ugen.inputs, ugen.inputs[ key ] ) 
      // XXX not sure why this has to be here, but somehow non-processed objects
      // that only contain id numbers are being passed here...

      if( input !== undefined ) {
        if( Gibberish.mode === 'processor' ) {
          if( input.ugenName === undefined && input.id !== undefined  ) {
            if( ugen === undefined  ) {
              input = Gibberish.processor.ugens.get( input.id )
            }else{
              if( ugen.type !== 'seq' ) {
                input = Gibberish.processor.ugens.get( input.id )
              }
            }
          }
        }

        Gibberish.processUgen( input, block )

        if( !input.isop ) {
          // check is needed so that graphs with ssds that refer to themselves
          // don't add the ssd in more than once
          if( Gibberish.callbackUgens.indexOf( input.callback ) === -1 ) {
            Gibberish.callbackUgens.push( input.callback )
          }
        }

        value += `v_${input.id}`
        input.__varname = value
      }
    }

    return value
  },

  // add separators for function calls and handle binops (mono only)
  __addSeparator( line, input, ugen, isNotEndOfLine ) {
    if( isNotEndOfLine === true ) {
      if( ugen.isop === true ) {
        if( ugen.op === '*' || ugen.op === '/' ) {
          if( input !== 1 ) {
            line += ' ' + ugen.op + ' '
          }else{
            line = line.slice( 0, -1 * (''+input).length )
          }
        }else{
          line += ' ' + ugen.op + ' '
        }
      }else{
        line += ', '
      }
    }

    return line
  },

  // add memory to end of function calls and close parenthesis 
  __addLineEnding( line, ugen, keys ) {
    if( (ugen.type === 'bus' && keys.length > 0) ) line += ', '
    if( !ugen.isop && ugen.type !== 'seq' ) line += 'mem'
    line += ugen.isop ? '' : ' )'

    return line
  },

}

Gibberish.prototypes.Ugen = Gibberish.prototypes.ugen = require( './ugen.js' )( Gibberish )
Gibberish.utilities = require( './utilities.js' )( Gibberish )

module.exports = Gibberish

},{"./analysis/analyzer.js":1,"./analysis/analyzers.js":2,"./envelopes/envelopes.js":7,"./factory.js":13,"./filters/filters.js":20,"./fx/effect.js":28,"./fx/effects.js":29,"./instruments/instrument.js":43,"./instruments/instruments.js":44,"./instruments/polyMixin.js":49,"./instruments/polytemplate.js":50,"./misc/binops.js":56,"./misc/bus.js":57,"./misc/bus2.js":58,"./misc/monops.js":59,"./misc/panner.js":60,"./misc/time.js":61,"./oscillators/oscillators.js":64,"./scheduling/scheduler.js":68,"./scheduling/seq2.js":69,"./scheduling/sequencer.js":70,"./scheduling/tidal.js":71,"./ugen.js":72,"./utilities.js":73,"./workletProxy.js":74,"genish.js":114,"memory-helper":153}],37:[function(require,module,exports){
const g = require( 'genish.js' ),
      instrument = require( './instrument.js' )

const genish = g
  
module.exports = function( Gibberish ) {

  const Clap = argumentProps => {
    'use jsdsp' 

    const clap = Object.create( instrument ),
          decay = g.in( 'decay' ), // 0-1 input value
          scaledDecay = decay * (g.gen.samplerate * 2 ),
          gain  = g.in( 'gain' ),
          spacing = g.in( 'spacing' ), // spacing between clap, in Hzs
          loudness = g.in( 'loudness' ),
          triggerLoudness = g.in( '__triggerLoudness' ),
          cutoff = g.in('cutoff'),
          Q      = g.in('Q')

    const props = Object.assign( {}, Clap.defaults, argumentProps )

    const eg = g.decay( scaledDecay, { initValue:0 } ), 
          check = g.gt( eg, .0005 ),
          noise = -1 + g.noise() * 2,
          rnd = noise,//g.gtp( noise, 0 ),// * eg,
          b   = g.bang(),
          saw = g.phasor( spacing, b, { min:0 }),
          rsaw = 1 - saw,
          saw_env = g.ad( 0, .035 * g.gen.samplerate, { shape:'linear' }), 
          b2 = g.bang(),
          count = g.accum( 1,b2,{ max:Infinity, min:0, initialValue:0 }),
          delayedNoise = g.switch( g.gte( count, g.gen.samplerate * .035 ), rnd, 0 ),
          bpf1 = g.svf( delayedNoise, 1000, .5, 2, false ),

          scaledOut = ( bpf1 * eg + ( rnd * rsaw * saw_env ) ) * gain * loudness * triggerLoudness,
          out = g.svf( scaledOut, cutoff, Q, 1, false )
    
    // XXX TODO : make this work with ifelse. the problem is that poke ugens put their
    // code at the bottom of the callback function, instead of at the end of the
    // associated if/else block.
    const ife = g.switch( check, out, 0 )
    
    clap.env = {
      trigger( vol ) {
        b.trigger()
        eg.trigger( vol )
        b2.trigger()
        saw_env.trigger()
      }
    } 
    
    return Gibberish.factory( clap, ife, ['instruments','clap'], props  )
  }
  
  Clap.defaults = {
    gain: 1,
    spacing:100,
    decay:.2,
    loudness:1,
    __triggerLoudness:1,
    cutoff:900,
    Q:.85
  }

  return Clap

}

},{"./instrument.js":43,"genish.js":114}],38:[function(require,module,exports){
const g = require( 'genish.js' ),
      instrument = require( './instrument.js' ),
      __wavefold   = require( '../fx/wavefolder.dsp.js' )

const genish = g

module.exports = function( Gibberish ) {
  const wavefold = __wavefold( Gibberish )[1]

  const Complex = inputProps => {
    const syn = Object.create( instrument )

    const frequency = g.in( 'frequency' ),
          loudness  = g.in( 'loudness' ), 
          triggerLoudness = g.in( '__triggerLoudness' ),
          glide   = g.max( 1, g.in( 'glide' ) ),
          slidingFreq = g.slide( frequency, glide, glide ),
          attack  = g.in( 'attack' ), 
          decay   = g.in( 'decay' ),
          sustain = g.in( 'sustain' ), 
          sustainLevel = g.in( 'sustainLevel' ),
          release = g.in( 'release' ),
          pregain = g.in( 'pregain' ),
          postgain= g.in( 'postgain' ),
          bias    = g.in( 'bias' )

    const props = Object.assign( {}, Complex.defaults, inputProps )
    Object.assign( syn, props )

    syn.__createGraph = function() {
      const osc = Gibberish.oscillators.factory( syn.waveform, slidingFreq, syn.antialias )

      const env = Gibberish.envelopes.factory( 
        props.useADSR, 
        props.shape, 
        attack, decay, 
        sustain, sustainLevel, 
        release, 
        props.triggerRelease
      )

      const saturation = g.in('saturation')

      // below doesn't work as it attempts to assign to release property triggering codegen...
      // syn.release = ()=> { syn.env.release() }

      {
        'use jsdsp'
        let oscWithEnv = osc * env * loudness * triggerLoudness,
            panner

        let foldedOsc = wavefold( wavefold( wavefold( wavefold( bias + oscWithEnv * (pregain * env) * .333 ) ) ) )
        foldedOsc = g.tanh( foldedOsc * .6 ) * postgain
 
        // 16 is an unfortunate empirically derived magic number...
        const baseCutoffFreq = g.in('cutoff') * ( frequency /  ( g.gen.samplerate / 16 ) ) 
        const cutoff = g.min( baseCutoffFreq * g.pow( 2, g.in('filterMult') * loudness * triggerLoudness ) * env, .995 ) 
        const filteredOsc = Gibberish.filters.factory( foldedOsc, cutoff, saturation, props )

        let complexWithGain = filteredOsc * g.in( 'gain' )
        // XXX ugly, ugly hack
        if(  props.filterModel !== 2 ) complexWithGain = complexWithGain * saturation
    
        if( syn.panVoices === true ) { 
          panner = g.pan( complexWithGain, complexWithGain, g.in( 'pan' ) ) 
          syn.graph = [ panner.left, panner.right ]
        }else{
          syn.graph = complexWithGain
        }

        syn.env = env
        syn.osc = osc
        syn.filter = filteredOsc
      }

    }
    
    syn.__requiresRecompilation = [ 'waveform', 'antialias', 'filterModel','filterMode', 'useADSR', 'shape' ]
    syn.__createGraph()

    const out = Gibberish.factory( syn, syn.graph, ['instruments', 'complex'], props  )

    return out
  }
  
  Complex.defaults = {
    waveform:'triangle',
    attack: 44,
    decay: 22050,
    sustain:44100,
    sustainLevel:.6,
    release:22050,
    useADSR:false,
    shape:'exponential',
    triggerRelease:false,
    gain: .5,
    pulsewidth:.25,
    frequency:220,
    pan: .5,
    antialias:true,
    panVoices:false,
    loudness:1,
    __triggerLoudness:1,
    glide:1,
    saturation:1,
    filterMult:2,
    Q:.25,
    cutoff:.5,
    //filterType:1,
    filterModel:1,
    filterMode:0,
    isStereo:false,
    pregain:4,
    postgain:1,
    bias:0
  }

  // do not include velocity, which shoudl always be per voice
  let PolyComplex = Gibberish.PolyTemplate( Complex, ['frequency','attack','decay','pulsewidth','pan','gain','glide', 'saturation', 'filterMult', 'Q', 'cutoff', 'resonance', 'antialias', 'filterModel', 'waveform', 'filterMode', '__triggerLoudness', 'loudness', 'pregain', 'postgain', 'bias'] ) 
  PolyComplex.defaults = Complex.defaults

  return [ Complex, PolyComplex ]

}

},{"../fx/wavefolder.dsp.js":35,"./instrument.js":43,"genish.js":114}],39:[function(require,module,exports){
let g = require( 'genish.js' ),
    instrument = require( './instrument.js' )

module.exports = function( Gibberish ) {

  const Conga = argumentProps => {
    const conga = Object.create( instrument ),
          frequency = g.in( 'frequency' ),
          decay = g.in( 'decay' ),
          gain  = g.in( 'gain' ),
          loudness = g.in( 'loudness' ),
          triggerLoudness = g.in( '__triggerLoudness' )

    const props = Object.assign( {}, Conga.defaults, argumentProps )

    const trigger = g.bang(),
          impulse = g.mul( trigger, 60 ),
          _decay =  g.sub( .101, g.div( decay, 10 ) ), // create range of .001 - .099
          bpf = g.svf( impulse, frequency, _decay, 2, false ),
          out = g.mul( bpf, g.mul( g.mul( triggerLoudness,loudness ), gain ) )
    
    conga.isStereo = false
    conga.env = trigger
    return Gibberish.factory( conga, out, ['instruments','conga'], props  )
  }
  
  Conga.defaults = {
    gain: .125,
    frequency:190,
    decay: .85,
    loudness: 1,
    __triggerLoudness:1
  }

  const PolyConga = Gibberish.PolyTemplate( Conga, ['gain','frequency','decay','loudness','__triggerLoudness' ] ) 
  PolyConga.defaults = Conga.defaults

  return [ Conga, PolyConga ]
}

},{"./instrument.js":43,"genish.js":114}],40:[function(require,module,exports){
let g = require( 'genish.js' ),
    instrument = require( './instrument.js' )

module.exports = function( Gibberish ) {

  const Cowbell = argumentProps => {
    let cowbell = Object.create( instrument )
    
    const decay   = g.in( 'decay' ),
          gain    = g.in( 'gain' ),
          loudness = g.in( 'loudness' ),
          triggerLoudness = g.in( '__triggerLoudness' )

    const props = Object.assign( {}, Cowbell.defaults, argumentProps )

    const bpfCutoff = g.param( 'bpfc', 1000 ),
          s1 = Gibberish.oscillators.factory( 'square', 560 ),
          s2 = Gibberish.oscillators.factory( 'square', 845 ),
          eg = g.decay( g.mul( decay, g.gen.samplerate * 2 ), { initValue:0 }), 
          bpf = g.svf( g.add( s1,s2 ), bpfCutoff, 3, 2, false ),
          envBpf = g.mul( bpf, eg ),
          out = g.mul( envBpf, g.mul( gain, loudness, triggerLoudness ) )

    cowbell.env = eg 

    cowbell.isStereo = false

    cowbell = Gibberish.factory( cowbell, out, ['instruments', 'cowbell'], props  )
    
    return cowbell
  }
  
  Cowbell.defaults = {
    gain: 1,
    decay:.5,
    loudness:1,
    __triggerLoudness:1
  }

  return Cowbell

}

},{"./instrument.js":43,"genish.js":114}],41:[function(require,module,exports){
const g = require( 'genish.js' ),
      instrument = require( './instrument.js' )

const genish = g

module.exports = function( Gibberish ) {

  const FM = inputProps => {
    let syn = Object.create( instrument )

    let frequency = g.in( 'frequency' ),
        glide = g.max( 1, g.in( 'glide' ) ),
        slidingFreq = g.slide( frequency, glide, glide ),
        cmRatio = g.in( 'cmRatio' ),
        index = g.in( 'index' ),
        feedback = g.in( 'feedback' ),
        attack = g.in( 'attack' ), decay = g.in( 'decay' ),
        sustain = g.in( 'sustain' ), sustainLevel = g.in( 'sustainLevel' ),
        release = g.in( 'release' ),
        loudness = g.in( 'loudness' ),
        triggerLoudness = g.in( '__triggerLoudness' ),
        saturation = g.in( 'saturation' )

    const props = Object.assign( {}, FM.defaults, inputProps )
    Object.assign( syn, props )

    syn.__createGraph = function() {
      const env = Gibberish.envelopes.factory( 
        props.useADSR, 
        props.shape, 
        attack, decay, 
        sustain, sustainLevel, 
        release, 
        props.triggerRelease
      )

      syn.advance = ()=> { env.release() }

      const feedbackssd = g.history( 0 )

      const modOsc = Gibberish.oscillators.factory( 
        syn.modulatorWaveform, 
        g.add( g.mul( slidingFreq, cmRatio ), g.mul( feedbackssd.out, feedback, index ) ), 
        syn.antialias 
      )

      {
        'use jsdsp'
        const Loudness = loudness * triggerLoudness
        const modOscWithIndex = modOsc * slidingFreq * index * Loudness
        const modOscWithEnv   = modOscWithIndex * env
        
        const modOscWithEnvAvg =  .5 * ( modOscWithEnv + feedbackssd.out )

        feedbackssd.in( modOscWithEnvAvg )

        const carrierOsc = Gibberish.oscillators.factory( syn.carrierWaveform, g.add( slidingFreq, modOscWithEnvAvg ), syn.antialias )

        // XXX horrible hack below to "use" saturation even when not using a diode filter 
        const carrierOscWithEnv = props.filterModel === 2 ? carrierOsc * env : g.mul(carrierOsc, g.mul(env,saturation) )

        const baseCutoffFreq = g.in( 'cutoff' ) * ( frequency /  ( g.gen.samplerate / 16 ) ) 
        const cutoff = g.min( baseCutoffFreq * g.pow( 2, g.in('filterMult') * Loudness ) * env, .995 ) 
        const filteredOsc = Gibberish.filters.factory( carrierOscWithEnv, cutoff, saturation, syn )
        const synthWithGain = filteredOsc * g.in( 'gain' ) * Loudness
        
        let panner
        if( props.panVoices === true ) { 
          panner = g.pan( synthWithGain, synthWithGain, g.in( 'pan' ) ) 
          syn.graph = [panner.left, panner.right ]
          syn.isStereo = true
        }else{
          syn.graph = synthWithGain
          syn.isStereo = false
        }
      }

      syn.env = env

      return env
    }
    
    syn.__requiresRecompilation = [ 'carrierWaveform', 'modulatorWaveform', 'antialias', 'filterModel', 'filterMode' ]
    const env = syn.__createGraph()

    const out = Gibberish.factory( syn, syn.graph , ['instruments','FM'], props )

    out.env.advance = out.advance 
    return out
  }

  FM.defaults = {
    carrierWaveform:'sine',
    modulatorWaveform:'sine',
    attack: 44,
    feedback: 0,
    decay: 22050,
    sustain:44100,
    sustainLevel:.6,
    release:22050,
    useADSR:false,
    shape:'linear',
    triggerRelease:false,
    gain: .25,
    cmRatio:2,
    index:5,
    pulsewidth:.25,
    frequency:220,
    pan: .5,
    antialias:false,
    panVoices:false,
    glide:1,
    saturation:1,
    filterMult:1.5,
    Q:.25,
    cutoff:.35,
    filterModel:0,
    filterMode:0,
    loudness: 1,
    __triggerLoudness:1

  }

  const PolyFM = Gibberish.PolyTemplate( FM, ['glide','frequency','attack','decay','pulsewidth','pan','gain','cmRatio','index', 'saturation', 'filterMult', 'Q', 'cutoff', 'antialias', 'filterModel', 'carrierWaveform', 'modulatorWaveform','filterMode', 'feedback', 'useADSR', 'sustain', 'release', 'sustainLevel', '__triggerLoudness','loudness' ] ) 
  PolyFM.defaults = FM.defaults

  return [ FM, PolyFM ]

}

},{"./instrument.js":43,"genish.js":114}],42:[function(require,module,exports){
let g = require( 'genish.js' ),
    instrument = require( './instrument.js' )

module.exports = function( Gibberish ) {

  let Hat = argumentProps => {
    let hat = Object.create( instrument ),
        tune  = g.in( 'tune' ),
        scaledTune = g.memo( g.add( .4, tune ) ),
        decay  = g.in( 'decay' ),
        gain  = g.in( 'gain' ),
        loudness = g.in( 'loudness' ),
        triggerLoudness = g.in( '__triggerLoudness' )

    let props = Object.assign( {}, Hat.defaults, argumentProps )

    let baseFreq = g.mul( 325, scaledTune ), // range of 162.5 - 487.5
        bpfCutoff = g.mul( g.param( 'bpfc', 7000 ), scaledTune ),
        hpfCutoff = g.mul( g.param( 'hpfc', 11000 ), scaledTune ),  
        s1 = Gibberish.oscillators.factory( 'square', baseFreq, false ),
        s2 = Gibberish.oscillators.factory( 'square', g.mul( baseFreq,1.4471 ) ),
        s3 = Gibberish.oscillators.factory( 'square', g.mul( baseFreq,1.6170 ) ),
        s4 = Gibberish.oscillators.factory( 'square', g.mul( baseFreq,1.9265 ) ),
        s5 = Gibberish.oscillators.factory( 'square', g.mul( baseFreq,2.5028 ) ),
        s6 = Gibberish.oscillators.factory( 'square', g.mul( baseFreq,2.6637 ) ),
        sum = g.add( s1,s2,s3,s4,s5,s6 ),
        eg = g.decay( g.mul( decay, g.gen.samplerate * 2 ), { initValue:0 }), 
        bpf = g.svf( sum, bpfCutoff, .5, 2, false ),
        envBpf = g.mul( bpf, eg ),
        hpf = g.filter24( envBpf, 0, hpfCutoff, 0 ),
        out = g.mul( hpf, g.mul( gain, g.mul( loudness, triggerLoudness ) ) )

    hat.env = eg 
    hat.isStereo = false

    const __hat = Gibberish.factory( hat, out, ['instruments','hat'], props  )
    

    return __hat
  }
  
  Hat.defaults = {
    gain:  .5,
    tune: .6,
    decay:.1,
    loudness:1,
    __triggerLoudness:1
  }

  return Hat

}

},{"./instrument.js":43,"genish.js":114}],43:[function(require,module,exports){
const ugen = require('../ugen.js')();

const instrument = Object.create(ugen);

Object.assign(instrument, {
  type: 'instrument',

  note(freq, loudness = null) {
    // if binop is should be used...
    if (isNaN(this.frequency)) {
      // and if we are assigning binop for the first time...
      let obj = Gibberish.processor.ugens.get(this.frequency.id);
      if (obj === undefined) {
        throw Error(`Incorrect note ${this.frequency} assigned to ${this.ugenName}; this value will be ignored.`);
        return;
      }
      if (obj.isop !== true) {
        obj.inputs[0] = freq;
      } else {
        obj.inputs[1] = freq;
        Gibberish.dirty(this);
      }
      this.frequency = obj;
    } else {
      this.frequency = freq;
    }

    if (loudness !== null) {
      this.__triggerLoudness = loudness;
    }

    this.env.trigger();
  },

  trigger(loudness = 1) {
    if (isNaN(loudness)) {
      throw Error(`A non-number was passed to trigger() on ${this.ugenName}; this value will be ignored and the envelope will not be triggered.`);
    } else {
      this.__triggerLoudness = loudness;
      this.env.trigger();
    }
  }

});

module.exports = instrument

},{"../ugen.js":72}],44:[function(require,module,exports){
module.exports = function( Gibberish ) {

const instruments = {
  Kick        : require( './kick.js' )( Gibberish ),
  Clave       : require( './conga.js' )( Gibberish )[0], // clave is same as conga with different defaults, see below
  Hat         : require( './hat.js' )( Gibberish ),
  Snare       : require( './snare.js' )( Gibberish ),
  Cowbell     : require( './cowbell.js' )( Gibberish ),
  Tom         : require( './tom.js' )( Gibberish ),
  Clap        : require( './clap.dsp.js' )( Gibberish ),
  Multisampler: require( './multisampler.dsp.js' )( Gibberish ),
  Soundfont   : require( './soundfont.js' )( Gibberish )
}

instruments.Clave.defaults.frequency = 2500
instruments.Clave.defaults.decay = .5;

[ instruments.Synth, instruments.PolySynth ]     = require( './synth.dsp.js' )( Gibberish );
[ instruments.Complex, instruments.PolyComplex]  = require( './complex.dsp.js' )( Gibberish );
[ instruments.Monosynth, instruments.PolyMono ]  = require( './monosynth.dsp.js' )( Gibberish );
[ instruments.FM, instruments.PolyFM ]           = require( './fm.dsp.js' )( Gibberish );
[ instruments.Sampler, instruments.PolySampler ] = require( './sampler.js' )( Gibberish );
[ instruments.Karplus, instruments.PolyKarplus ] = require( './karplusstrong.js' )( Gibberish );
[ instruments.Conga, instruments.PolyConga ]     = require( './conga.js' )( Gibberish )

instruments.export = target => {
  for( let key in instruments ) {
    if( key !== 'export' ) {
      target[ key ] = instruments[ key ]
    }
  }
}

return instruments

}

},{"./clap.dsp.js":37,"./complex.dsp.js":38,"./conga.js":39,"./cowbell.js":40,"./fm.dsp.js":41,"./hat.js":42,"./karplusstrong.js":45,"./kick.js":46,"./monosynth.dsp.js":47,"./multisampler.dsp.js":48,"./sampler.js":51,"./snare.js":52,"./soundfont.js":53,"./synth.dsp.js":54,"./tom.js":55}],45:[function(require,module,exports){
const g = require( 'genish.js' ),
      instrument = require( './instrument.js' )

module.exports = function( Gibberish ) {

  const Karplus = inputProps => {

    const props = Object.assign( {}, Karplus.defaults, inputProps )
    let syn = Object.create( instrument )
    
    let sampleRate = Gibberish.ctx.sampleRate 

    const trigger = g.bang(),
          // high initialValue stops triggering on initialization
          phase = g.accum( 1, trigger, { shouldWrapMax:false, initialValue:1000000 } ),
          env = g.gtp( g.sub( 1, g.div( phase, 200 ) ), 0 ),
          impulse = g.mul( g.noise(), env ),
          feedback = g.history(),
          frequency = g.in('frequency'),
          glide = g.max( 1, g.in( 'glide' ) ),
          slidingFrequency = g.slide( frequency, glide, glide ),
          delay = g.delay( g.add( impulse, feedback.out ), g.div( sampleRate, slidingFrequency )),
          decayed = g.mul( delay, g.t60( g.mul( g.in('decay'), slidingFrequency ) ) ),
          damped =  g.mix( decayed, feedback.out, g.in('damping') ),
          n = g.noise(),
          blendValue = g.switch( g.gt( n, g.in('blend') ), -1, 1 ), 
          withGain = g.mul( g.mul( blendValue, damped ), g.mul( g.mul( g.in('loudness'), g.in('__triggerLoudness') ), g .in('gain') ) )

    feedback.in( damped )

    const properties = Object.assign( {}, Karplus.defaults, props )

    Object.assign( syn, {
      properties : props,

      env : trigger,
      phase,

      getPhase() {
        return Gibberish.memory.heap[ phase.memory.value.idx ]
      },
    })

    if( properties.panVoices ) {  
      const panner = g.pan( withGain, withGain, g.in( 'pan' ) )
      syn = Gibberish.factory( syn, [panner.left, panner.right], ['instruments','karplus'], props  )
      syn.isStereo = true
    }else{
      syn = Gibberish.factory( syn, withGain, ['instruments','karplus'], props )
      syn.isStereo = false 
    }

    return syn
  }
  
  Karplus.defaults = {
    decay: .97,
    damping:.2,
    gain: .15,
    frequency:220,
    pan: .5,
    glide:1,
    panVoices:false,
    loudness:1,
    __triggerLoudness:1,
    blend:1
  }

  let envCheckFactory = ( syn,synth ) => {
    let envCheck = ()=> {
      let phase = syn.getPhase(),
          endTime = synth.decay * sampleRate

      if( phase > endTime ) {
        synth.disconnectUgen( syn )
        syn.isConnected = false
        Gibberish.memory.heap[ syn.phase.memory.value.idx ] = 0 // trigger doesn't seem to reset for some reason
      }else{
        Gibberish.blockCallbacks.push( envCheck )
      }
    }
    return envCheck
  }

  const PolyKarplus = Gibberish.PolyTemplate( Karplus, ['frequency','decay','damping','pan','gain', 'glide','loudness', '__triggerLoudness'], envCheckFactory ) 
  PolyKarplus.defaults = Karplus.defaults

  return [ Karplus, PolyKarplus ]

}

},{"./instrument.js":43,"genish.js":114}],46:[function(require,module,exports){
let g = require( 'genish.js' ),
    instrument = require( './instrument.js' )

module.exports = function( Gibberish ) {

  const Kick = inputProps => {
    // establish prototype chain
    const kick = Object.create( instrument )

    // define inputs
    const frequency = g.in( 'frequency' ),
          decay = g.in( 'decay' ),
          tone  = g.in( 'tone' ),
          gain  = g.in( 'gain' ),
          loudness = g.in( 'loudness' ),
          triggerLoudness = g.in( '__triggerLoudness' ),
          Loudness = g.mul( loudness, triggerLoudness )
    
    // create initial property set
    const props = Object.assign( {}, Kick.defaults, inputProps )
    Object.assign( kick, props )

    // create DSP graph
    const trigger = g.bang(),
          impulse = g.mul( trigger, 60 ),
          scaledDecay = g.sub( 1.005, decay ), // -> range { .005, 1.005 }
          scaledTone = g.add( 50, g.mul( tone, g.mul(4000, Loudness ) ) ), // -> range { 50, 4050 }
          bpf = g.svf( impulse, frequency, scaledDecay, 2, false ),
          lpf = g.svf( bpf, scaledTone, .5, 0, false ),
          graph = g.mul( lpf, g.mul( gain, Loudness ) )
    
    kick.env = trigger
    const out = Gibberish.factory( kick, graph, ['instruments','kick'], props  )

    return out
  }
  
  Kick.defaults = {
    gain: 1,
    frequency:85,
    tone: .25,
    decay:.9,
    loudness:1,
    __triggerLoudness:1
  }

  return Kick

}

},{"./instrument.js":43,"genish.js":114}],47:[function(require,module,exports){
const g = require( 'genish.js' ),
      instrument = require( './instrument.js' ),
      feedbackOsc = require( '../oscillators/fmfeedbackosc.js' )

module.exports = function( Gibberish ) {

  const Mono = argumentProps => {
    const syn = Object.create( instrument ),
          oscs = [], 
          frequency = g.in( 'frequency' ),
          glide = g.max( 1, g.in( 'glide' ) ),
          slidingFreq = g.memo( g.slide( frequency, glide, glide ) ),
          attack = g.in( 'attack' ), decay = g.in( 'decay' ),
          sustain = g.in( 'sustain' ), sustainLevel = g.in( 'sustainLevel' ),
          release = g.in( 'release' ),
          loudness = g.in( 'loudness' ),
          triggerLoudness = g.in( '__triggerLoudness' ),
          Loudness = g.mul( loudness, triggerLoudness ),
          saturation = g.in( 'saturation' )

    const props = Object.assign( {}, Mono.defaults, argumentProps )
    Object.assign( syn, props )

    syn.__createGraph = function() {
      const env = Gibberish.envelopes.factory( 
        props.useADSR, 
        props.shape, 
        attack, decay, 
        sustain, sustainLevel, 
        release, 
        props.triggerRelease
      )

      for( let i = 0; i < 3; i++ ) {
        let osc, freq

        switch( i ) {
          case 1:
            freq = g.add( slidingFreq, g.mul( slidingFreq, g.in('detune2') ) )
            break;
          case 2:
            freq = g.add( slidingFreq, g.mul( slidingFreq, g.in('detune3') ) )
            break;
          default:
            freq = slidingFreq
        }

        osc = Gibberish.oscillators.factory( syn.waveform, freq, syn.antialias )
        
        oscs[ i ] = osc
      }


      //const baseCutoffFreq = g.in('cutoff') * (frequency /  (g.gen.samplerate / 16 ))
      //const cutoff = baseCutoffFreq * g.pow( 2, g.in('filterMult') * loudness ) * env 
      const oscSum = g.add( ...oscs ),
            // XXX horrible hack below to "use" saturation even when not using a diode filter 
            oscWithEnv = props.filterModel=== 2 ? g.mul( oscSum, env ) : g.sub( g.add( g.mul( oscSum, env), saturation ), saturation ),
            baseCutoffFreq = g.mul( g.in('cutoff'), g.div( frequency, g.gen.samplerate / 16 ) ),
            cutoff = g.mul( g.mul( baseCutoffFreq, g.pow( 2, g.mul( g.in('filterMult'), Loudness ) )), env ),
            filteredOsc = Gibberish.filters.factory( oscWithEnv, cutoff, g.in('saturation'), syn )
        
      if( props.panVoices ) {  
        const panner = g.pan( filteredOsc,filteredOsc, g.in( 'pan' ) )
        syn.graph = [ g.mul( panner.left, g.in('gain'), Loudness ), g.mul( panner.right, g.in('gain'), Loudness ) ]
        syn.isStereo = true
      }else{
        syn.graph = g.mul( filteredOsc, g.in('gain'), Loudness )
        syn.isStereo = false
      }

      syn.env = env
    }

    syn.__requiresRecompilation = [ 'waveform', 'antialias', 'filterModel', 'filterMode' ]
    syn.__createGraph()

    const out = Gibberish.factory( syn, syn.graph, ['instruments','Monosynth'], props )

    return out
  } 
  
  Mono.defaults = {
    waveform: 'saw',
    attack: 44,
    decay: 22050,
    sustain:44100,
    sustainLevel:.6,
    release:22050,
    useADSR:false,
    shape:'linear',
    triggerRelease:false,
    gain: .25,
    pulsewidth:.25,
    frequency:220,
    pan: .5,
    detune2:.005,
    detune3:-.005,
    cutoff: .5,
    Q: .25,
    panVoices:false,
    glide: 1,
    antialias:false,
    //filterType: 1,
    filterModel: 1,
    filterMode: 0, // 0 = LP, 1 = HP, 2 = BP, 3 = Notch
    saturation:.5,
    filterMult: 2,
    loudness:1,
    __triggerLoudness:1
  }

  let PolyMono = Gibberish.PolyTemplate( Mono, 
    [ 'frequency','attack','decay','cutoff','Q',
      'detune2','detune3','pulsewidth','pan','gain', 
      'glide', 'saturation', 'filterMult',  'antialias', 
      'filterModel', 'waveform', 'filterMode', 'loudness', '__triggerLoudness' ]
  ) 
  PolyMono.defaults = Mono.defaults

  return [ Mono, PolyMono ]
}

},{"../oscillators/fmfeedbackosc.js":63,"./instrument.js":43,"genish.js":114}],48:[function(require,module,exports){
const g = require( 'genish.js' ),
      instrument = require( './instrument.js' )

const genish = g

module.exports = function( Gibberish ) {
  const proto = Object.create( instrument )
  const memo = {}
  
  Object.assign( proto, {
    pickFile( sample ) {
      this.currentSample = sample
    },
    pick( __idx ) {
      const idx = Math.floor( __idx )
      const keys = Object.keys( this.samplers )
      const key = keys[ idx ]
      this.currentSample = key
    },
    pickplay( __idx ) {
      const idx = Math.floor( __idx )
      const keys = Object.keys( this.samplers )
      const key = keys[ idx ]
      this.currentSample = key
      return this.trigger()
    },
    note( rate ) {
      //this.rate = rate
      return this.trigger( null, rate )
    },
    setpan( num=0, value=.5 ) {
      if( Gibberish.mode === 'processor' ) {
        const voice = this.voices[ num ]
        // set voice buffer length
        //g.gen.memory.heap.set( [ value ], voice.pan.memory.values.idx )
        voice.pan = value
      }
    },
    setrate( num=0, value=1 ) {
      if( Gibberish.mode === 'processor' ) {
        const voice = this.voices[ num ]
        // set voice buffer length
        //g.gen.memory.heap.set( [ value ], voice.rate.memory.values.idx )
        voice.rate = value
      }
    },
    trigger( volume=null, rate=null ) {
      'no jsdsp'
      if( volume !== null ) this.__triggerLoudness = volume

      let voice = null
      if( Gibberish.mode === 'processor' ) {
        const sampler = this.samplers[ this.currentSample ]

        // if sample isn't loaded...
        if( sampler === undefined ) return

        voice = this.__getVoice__()

        // set voice buffer length
        g.gen.memory.heap[ voice.bufferLength.memory.values.idx ] = sampler.dataLength

        // set voice data index
        g.gen.memory.heap[ voice.bufferLoc.memory.values.idx ] = sampler.dataIdx

        //if( rate !== null ) g.gen.memory.heap[ voice.rate.memory.values.idx ] = rate
        if( rate !== null ) voice.rate = rate
        if( rate > 0 ) {
          voice.trigger()
        }else{
          //console.log( 'reverse?', rate )
          voice.bang.trigger()
          //voice.phase.value = 0
          voice.phase.value = sampler.dataLength - 1
          //console.log( 'phase', voice.phase.value )
        }
        //if( rate < 0 ) {
        //  const phase = sampler.dataIdx + Math.round((sampler.dataLength/2)) - 1
        //  console.log( 'phase:', phase, 'length:', sampler.dataLength, 'start:', sampler.dataIdx )
        //  //voice.phase.value = phase
        //  //g.gen.memory.heap[ voice.phase.memory.value.idx ] = phase
        //}else{
        //  // will reset phase to 0
        //  voice.trigger()
        //}
        
        //voice.trigger()
        //g.gen.memory.heap[ voice.rate.memory.values.idx ] = rate
      }

      return voice
    },
    __getVoice__() {
      return this.voices[ this.voiceCount++ % this.voices.length ]
    },
  })

  const Sampler = inputProps => {
    const syn = Object.create( proto )

    const props = Object.assign( { onload:null, voiceCount:0, files:[] }, Sampler.defaults, inputProps )

    syn.isStereo = props.isStereo !== undefined ? props.isStereo : false

    const start = g.in( 'start' ), end = g.in( 'end' ), 
          rate = g.in( 'rate' ), shouldLoop = g.in( 'loops' ),
          loudness = g.in( 'loudness' ),
          triggerLoudness = g.in( '__triggerLoudness' ),
          // rate storage is used to determine whether we're playing
          // the sample forward or in reverse, for use in the 'trigger' method.
          rateStorage = g.data([0], 1, { meta:true })

    Object.assign( syn, props )

    if( Gibberish.mode === 'worklet' ) {
      syn.__meta__ = {
        address:'add',
        name: ['instruments', 'Multisampler'],
        properties: JSON.stringify(props), 
        id: syn.id
      }

      Gibberish.worklet.ugens.set( syn.id, syn )

      Gibberish.worklet.port.postMessage( syn.__meta__ )
    }

    const voices = []
    for( let i = 0; i < syn.maxVoices; i++ ) {
      'use jsdsp'

      const voice = {
        bufferLength: g.data( [1], 1, { meta:true }),
        bufferLoc:    g.data( [1], 1, { meta:true }),
        bang: g.bang(),
        // XXX how do I change this from main thread?
        __pan: g.data( [.5], 1, { meta:true }),
        __rate: g.data( [1], 1, { meta:true }),
        __shouldLoop: g.data( [1], 1, { meta:true }),
        __loudness:  g.data( [1], 1, { meta:true }),
        get loudness() { 
          return g.gen.memory.heap[ this.__loudness.memory.values.idx   ]
        },
        set loudness( v ) {
          g.gen.memory.heap[ this.__loudness.memory.values.idx ] = v
        },
        set pan(v) {
          g.gen.memory.heap[ this.__pan.memory.values.idx ] = v
        },
        set rate(v) {
          g.gen.memory.heap[ this.__rate.memory.values.idx ] = v
        },
      }

      voice.phase = g.counter( 
        rate * voice.__rate[0], 
        start * voice.bufferLength[0],
        end * voice.bufferLength[0], 
        voice.bang,
        shouldLoop, 
        { shouldWrap:false, initialValue:9999999 }
      )

      voice.trigger = voice.bang.trigger

      voice.graph = g.ifelse(
        // if phase is greater than start and less than end... 
        g.and( 
          g.gte( voice.phase, start * voice.bufferLength[0] ), 
          g.lt(  voice.phase, end   * voice.bufferLength[0] ) 
        ),
        // ...read data
        voice.peek = g.peekDyn( 
          voice.bufferLoc[0], 
          voice.bufferLength[0],
          voice.phase,
          { mode:'samples' }
        ),
        // ...else return 0
        0
      ) 
      * loudness 
      * voice.__loudness[0] 

      const pan = g.pan( voice.graph, voice.graph, voice.__pan[0] )
      voice.graph = [ pan.left, pan.right ]

      voices.push( voice )
    }

    // load in sample data
    const samplers = {}

    // bound to individual sampler objects in loadSample function
    syn.loadBuffer = function( buffer, onload ) {
      // main thread: when sample is loaded, copy it over message port
      // processor thread: onload is called via messageport handler, and
      // passed in the new buffer to be copied.
      if( Gibberish.mode === 'worklet' ) {
        const memIdx = Gibberish.memory.alloc( this.data.buffer.length, true )

        Gibberish.worklet.port.postMessage({
          address:'copy_multi',
          id:     syn.id,
          buffer: this.data.buffer,
          filename: this.filename
        })

        if( typeof onload === 'function' ) onload( this, buffer )

      }else if( Gibberish.mode === 'processor' ) {
        this.data.buffer = buffer 

        // set data memory spec before issuing memory request
        this.dataLength = this.data.memory.values.length = this.data.dim = this.data.buffer.length

        // request memory to copy the bufer over
        g.gen.requestMemory( this.data.memory, false )
        g.gen.memory.heap.set( this.data.buffer, this.data.memory.values.idx )

        // set location of buffer (does not work)
        this.dataIdx = this.data.memory.values.idx

        syn.currentSample = this.filename
      }
    }

    syn.loadSample = function( filename, __onload, buffer=null ) {
      'use jsdsp'

      const sampler = samplers[ filename ] = {
        dataLength: null,
        dataIdx: null,
        buffer: null,
        filename
      }

      const onload = syn.loadBuffer.bind( sampler ) 
      // passing a filename to data will cause it to be loaded in the main thread
      // onload will then be called to pass the buffer over the messageport. In the
      // processor thread, make a placeholder until data is available.
      if( Gibberish.mode === 'worklet' ) {
        sampler.data = g.data( buffer !== null ? buffer : filename, 1, { onload })

        // check to see if a promise is returned; a valid
        // data object is only return if the file has been
        // previously loaded and the corresponding buffer has
        // been cached.
        if( sampler.data instanceof Promise ) {
          sampler.data.then( d => {
            sampler.data = d
            memo[ filename ] = sampler.data 
            onload( sampler, __onload )
          })
        }else{
          // using a cached data buffer, no need
          // for asynchronous loading.
          memo[ filename ] = sampler
          onload( sampler, __onload )
        }     
      }else{
        sampler.data = g.data( new Float32Array(), 1, { onload, filename })
        sampler.data.onload = onload
      } 
    }

    props.files.forEach( filename => syn.loadSample( filename ) )

    syn.__createGraph = function() {
      'use jsdsp'
      
      const graphs = voices.map( voice => voice.graph )
      const left = g.add( ...voices.map( voice => voice.graph[0] ) )
      const right = g.add( ...voices.map( voice => voice.graph[1] ) )
      const gain = g.in( 'gain' )
      syn.graph = [ left * gain, right * gain ]

      if( syn.panVoices === true ) { 
        const panner = g.pan( syn.graph[0], syn.graph[1], g.in( 'pan' ) ) 
        syn.graph = [ panner.left, panner.right ]
      }
    }

    syn.__createGraph()

    const out = Gibberish.factory( 
      syn,
      syn.graph,
      ['instruments','multisampler'], 
      props 
    ) 

    Gibberish.preventProxy = true
    Gibberish.proxyEnabled = false

    out.voices = voices
    out.samplers = samplers

    Gibberish.proxyEnabled = true
    Gibberish.preventProxy = false

    return out
  }

  Sampler.defaults = {
    gain: 1,
    pan: .5,
    rate: 1,
    panVoices:false,
    shouldLoop:false,
    loops: 0,
    start:0,
    end:1,
    bufferLength:-999999999,
    loudness:1,
    maxVoices:5, 
    __triggerLoudness:1
  }

  return Sampler
}

},{"./instrument.js":43,"genish.js":114}],49:[function(require,module,exports){
// XXX TOO MANY GLOBAL GIBBERISH VALUES

const Gibberish = require( '../index.js' )

module.exports = {
  note( freq ) {
    // will be sent to processor node via proxy method...
    if( Gibberish.mode !== 'worklet' ) {
      let voice = this.__getVoice__()
      //Object.assign( voice, this.properties )
      //if( gain === undefined ) gain = this.gain
      //voice.gain = gain
      voice.__triggerLoudness = this.__triggerLoudness
      voice.note( freq, this.__triggerLoudness )
      this.__runVoice__( voice, this )
      this.triggerNote = freq
    }
  },

  // XXX this is not particularly satisfying...
  // must check for both notes and chords
  trigger( loudness ) {
    if( this.triggerChord !== null ) {
      this.triggerChord.forEach( v => {
        let voice = this.__getVoice__()
        Object.assign( voice, this.properties )
        voice.note( v, loudness )
        this.__runVoice__( voice, this )
      })
    }else if( this.triggerNote !== null ) {
      let voice = this.__getVoice__()
      Object.assign( voice, this.properties )
      voice.note( this.triggerNote, loudness )
      this.__runVoice__( voice, this )
    }else{
      let voice = this.__getVoice__()
      Object.assign( voice, this.properties )
      voice.trigger( loudness )
      this.__runVoice__( voice, this )
    }
  },

  __runVoice__( voice, _poly ) {
    if( !voice.isConnected ) {
      voice.connect( _poly )
      voice.isConnected = true
    }

    //let envCheck
    //if( _poly.envCheck === undefined ) {
    //  envCheck = function() {
    //    if( voice.env.isComplete() ) {
    //      _poly.disconnectUgen( voice )
    //      voice.isConnected = false
    //    }else{
    //      Gibberish.blockCallbacks.push( envCheck )
    //    }
    //  }
    //}else{
    //  envCheck = _poly.envCheck( voice, _poly )
    //}

    // XXX uncomment this line to turn on dynamically connecting
    // disconnecting individual voices from graph
    //Gibberish.blockCallbacks.push( envCheck )
  },

  __getVoice__() {
    return this.voices[ this.voiceCount++ % this.voices.length ]
  },

  chord( frequencies ) {
    // will be sent to processor node via proxy method...
    if( Gibberish !== undefined && Gibberish.mode !== 'worklet' ) {
      frequencies.forEach( v => this.note( v ) )
      this.triggerChord = frequencies
    }
  },

  free() {
    for( let child of this.voices ) child.free()
  },

  triggerChord:null,
  triggerNote:null
}

},{"../index.js":36}],50:[function(require,module,exports){
/*
 * This files creates a factory generating polysynth constructors.
 */

const g = require( 'genish.js' )
const __proxy = require( '../workletProxy.js' )

module.exports = function( Gibberish ) {
  const proxy = __proxy( Gibberish )

  const TemplateFactory = ( ugen, propertyList, _envCheck ) => {

    const Template = props => {
      const properties = Object.assign( {}, { isStereo:true, maxVoices:4 }, props )

      //const synth = properties.isStereo === true ? Object.create( stereoProto ) : Object.create( monoProto )
      const synth = properties.isStereo === true ? Gibberish.Bus2({ __useProxy__:false }) : Gibberish.Bus({ __useProxy__:false }) 

      Object.assign( 
        synth, 

        {
          maxVoices: properties.maxVoices, 
          voiceCount: 0,
          envCheck: _envCheck,
          dirty: true,
          ugenName: 'poly' + ugen.name + '_' + synth.id + '_' + ( properties.isStereo ? 2 : 1 ),
          properties
        },

        Gibberish.mixins.polyinstrument
      )

      properties.panVoices = true//false//properties.isStereo
      synth.callback.ugenName = synth.ugenName

      const storedId = properties.id
      if( properties.id !== undefined ) delete properties.id 

      const voices = []
      for( let i = 0; i < synth.maxVoices; i++ ) {
        properties.id = synth.id +'_'+i
        voices[i] = ugen( properties )
        if( Gibberish.mode === 'processor' )
          voices[i].callback.ugenName = voices[i].ugenName

        voices[i].isConnected = false
        //synth.__voices[i] = proxy( ['instruments', ugen.name], properties, synth.voices[i] )
      }

      let _propertyList 
      if( properties.isStereo === false ) {
        _propertyList = propertyList.slice( 0 )
        const idx =  _propertyList.indexOf( 'pan' )
        if( idx  > -1 ) _propertyList.splice( idx, 1 )
      }

      properties.id = storedId

      TemplateFactory.setupProperties( synth, ugen, properties.isStereo ? propertyList : _propertyList )
      
      const p = proxy( ['instruments', 'Poly'+ugen.name], properties, synth ) 

      // proxy workaround nightmare... if we include the voices when we create
      // the proxy, they wind up being strangely unaddressable. perhaps they
      // are being overwritting in the Processor.ugens map object?
      // manually adding each one seems to work around the problem
      if( Gibberish.mode === 'worklet' ) {
        p.voices = []
        let count = 0
        for( let v of voices ) {
          Gibberish.worklet.port.postMessage({
            address: 'addObjectToProperty',
            object: synth.id,
            name:'voices',
            key:count,
            value:v.id
          })

          p.voices[ count ] = v
          count++
        }
      }

      return p 
    }

    return Template
  }

  TemplateFactory.setupProperties = function( synth, ugen, props ) {
    for( let property of props ) {
      if( property === 'pan' || property === 'id' ) continue
      Object.defineProperty( synth, property, {
        configurable:true,
        get() {
          return synth.properties[ property ] || ugen.defaults[ property ]
        },
        set( v ) {
          synth.properties[ property ] = v
          for( let child of synth.voices ) {
            child[ property ] = v
          }
        }
      })
    }
  }

  return TemplateFactory

}

},{"../workletProxy.js":74,"genish.js":114}],51:[function(require,module,exports){
const g = require( 'genish.js' ),
      instrument = require( './instrument.js' )

module.exports = function( Gibberish ) {
  const proto = Object.create( instrument )
  const memo = {}

  Object.assign( proto, {
    note( rate ) {
      this.rate = rate
      if( rate > 0 ) {
        this.__trigger()
      }else{
        this.__phase__.value = this.end * (this.data.buffer.length - 1)
      }
    },
    trigger( volume ) {
      if( volume !== undefined ) this.gain = volume

      if( Gibberish.mode === 'processor' ) {
        // if we're playing the sample forwards...
        if( Gibberish.memory.heap[ this.__rateStorage__.memory.values.idx ] > 0 ) {
          this.__trigger()
        }else{
          this.__phase__.value = this.end * (this.data.buffer.length - 1)
        }
      }
    },
  })

  const Sampler = inputProps => {
    const syn = Object.create( proto )

    const props = Object.assign( { onload:null }, Sampler.defaults, inputProps )

    syn.isStereo = props.isStereo !== undefined ? props.isStereo : false

    const start = g.in( 'start' ), end = g.in( 'end' ), 
          bufferLength = g.in( 'bufferLength' ), 
          rate = g.in( 'rate' ), shouldLoop = g.in( 'loops' ),
          loudness = g.in( 'loudness' ),
          triggerLoudness = g.in( '__triggerLoudness' ),
          // rate storage is used to determine whether we're playing
          // the sample forward or in reverse, for use in the 'trigger' method.
          rateStorage = g.data([0], 1, { meta:true })

    Object.assign( syn, props )

    if( Gibberish.mode === 'worklet' ) {
      syn.__meta__ = {
        address:'add',
        name: ['instruments', 'Sampler'],
        properties: JSON.stringify(props), 
        id: syn.id
      }

      Gibberish.worklet.ugens.set( syn.id, syn )

      Gibberish.worklet.port.postMessage( syn.__meta__ )
    }

    syn.__createGraph = function() {
      syn.__bang__ = g.bang()
      syn.__trigger = syn.__bang__.trigger

      syn.__phase__ = g.counter( 
        rate, 
        g.mul(start,bufferLength), 
        g.mul( end, bufferLength ), 
        syn.__bang__, 
        shouldLoop, 
        { shouldWrap:false, initialValue:9999999 }
      )
      
      syn.__rateStorage__ = rateStorage
      rateStorage[0] = rate

      // XXX we added our recorded 'rate' param and then effectively subtract it,
      // so that its presence in the graph will force genish to actually record the 
      // rate as the input. this is extremely hacky... there should be a way to record
      // value without having to include it in the graph!
      syn.graph = g.add( g.mul( 
        g.ifelse( 
          g.and( g.gte( syn.__phase__, g.mul(start,bufferLength) ), g.lt( syn.__phase__, g.mul(end,bufferLength) ) ),
          g.peek( 
            syn.data, 
            syn.__phase__,
            { mode:'samples' }
          ),
          0
        ), 
        g.mul( g.mul( loudness, triggerLoudness ), g.in('gain') )
      ), rateStorage[0], g.mul( rateStorage[0], -1 ) )
      
      if( syn.panVoices === true ) { 
        const panner = g.pan( syn.graph, syn.graph, g.in( 'pan' ) ) 
        syn.graph = [ panner.left, panner.right ]
      }
    }

    const onload = (buffer,filename) => {
      if( buffer === undefined ) return
      if( Gibberish.mode === 'worklet' ) {
        //const memIdx = memo[ filename ].idx !== undefined ? memo[ filename ].idx : Gibberish.memory.alloc( syn.data.memory.values.length, true )

        const memIdx = Gibberish.memory.alloc( buffer.length, true )
        //memo[ filename ].idx = memIdx

        Gibberish.worklet.port.postMessage({
          address:'copy',
          id:     syn.id,
          idx:    memIdx,
          buffer
        })

      }else if ( Gibberish.mode === 'processor' ) {
        syn.data.buffer = buffer
        syn.data.memory.values.length = syn.data.dim = buffer.length
        syn.__redoGraph() 
      }

      if( typeof syn.onload === 'function' ){  
        syn.onload( buffer || syn.data.buffer )
      }
      if( syn.bufferLength === -999999999 && syn.data.buffer !== undefined ) syn.bufferLength = syn.data.buffer.length - 1
    }

    //if( props.filename ) {
    syn.loadFile = function( filename ) {
      //if( memo[ filename ] === undefined ) {
        if( Gibberish.mode !== 'processor' ) {
          syn.data = g.data( filename, 1, { onload })


          // check to see if a promise is returned; a valid
          // data object is only return if the file has been
          // previously loaded and the corresponding buffer has
          // been cached.
          if( syn.data instanceof Promise ) {
            syn.data.then( d => {
              syn.data = d
              memo[ filename ] = syn.data
              onload( d.buffer, filename )
            })
          }else{
            // using a cached data buffer, no need
            // for asynchronous loading.
            memo[ filename ] = syn.data
            onload( syn.data.buffer, filename )
          }     
        }else{
          syn.data = g.data( new Float32Array(), 1, { onload, filename })
          //memo[ filename ] = syn.data
        }
      //}else{
      //  syn.data = memo[ filename ]
      //  console.log( 'memo data:', syn.data )
      //  onload( syn.data.buffer, filename )
      //}
    }

    syn.loadBuffer = function( buffer ) {
      if( Gibberish.mode === 'processor' ) {
        syn.data.buffer = buffer
        syn.data.memory.values.length = syn.data.dim = buffer.length
        syn.__redoGraph() 
      }
    }

    if( props.filename !== undefined ) {
      syn.loadFile( props.filename )
    }else{
      syn.data = g.data( new Float32Array() )
    }

    if( syn.data !== undefined ) {
      syn.data.onload = onload

      syn.__createGraph()
    }

    const out = Gibberish.factory( 
      syn,
      syn.graph,
      ['instruments','sampler'], 
      props 
    ) 

    return out
  }

  Sampler.defaults = {
    gain: 1,
    pan: .5,
    rate: 1,
    panVoices:false,
    loops: 0,
    start:0,
    end:1,
    bufferLength:-999999999,
    loudness:1,
    __triggerLoudness:1
  }

  const envCheckFactory = function( voice, _poly ) {
    const envCheck = () => {
      const phase = Gibberish.memory.heap[ voice.__phase__.memory.value.idx ]
      if( ( voice.rate > 0 && phase > voice.end ) || ( voice.rate < 0 && phase < 0 ) ) {
        _poly.disconnectUgen.call( _poly, voice )
        voice.isConnected = false
      }else{
        Gibberish.blockCallbacks.push( envCheck )
      }
    }

    return envCheck
  }

  const PolySampler = Gibberish.PolyTemplate( Sampler, ['rate','pan','gain','start','end','loops','bufferLength','__triggerLoudness','loudness'], envCheckFactory ) 

  return [ Sampler, PolySampler ]
}


},{"./instrument.js":43,"genish.js":114}],52:[function(require,module,exports){
const g = require( 'genish.js' ),
      instrument = require( './instrument.js' )
  
module.exports = function( Gibberish ) {

  const Snare = argumentProps => {
    const snare = Object.create( instrument ),
          decay = g.in( 'decay' ),
          scaledDecay = g.mul( decay, g.gen.samplerate * 2 ),
          snappy= g.in( 'snappy' ),
          tune  = g.in( 'tune' ),
          gain  = g.in( 'gain' ),
          loudness = g.in( 'loudness' ),
          triggerLoudness = g.in('__triggerLoudness'),
          Loudness = g.mul( loudness, triggerLoudness ),
          eg = g.decay( scaledDecay, { initValue:0 } ), 
          check = g.memo( g.gt( eg, .0005 ) ),
          rnd = g.mul( g.noise(), eg ),
          hpf = g.svf( rnd, g.add( 1000, g.mul( g.add( 1, tune), 1000 ) ), .5, 1, false ),
          snap = g.mul( g.gtp( g.mul( hpf, snappy ), 0 ), Loudness ), // rectify
          bpf1 = g.svf( eg, g.mul( 180, g.add( tune, 1 ) ), .05, 2, false ),
          bpf2 = g.svf( eg, g.mul( 330, g.add( tune, 1 ) ), .05, 2, false ),
          out  = g.memo( g.add( snap, bpf1, g.mul( bpf2, .8 ) ) ), //XXX why is memo needed?
          scaledOut = g.mul( out, g.mul( gain, Loudness ) ),
          ife = g.switch( check, scaledOut, 0 ),
          props = Object.assign( {}, Snare.defaults, argumentProps )

    // XXX TODO : make above switch work with ifelse. the problem is that poke ugens put their
    // code at the bottom of the callback function, instead of at the end of the
    // associated if/else block.
    
    snare.env = eg 
    const __snare = Gibberish.factory( snare, ife, ['instruments','snare'], props  )
    
    return __snare
  }
  
  Snare.defaults = {
    gain: .5,
    tune:0,
    snappy: 1,
    decay:.1,
    loudness:1,
    __triggerLoudness:1
  }

  return Snare

}

},{"./instrument.js":43,"genish.js":114}],53:[function(require,module,exports){
/*fetch( '0000_Aspirin_sf2_file.json' )
.then( res => res.json() )
.then( json => {
  window.zones = json.zones
  console.log( window.zones )
})

ab = Gibberish.utilities..decodeArrayBuffer( zones[0].file )
genish.utilities.ctx.decodeAudioData( ab, buffer => {
  __ab = buffer
  console.log( 'buffer made' )
})


_d = data( __ab )
play( peek( _d, phasor(1,0,{min:0}) ) )
*/

const g = require( 'genish.js' ),
      instrument = require( './instrument.js' )

const genish = g

const soundfonts = {}

const banks = [
  'Aspirin',
  'Chaos',
  'FluidR3',
  'GeneralUserGS',
  'JCLive'
]

module.exports = function( Gibberish ) {
  const proto = Object.create( instrument )
  const memo = {}
  
  Object.assign( proto, {
    pickFile( sample ) {
      this.currentSample = sample
    },
    pick( __idx ) {
      const idx = Math.floor( __idx )
      const keys = Object.keys( this.samplers )
      const key = keys[ idx ]
      this.currentSample = key
    },
    pickplay( __idx ) {
      const idx = Math.floor( __idx )
      const keys = Object.keys( this.samplers )
      const key = keys[ idx ]
      this.currentSample = key
      return this.trigger()
    },
    __note( rate, loudness=null ) {
      // soundfont measures pitch in cents
      // originalPitch = findMidiForHz( hz ) * 100 // (100 cents per midi index)
      // rate = Math.pow(2, (100.0 * pitch - originalPitch) / 1200.0) // 1200 cents per octave
      return this.trigger( loudness, rate )
    },
    note( freq, loudness=null ) {
      'no jsdsp'
      const midinote = 69 + 12 * Math.log2( freq/440 )
      this.midinote( midinote, loudness )
    },
    midipick( midinote, loudness ) {
      // loop through zones to find correct sample #
      let idx = 0, pitch = 0
      for( let zone of this.zones ) {
        if( midinote >= zone.keyRangeLow && midinote <= zone.keyRangeHigh ) {
          pitch = zone.originalPitch
          break;
        }
        idx++
      }
      this.pick( idx )
      return pitch
    },
    midinote( midinote, loudness=null ) {
      'no jsdsp'
      const samplePitch = this.midipick( midinote )
      const pitch = Math.pow( 2, (100 * midinote - samplePitch ) / 1200 ) 
      //const pitch = 1//Math.pow( 2, (samplePitch ) ) 
      this.__note( pitch, loudness )
    }, 
    midichord( frequencies ) {
      if( Gibberish !== undefined && Gibberish.mode !== 'worklet' ) {
        frequencies.forEach( v => this.midinote( v ) )
        this.triggerChord = frequencies
      }
    },
    chord( frequencies ) {
      if( Gibberish !== undefined && Gibberish.mode !== 'worklet' ) {
        frequencies.forEach( v => this.note( v ) )
        this.triggerChord = frequencies
      }
    },

    setpan( num=0, value=.5 ) {
      if( Gibberish.mode === 'processor' ) {
        const voice = this.voices[ num ]
        // set voice buffer length
        //g.gen.memory.heap.set( [ value ], voice.pan.memory.values.idx )
        voice.pan = value
      }
    },
    setrate( num=0, value=1 ) {
      if( Gibberish.mode === 'processor' ) {
        const voice = this.voices[ num ]
        // set voice buffer length
        //g.gen.memory.heap.set( [ value ], voice.rate.memory.values.idx )
        voice.rate = value
      }
    },
    trigger( volume=null, rate=null ) {
      'no jsdsp'
      //if( volume !== null ) this.__triggerLoudness = volume

      let voice = null
      if( Gibberish.mode === 'processor' ) {
        const sampler = this.samplers[ this.currentSample ]

        // if sample isn't loaded...
        if( sampler === undefined ) return

        voice = this.__getVoice__()

        // set voice buffer length
        g.gen.memory.heap[ voice.bufferLength.memory.values.idx ] = sampler.dataLength

        // set voice data index
        g.gen.memory.heap[ voice.bufferLoc.memory.values.idx ] = sampler.dataIdx

        g.gen.memory.heap[ voice.__loopStart.memory.values.idx ] = sampler.zone.loopStart
        g.gen.memory.heap[ voice.__loopEnd.memory.values.idx   ] = sampler.zone.loopEnd

        if( volume !== null )
          g.gen.memory.heap[ voice.loudness.memory.values.idx   ] = volume

        if( rate !== null ) voice.rate = rate 
        
        voice.trigger()
      }

      return voice
    },
    __getVoice__() {
      return this.voices[ this.voiceCount++ % this.voices.length ]
    },
  })

  const Soundfont = inputProps => {
    const syn = Object.create( proto )

    const props = Object.assign( { onload:null, voiceCount:0, files:[] }, Soundfont.defaults, inputProps )

    syn.isStereo = props.isStereo !== undefined ? props.isStereo : false

    const start = g.in( 'start' ), end = g.in( 'end' ), 
          rate = g.in( 'rate' ), shouldLoop = g.in( 'loops' ),
          loudness = g.in( 'loudness' ),
          triggerLoudness = g.in( '__triggerLoudness' ),
          // rate storage is used to determine whether we're playing
          // the sample forward or in reverse, for use in the 'trigger' method.
          rateStorage = g.data([0], 1, { meta:true })

    Object.assign( syn, props )

    if( Gibberish.mode === 'worklet' ) {
      syn.__meta__ = {
        address:'add',
        name: ['instruments', 'Soundfont'],
        properties: JSON.stringify(props), 
        id: syn.id
      }

      Gibberish.worklet.ugens.set( syn.id, syn )

      Gibberish.worklet.port.postMessage( syn.__meta__ )
    }

    // create all our vocecs
    const voices = []
    for( let i = 0; i < syn.maxVoices; i++ ) {
      'use jsdsp'

      const voice = {
        bufferLength: g.data( [1], 1, { meta:true }),
        bufferLoc:    g.data( [1], 1, { meta:true }),
        bang: g.bang(),
        // XXX how do I change this from main thread?
        __pan: g.data( [.5], 1, { meta:true }),
        __rate: g.data( [1], 1, { meta:true }),
        __shouldLoop: g.data( [1], 1, { meta:true }),
        __loopStart: g.data( [1], 1, { meta:true }),
        __loopEnd:   g.data( [1], 1, { meta:true }),
        __loudness:  g.data( [1], 1, { meta:true }),
        get loudness() { 
          return g.gen.memory.heap[ this.__loudness.memory.values.idx   ]
        },
        set loudness( v ) {
          g.gen.memory.heap[ this.__loudness.memory.values.idx ] = v
        },
        set pan(v) {
          g.gen.memory.heap[ this.__pan.memory.values.idx ] = v
        },
        set rate(v) {
          g.gen.memory.heap[ this.__rate.memory.values.idx ] = v
        },
      }

      voice.phase = g.counter( 
        rate * voice.__rate[0], 
        start * voice.bufferLength[0],
        end * voice.bufferLength[0], 
        voice.bang,
        shouldLoop, 
        { shouldWrap:false, initialValue:9999999 }
      )

      voice.trigger = voice.bang.trigger

      voice.graph = g.ifelse(
        // if phase is greater than start and less than end... 
        g.and( 
          g.gte( voice.phase, start * voice.bufferLength[0] ), 
          g.lt(  voice.phase, end   * voice.bufferLength[0] ) 
        ),
        // ...read data
        voice.peek = g.peekDyn( 
          voice.bufferLoc[0], 
          voice.bufferLength[0],
          voice.phase,
          { mode:'samples' }
        ),
        // ...else return 0
        0
      ) 
      * loudness 
      * voice.__loudness[0] 

      // start of attempt to loop sustain...
      //voice.graph = g.ifelse(
      //  // if phase is greater than start and less than end... 
      //  g.and( 
      //    g.gte( voice.phase, start * voice.bufferLength[0] ), 
      //    g.lt(  voice.phase, end   * voice.bufferLength[0] ) 
      //  ),
      //  // ...read data
      //  voice.peek = g.peekDyn( 
      //    voice.bufferLoc[0], 
      //    voice.bufferLength[0],
      //    voice.phase,
      //    { mode:'samples' }
      //  ),
      //  // ...else return 0
      //  g.ifelse(
      //    g.and(
      //      voice.__shouldLoop[0],
      //      g.gt( voice.phase, voice.__loopEnd[0] )
      //    ),
      //    g.peekDyn( 
      //      voice.bufferLoc[0], 
      //      voice.bufferLength[0],
      //      g.add( 
      //        voice.__loopStart[0],
      //        g.mod(
      //          voice.phase,
      //          //g.sub( voice.phase, voice.__loopStart[0] ),
      //          g.sub( voice.__loopEnd[0], voice.__loopStart[0] )
      //        )
      //      ),
      //      { mode:'samples' }
      //    ),
      //    0
      //  )
      //) 
      //* loudness 
      //* triggerLoudness 
      
      const pan = g.pan( voice.graph, voice.graph, voice.__pan[0] )
      voice.graph = [ pan.left, pan.right ]

      voices.push( voice )
    }

    // load in sample data
    const samplers = {}

    // bound to individual sampler objects in loadSample function
    syn.loadBuffer = function( buffer, onload ) {
      // main thread: when sample is loaded, copy it over message port
      // processor thread: onload is called via messageport handler, and
      // passed in the new buffer to be copied.
      if( Gibberish.mode === 'worklet' ) {
        const memIdx = Gibberish.memory.alloc( this.data.buffer.length, true )

        Gibberish.worklet.port.postMessage({
          address:'copy_multi',
          id:     syn.id,
          buffer: this.data.buffer,
          filename: this.filename
        })

        if( typeof onload === 'function' ) onload( this, buffer )

      }else if( Gibberish.mode === 'processor' ) {
        this.data.buffer = buffer 

        // set data memory spec before issuing memory request
        this.dataLength = this.data.memory.values.length = this.data.dim = this.data.buffer.length
        this.zone = syn.zones[ this.filename ]

        // request memory to copy the bufer over
        g.gen.requestMemory( this.data.memory, false )
        g.gen.memory.heap.set( this.data.buffer, this.data.memory.values.idx )

        // set location of buffer (does not work)
        this.dataIdx = this.data.memory.values.idx

        syn.currentSample = this.filename
      }
    }

    syn.loadSample = function( filename, __onload, buffer=null ) {
      'use jsdsp'

      const sampler = samplers[ filename ] = {
        dataLength: null,
        dataIdx: null,
        buffer: null,
        filename
      }

      const onload = syn.loadBuffer.bind( sampler ) 
      // passing a filename to data will cause it to be loaded in the main thread
      // onload will then be called to pass the buffer over the messageport. In the
      // processor thread, make a placeholder until data is available.
      if( Gibberish.mode === 'worklet' ) {
        sampler.data = g.data( buffer !== null ? buffer : filename, 1, { onload })

        // check to see if a promise is returned; a valid
        // data object is only return if the file has been
        // previously loaded and the corresponding buffer has
        // been cached.
        if( sampler.data instanceof Promise ) {
          sampler.data.then( d => {
            sampler.data = d
            memo[ filename ] = sampler.data 
            onload( sampler, __onload )
          })
        }else{
          // using a cached data buffer, no need
          // for asynchronous loading.
          memo[ filename ] = sampler
          sampler.dataLength = buffer.length
          onload( sampler, __onload )
        }     
      }else{
        // not sure if first case will happen with soundfonts (it does with regular multisampler)
        if( buffer === null ) {
          sampler.data = g.data( new Float32Array(), 1, { onload, filename })
          sampler.data.onload = onload
        }else{
          sampler.data = g.data( buffer, 1, { onload, filename })
          //sampler.data.onload = onload
          onload( buffer, __onload )
        }
      }

      return sampler
    }

    syn.load = function( soundNumber=0, bankIndex=0 ) {
      'no jsdsp'

      // need to memoize... already storing in soundfonts
      if( Gibberish.mode === 'processor' ) return

      // in case users pass name of soundfont instead of number
      if( typeof soundNumber === 'string' ) {
        let __soundNumber = Soundfont.names.indexOf( soundNumber )
        if( __soundNumber === -1 ) {
          __soundNumber = 0
          console.warn( `The ${soundNumber} Soundfont can't be found. Using Piano instead.` )
        }
        soundNumber = __soundNumber
      }

      let num = (soundNumber) + '0'
      if( soundNumber < 100 ) num = '0'+num
      if( soundNumber < 10 )  num = '0'+num

      fetch( `${Soundfont.resourcePath}${num}_${banks[bankIndex]}.sf2.json` )
        .then( res => res.json() )
        .then( json => {
          const zones = soundfonts[ soundNumber ] = json.zones
          this.zones = zones
          for( let i = 0; i < zones.length; i++) {
            const zone = zones[i]
            const ab = Gibberish.utilities.base64.decodeArrayBuffer( zone.file )
            g.utilities.ctx.decodeAudioData( ab, buffer => {
              zone.sampler = syn.loadSample( i, null, buffer )
            })
          }
        })
    }

    //props.files.forEach( filename => syn.loadSample( filename ) )

    syn.__createGraph = function() {
      'use jsdsp'
      
      const graphs = voices.map( voice => voice.graph )
      const left = g.add( ...voices.map( voice => voice.graph[0] ) )
      const right = g.add( ...voices.map( voice => voice.graph[1] ) )
      const gain = g.in( 'gain' )
      syn.graph = [ left * gain, right * gain ]

      if( syn.panVoices === true ) { 
        const panner = g.pan( syn.graph[0], syn.graph[1], g.in( 'pan' ) ) 
        syn.graph = [ panner.left, panner.right ]
      }
    }

    syn.__createGraph()

    const out = Gibberish.factory( 
      syn,
      syn.graph,
      ['instruments','soundfont'], 
      props 
    ) 

    Gibberish.preventProxy = true
    Gibberish.proxyEnabled = false

    out.voices = voices
    out.samplers = samplers

    Gibberish.proxyEnabled = true
    Gibberish.preventProxy = false

    return out
  }

  Soundfont.defaults = {
    gain: 1,
    pan: .5,
    rate: 1,
    panVoices:false,
    shouldLoop:false,
    loops: 0,
    start:0,
    end:1,
    bufferLength:-999999999,
    loudness:1,
    maxVoices:5, 
    __triggerLoudness:1
  }

  Soundfont.resourcePath = 'resources/soundfonts/'
  Soundfont.names = [
    "Acoustic Grand Piano",
    "Bright Acoustic Piano",
    "Electric Grand Piano",
    "Honky-tonk Piano",
    "Electric Piano 1",
    "Electric Piano 2",
    "Harpsichord",
    "Clavi",
    "Celesta",
    "Glockenspiel",
    "Music Box",
    "Vibraphone",
    "Marimba",
    "Xylophone",
    "Tubular Bells",
    "Dulcimer",
    "Drawbar Organ",
    "Percussive Organ",
    "Rock Organ",
    "Church Organ",
    "Reed Organ",
    "Accordion",
    "Harmonica",
    "Tango Accordion",
    "Acoustic Guitar (nylon)",
    "Acoustic Guitar (steel)",
    "Electric Guitar (jazz)",
    "Electric Guitar (clean)",
    "Electric Guitar (muted)",
    "Overdriven Guitar",
    "Distortion Guitar",
    "Guitar harmonics",
    "Acoustic Bass",
    "Electric Bass (finger)",
    "Electric Bass (pick)",
    "Fretless Bass",
    "Slap Bass 1",
    "Slap Bass 2",
    "Synth Bass 1",
    "Synth Bass 2",
    "Violin",
    "Viola",
    "Cello",
    "Contrabass",
    "Tremolo Strings",
    "Pizzicato Strings",
    "Orchestral Harp",
    "Timpani",
    "String Ensemble 1",
    "String Ensemble 2",
    "SynthStrings 1",
    "SynthStrings 2",
    "Choir Aahs",
    "Voice Oohs",
    "Synth Voice",
    "Orchestra Hit",
    "Trumpet",
    "Trombone",
    "Tuba",
    "Muted Trumpet",
    "French Horn",
    "Brass Section",
    "SynthBrass 1",
    "SynthBrass 2",
    "Soprano Sax",
    "Alto Sax",
    "Tenor Sax",
    "Baritone Sax",
    "Oboe",
    "English Horn",
    "Bassoon",
    "Clarinet",
    "Piccolo",
    "Flute",
    "Recorder",
    "Pan Flute",
    "Blown Bottle",
    "Shakuhachi",
    "Whistle",
    "Ocarina",
    "Lead 1 (square)",
    "Lead 2 (sawtooth)",
    "Lead 3 (calliope)",
    "Lead 4 (chiff)",
    "Lead 5 (charang)",
    "Lead 6 (voice)",
    "Lead 7 (fifths)",
    "Lead 8 (bass + lead)",
    "Pad 1 (new age)",
    "Pad 2 (warm)",
    "Pad 3 (polysynth)",
    "Pad 4 (choir)",
    "Pad 5 (bowed)",
    "Pad 6 (metallic)",
    "Pad 7 (halo)",
    "Pad 8 (sweep)",
    "FX 1 (rain)",
    "FX 2 (soundtrack)",
    "FX 3 (crystal)",
    "FX 4 (atmosphere)",
    "FX 5 (brightness)",
    "FX 6 (goblins)",
    "FX 7 (echoes)",
    "FX 8 (sci-fi)",
    "Sitar",
    "Banjo",
    "Shamisen",
    "Koto",
    "Kalimba",
    "Bag pipe",
    "Fiddle",
    "Shanai",
    "Tinkle Bell",
    "Agogo",
    "Steel Drums",
    "Woodblock",
    "Taiko Drum",
    "Melodic Tom",
    "Synth Drum",
    "Reverse Cymbal",
    "Guitar Fret Noise",
    "Breath Noise",
    "Seashore",
    "Bird Tweet",
    "Telephone Ring",
    "Helicopter",
    "Applause",
    "Gunshot"
  ]

  Soundfont.inspect = function() {
    console.table( Soundfont.names )
  }

  return Soundfont
}

},{"./instrument.js":43,"genish.js":114}],54:[function(require,module,exports){
const g = require( 'genish.js' ),
      instrument = require( './instrument.js' )

const genish = g

module.exports = function( Gibberish ) {

  const Synth = inputProps => {
    const syn = Object.create( instrument )

    const frequency = g.in( 'frequency' ),
          loudness  = g.in( 'loudness' ), 
          triggerLoudness = g.in( '__triggerLoudness' ),
          glide = g.max( 1, g.in( 'glide' ) ),
          slidingFreq = g.slide( frequency, glide, glide ),
          attack = g.in( 'attack' ), decay = g.in( 'decay' ),
          sustain = g.in( 'sustain' ), sustainLevel = g.in( 'sustainLevel' ),
          release = g.in( 'release' )

    const props = Object.assign( {}, Synth.defaults, inputProps )
    Object.assign( syn, props )

    syn.__createGraph = function() {
      const osc = Gibberish.oscillators.factory( syn.waveform, slidingFreq, syn.antialias )

      const env = Gibberish.envelopes.factory( 
        props.useADSR, 
        props.shape, 
        attack, decay, 
        sustain, sustainLevel, 
        release, 
        props.triggerRelease
      )


      // syn.env = env
      // below doesn't work as it attempts to assign to release property triggering codegen...
      syn.advance = ()=> { env.release() }

      {
        'use jsdsp'
        let oscWithEnv = osc * env * loudness * triggerLoudness,
            saturation = g.in('saturation'),
            panner

        // 16 is an unfortunate empirically derived magic number...
        const baseCutoffFreq = g.in('cutoff') * ( frequency /  ( g.gen.samplerate / 16 ) ) 
        const cutoff = g.min( baseCutoffFreq * g.pow( 2, g.in('filterMult') * loudness * triggerLoudness ) * env, .995 ) 
        const filteredOsc = Gibberish.filters.factory( oscWithEnv, cutoff, saturation, props )

        let synthWithGain = filteredOsc * g.in( 'gain' )
        
        // XXX This line has to be here for correct code generation to work when
        // saturation is not being used... obviously this should cancel out. 
        if( syn.filterModel !== 2 ) synthWithGain = synthWithGain + saturation - saturation
    
        if( syn.panVoices === true ) { 
          panner = g.pan( synthWithGain, synthWithGain, g.in( 'pan' ) ) 
          syn.graph = [ panner.left, panner.right ]
          syn.isStereo = true
        }else{
          syn.graph = synthWithGain
          syn.isStereo = false
        }

        syn.env = env
        syn.osc = osc
        syn.filter = filteredOsc
      }

      return env

    }
    
    syn.__requiresRecompilation = [ 'waveform', 'antialias', 'filterModel','filterMode', 'useADSR', 'shape' ]
    const env = syn.__createGraph()

    const out = Gibberish.factory( syn, syn.graph, ['instruments', 'synth'], props, null, true, ['saturation']  )

    out.env.advance = out.advance 

    return out
  }
  
  Synth.defaults = {
    waveform:'saw',
    attack: 44,
    decay: 22050,
    sustain:44100,
    sustainLevel:.6,
    release:22050,
    useADSR:false,
    shape:'linear',
    triggerRelease:false,
    gain: .5,
    pulsewidth:.25,
    frequency:220,
    pan: .5,
    antialias:false,
    panVoices:false,
    loudness:1,
    __triggerLoudness:1,
    glide:1,
    saturation:1,
    filterMult:2,
    Q:.25,
    cutoff:.5,
    filterModel:1,
    filterMode:0
  }

  // do not include velocity, which shoudl always be per voice
  let PolySynth = Gibberish.PolyTemplate( Synth, ['frequency','attack','decay','pulsewidth','pan','gain','glide', 'saturation', 'filterMult', 'Q', 'cutoff', 'resonance', 'antialias', 'filterModel', 'waveform', 'filterMode', '__triggerLoudness', 'loudness'] ) 
  PolySynth.defaults = Synth.defaults

  return [ Synth, PolySynth ]

}

},{"./instrument.js":43,"genish.js":114}],55:[function(require,module,exports){
const g = require( 'genish.js' ),
      instrument = require( './instrument.js' )

module.exports = function( Gibberish ) {

  const Tom = argumentProps => {
    let tom = Object.create( instrument )
    
    const decay   = g.in( 'decay' ),
          pitch   = g.in( 'frequency' ),
          gain    = g.in( 'gain' ),
          loudness = g.in( 'loudness' ),
          triggerLoudness = g.in( '__triggerLoudness' )

    const props = Object.assign( {}, Tom.defaults, argumentProps )

    const trigger = g.bang(),
          impulse = g.mul( trigger, 1 ),
          eg = g.decay( g.mul( decay, g.gen.samplerate * 2 ), { initValue:0 } ), 
          bpf = g.mul( g.svf( impulse, pitch, .0175, 2, false ), 10 ),
          noise = g.gtp( g.noise(), 0 ), // rectify noise
          envelopedNoise = g.mul( noise, eg ),
          lpf = g.mul( g.svf( envelopedNoise, 120, .5, 0, false ), 2.5 ),
          out = g.mul( g.add( bpf, lpf ), g.mul( gain, g.mul( loudness, triggerLoudness ) ) )

    tom.env = {
      trigger: function() {
        eg.trigger()
        trigger.trigger()
      }
    }

    tom.isStereo = false

    tom = Gibberish.factory( tom, out, ['instruments', 'tom'], props  )
    
    return tom
  }
  
  Tom.defaults = {
    gain: 1,
    decay:.7,
    frequency:120,
    loudness:1,
    __triggerLoudness:1
  }

  return Tom
}

},{"./instrument.js":43,"genish.js":114}],56:[function(require,module,exports){
const ugenproto = require( '../ugen.js' )(),
     __proxy     = require( '../workletProxy.js' ),
     g = require( 'genish.js' )

module.exports = function( Gibberish ) {
  const proxy = __proxy( Gibberish )

  const createProperties = function( p, id ) {
    for( let i = 0; i < 2; i++ ) {
      Object.defineProperty( p, i, {
        configurable:true,
        get() { return p.inputs[ i ] },
        set(v) {
          p.inputs[ i ] = v
          if( Gibberish.mode === 'worklet' ) {
            if( typeof v === 'number' ) {
              Gibberish.worklet.port.postMessage({ 
                address:'addToProperty', 
                object:id,
                name:'inputs',
                key:i,
                value:v
              })
            }else{
              Gibberish.worklet.port.postMessage({ 
                address:'addObjectToProperty', 
                object:id,
                name:'inputs',
                key:i,
                value:v.id
              })
            }
            Gibberish.worklet.port.postMessage({
              address:'dirty',
              id
            })
          }
        }
      })
    }
  }

  const Binops = {
    export( obj ) {
      for( let key in Binops ) {
        if( key !== 'export' ) {
          obj[ key ] = Binops[ key ]
        }
      }
    },
    
    Add( ...args ) {
      const id = Gibberish.factory.getUID()
      const ugen = Object.create( ugenproto )
      const isStereo = Gibberish.__isStereo( args[0] ) || Gibberish.__isStereo( args[1] )
      Object.assign( ugen, { isop:true, op:'+', inputs:args, ugenName:'add' + id, id, isStereo } )
      
      const p = proxy( ['binops','Add'], { isop:true, inputs:args }, ugen )
      createProperties( p, id )

      return p
    },

    Sub( ...args ) {
      const id = Gibberish.factory.getUID()
      const ugen = Object.create( ugenproto )
      const isStereo = Gibberish.__isStereo( args[0] ) || Gibberish.__isStereo( args[1] )
      Object.assign( ugen, { isop:true, op:'-', inputs:args, ugenName:'sub' + id, id, isStereo } )

      return proxy( ['binops','Sub'], { isop:true, inputs:args }, ugen )
    },

    Mul( ...args ) {
      const id = Gibberish.factory.getUID()
      const ugen = Object.create( ugenproto )
      const isStereo = Gibberish.__isStereo( args[0] ) || Gibberish.__isStereo( args[1] )
      Object.assign( ugen, { isop:true, op:'*', inputs:args, ugenName:'mul' + id, id, isStereo } )

      const p = proxy( ['binops','Mul'], { isop:true, inputs:args }, ugen )
      createProperties( p, id )
      return p
    },

    Div( ...args ) {
      const id = Gibberish.factory.getUID()
      const ugen = Object.create( ugenproto )
      const isStereo = Gibberish.__isStereo( args[0] ) || Gibberish.__isStereo( args[1] )
      Object.assign( ugen, { isop:true, op:'/', inputs:args, ugenName:'div' + id, id, isStereo} )
    
      const p = proxy( ['binops','Div'], { isop:true, inputs:args }, ugen )
      createProperties( p, id )

      return p
    },

    Mod( ...args ) {
      const id = Gibberish.factory.getUID()
      const ugen = Object.create( ugenproto )
      const isStereo = Gibberish.__isStereo( args[0] ) || Gibberish.__isStereo( args[1] )
      Object.assign( ugen, { isop:true, op:'%', inputs:args, ugenName:'mod' + id, id, isStereo} )

      const p = proxy( ['binops','Mod'], { isop:true, inputs:args }, ugen )
      createProperties( p, id )

      return p
    },   
  }

  for( let key in Binops ) {
    Binops[ key ].defaults = { 0:0, 1:0 }
  }

  return Binops
}

},{"../ugen.js":72,"../workletProxy.js":74,"genish.js":114}],57:[function(require,module,exports){
let g = require( 'genish.js' ),
    ugen = require( '../ugen.js' )(),
    __proxy= require( '../workletProxy.js' )

module.exports = function( Gibberish ) {
  const proxy = __proxy( Gibberish )
  const Bus = Object.create( ugen )

  Object.assign( Bus, {
    gain: {
      set( v ) {
        this.mul.inputs[ 1 ] = v
        Gibberish.dirty( this )
      },
      get() {
        return this.mul[ 1 ]
      }
    },

    __addInput( input ) {
      this.sum.inputs.push( input )
      Gibberish.dirty( this )
    },

    create( _props ) {
      const props = Object.assign({}, Bus.defaults, { inputs:[0] }, _props )

      // MUST PREVENT PROXY
      // Othherwise these binops are created in the worklet and sent
      // across the thread to be instantiated, and then instantiated again
      // when the bus is created in the processor thread, messing up the various
      // uids involved. By preventing proxying the binops are only created
      // a single time when the bus is sent across the thread.
      Gibberish.preventProxy = true
      const sum = Gibberish.binops.Add( ...props.inputs )
      const mul = Gibberish.binops.Mul( sum, props.gain )
      Gibberish.preventProxy = false

      const graph = Gibberish.Panner({ input:mul, pan: props.pan })

      graph.sum = sum
      graph.mul = mul
      graph.disconnectUgen = Bus.disconnectUgen

      graph.__properties__ = props

      const out = props.__useProxy__ === true ? proxy( ['Bus'], props, graph ) : graph

      Object.defineProperty( out, 'gain', Bus.gain )

      if( false && Gibberish.preventProxy === false && Gibberish.mode === 'worklet' ) {
        const meta = {
          address:'add',
          name:['Bus'],
          props, 
          id:graph.id
        }
        Gibberish.worklet.port.postMessage( meta )
        Gibberish.worklet.port.postMessage({ 
          address:'method', 
          object:graph.id,
          name:'connect',
          args:[]
        })
      }

      return out 
    },

    disconnectUgen( ugen ) {
      let removeIdx = this.sum.inputs.indexOf( ugen )

      if( removeIdx !== -1 ) {
        this.sum.inputs.splice( removeIdx, 1 )
        Gibberish.dirty( this )
      }
    },

    // can't include inputs here as it will be sucked up by Gibber,
    // instead pass during Object.assign() after defaults.
    defaults: { gain:1, pan:.5, __useProxy__:true }
  })

  const constructor = Bus.create.bind( Bus )
  constructor.defaults = Bus.defaults

  return constructor
}


},{"../ugen.js":72,"../workletProxy.js":74,"genish.js":114}],58:[function(require,module,exports){
const g = require( 'genish.js' ),
      ugen = require( '../ugen.js' )(),
      __proxy = require( '../workletProxy.js' )


module.exports = function( Gibberish ) {
  const Bus2 = Object.create( ugen )
  const proxy = __proxy( Gibberish )

  let bufferL, bufferR
  
  Object.assign( Bus2, { 
    create( __props ) {

      if( bufferL === undefined ) {
        const p = g.pan()
        
        // copy memory... otherwise the wavetables don't have memory indices.
        bufferL = Gibberish.memory.alloc(1024)
        Gibberish.memory.heap.set( Gibberish.genish.gen.globals.panL.buffer, bufferL )

        bufferR = Gibberish.memory.alloc(1024)
        Gibberish.memory.heap.set( Gibberish.genish.gen.globals.panR.buffer, bufferR )
      }

      // XXX must be same type as what is returned by genish for type checks to work correctly
      const output = new Float64Array( 2 ) 

      const bus = Object.create( Bus2 )

      let init = false

      const props = Object.assign({}, Bus2.defaults, __props )

      Object.assign( 
        bus,

        {
          callback() {
            output[ 0 ] = output[ 1 ] = 0
            const lastIdx = arguments.length - 1
            const memory  = arguments[ lastIdx ]
            let pan  = arguments[ lastIdx - 1 ]
            const gain = arguments[ lastIdx - 2 ]

            for( let i = 0; i < lastIdx - 2; i+= 3 ) {
              const input = arguments[ i ],
                    level = arguments[ i + 1 ],
                    isStereo = arguments[ i + 2 ]

              output[ 0 ] += isStereo === true ? input[ 0 ] * level : input * level

              output[ 1 ] += isStereo === true ? input[ 1 ] * level : input * level
            }

            if( pan < 0 ) {
              pan = 0
            }else if( pan > 1 ){
              pan = 1
            }

            const panRawIndex  = pan * 1023,
                  panBaseIndex = panRawIndex | 0,
                  panNextIndex = (panBaseIndex + 1) & 1023,
                  interpAmount = panRawIndex - panBaseIndex,
                  panL = memory[ bufferL + panBaseIndex ] 
                    + ( interpAmount * ( memory[ bufferL + panNextIndex ] - memory[ bufferL + panBaseIndex ] ) ),
                  panR = memory[ bufferR + panBaseIndex ] 
                    + ( interpAmount * ( memory[ bufferR + panNextIndex ] - memory[ bufferR + panBaseIndex ] ) )
            
            output[0] *= gain * panL
            output[1] *= gain * panR

            return output
          },
          id : Gibberish.factory.getUID(),
          dirty : false,
          type : 'bus',
          inputs:[ 1, .5 ],
          isStereo: true,
          __properties__:props
        },

        Bus2.defaults,

        props
      )

      bus.ugenName = bus.callback.ugenName = 'bus2_' + bus.id

      const out = bus.__useProxy__ === true ? proxy( ['Bus2'], props, bus ) : bus


      // we have to include custom properties for these as the argument list for
      // the compiled output function is variable
      // so codegen can't know the correct argument order for the function
      let pan = .5
      Object.defineProperty( out, 'pan', {
        get() { return pan },
        set(v){ 
          pan = v
          out.inputs[ out.inputs.length - 1 ] = pan
          Gibberish.dirty( out )
        }
      })

      let gain = 1
      Object.defineProperty( out, 'gain', {
        get() { return gain },
        set(v){ 
          gain = v
          out.inputs[ out.inputs.length - 2 ] = gain
          Gibberish.dirty( out )
        }
      })

      return out
    },
    
    disconnectUgen( ugen ) {
      let removeIdx = this.inputs.indexOf( ugen )

      if( removeIdx !== -1 ) {
        this.inputs.splice( removeIdx, 3 )
        Gibberish.dirty( this )
      }
    },

    defaults: { gain:1, pan:.5, __useProxy__:true }
  })

  const constructor = Bus2.create.bind( Bus2 )
  constructor.defaults = Bus2.defaults

  return constructor

}

},{"../ugen.js":72,"../workletProxy.js":74,"genish.js":114}],59:[function(require,module,exports){
const  g    = require( 'genish.js'  ),
       ugen = require( '../ugen.js' )()

module.exports = function( Gibberish ) {

  const Monops = {
    export( obj ) {
      for( let key in Monops ) {
        if( key !== 'export' ) {
          obj[ key ] = Monops[ key ]
        }
      }
    },
    
    Abs( input ) {
      const abs = Object.create( ugen )
      const graph = g.abs( g.in('input') )
      
      const __out = Gibberish.factory( abs, graph, ['monops','abs'], Object.assign({}, Monops.defaults, { inputs:[input], isop:true }) )

      return __out
    },

    Pow( input, exponent ) {
      const pow = Object.create( ugen )
      const graph = g.pow( g.in('input'), g.in('exponent') )
      
      Gibberish.factory( pow, graph, ['monops','pow'], Object.assign({}, Monops.defaults, { inputs:[input], exponent, isop:true }) )

      return pow
    },
    Clamp( input, min, max ) {
      const clamp = Object.create( ugen )
      const graph = g.clamp( g.in('input'), g.in('min'), g.in('max') )
      
      const __out = Gibberish.factory( clamp, graph, ['monops','clamp'], Object.assign({}, Monops.defaults, { inputs:[input], isop:true, min, max }) )

      return __out
    },

    Merge( input ) {
      const merger = Object.create( ugen )
      const cb = function( _input ) {
        return _input[0] + _input[1]
      }

      Gibberish.factory( merger, g.in( 'input' ), ['monops','merge'], { inputs:[input], isop:true }, cb )
      merger.type = 'analysis'
      merger.inputNames = [ 'input' ]
      merger.inputs = [ input ]
      merger.input = input
      
      return merger
    },
  }

  Monops.defaults = { input:0 }

  return Monops
}

},{"../ugen.js":72,"genish.js":114}],60:[function(require,module,exports){
const g = require( 'genish.js' )

const ugen = require( '../ugen.js' )()

module.exports = function( Gibberish ) {
 
let Panner = inputProps => {
  const props  = Object.assign( {}, Panner.defaults, inputProps ),
        panner = Object.create( ugen )

  const isStereo = props.input.isStereo !== undefined ? props.input.isStereo : Array.isArray( props.input ) 
  
  const input = g.in( 'input' ),
        pan   = g.in( 'pan' )

  let graph 
  if( isStereo ) {
    graph = g.pan( input[0], input[1], pan )  
  }else{
    graph = g.pan( input, input, pan )
  }

  Gibberish.factory( panner, [ graph.left, graph.right], ['panner'], props )
  
  return panner
}

Panner.defaults = {
  input:0,
  pan:.5
}

return Panner 

}

},{"../ugen.js":72,"genish.js":114}],61:[function(require,module,exports){
module.exports = function( Gibberish ) {

  const Time = {
    bpm: 120,

    export: function(target) {
      Object.assign( target, Time )
    },

    ms : function(val) {
      return val * Gibberish.ctx.sampleRate / 1000;
    },

    seconds : function(val) {
      return val * Gibberish.ctx.sampleRate;
    },

    beats : function(val) {
      return function() { 
        var samplesPerBeat = Gibberish.ctx.sampleRate / ( Gibberish.Time.bpm / 60 ) ;
        return samplesPerBeat * val ;
      }
    }
  }

  return Time
}

},{}],62:[function(require,module,exports){
const genish = require( 'genish.js' ),
      ssd = genish.history,
      noise = genish.noise

module.exports = function() {
  "use jsdsp"

  const last = ssd( 0 )

  const white = ( noise() * 2 ) - 1

  let out = (last.out + (.02 * white)) / 1.02

  last.in( out )

  out *= 3.5
   
  return out
}

},{"genish.js":114}],63:[function(require,module,exports){
let g = require( 'genish.js' )

let feedbackOsc = function( frequency, filter, pulsewidth=.5, argumentProps ) {
  if( argumentProps === undefined ) argumentProps = { type: 0 }

  let lastSample = g.history(),
      // determine phase increment and memoize result
      w = g.memo( g.div( frequency, g.gen.samplerate ) ),
      // create scaling factor
      n = g.sub( -.5, w ),
      scaling = g.mul( g.mul( 13, filter ), g.pow( n, 5 ) ),
      // calculate dc offset and normalization factors
      DC = g.sub( .376, g.mul( w, .752 ) ),
      norm = g.sub( 1, g.mul( 2, w ) ),
      // determine phase
      osc1Phase = g.accum( w, 0, { min:-1 }),
      osc1, out

  // create current sample... from the paper:
  // osc = (osc + sin(2*pi*(phase + osc*scaling)))*0.5f;
  osc1 = g.memo( 
    g.mul(
      g.add(
        lastSample.out,
        g.sin(
          g.mul(
            Math.PI * 2,
            g.memo( g.add( osc1Phase, g.mul( lastSample.out, scaling ) ) )
          )
        )
      ),
      .5
    )
  )

  // store sample to use as modulation
  lastSample.in( osc1 )

  // if pwm / square waveform instead of sawtooth...
  if( argumentProps.type === 1 ) { 
    const lastSample2 = g.history() // for osc 2
    const lastSampleMaster = g.history() // for sum of osc1,osc2

    const osc2 = g.mul(
      g.add(
        lastSample2.out,
        g.sin(
          g.mul(
            Math.PI * 2,
            g.memo( g.add( osc1Phase, g.mul( lastSample2.out, scaling ), pulsewidth ) )
          )
        )
      ),
      .5
    )

    lastSample2.in( osc2 )
    out = g.memo( g.sub( lastSample.out, lastSample2.out ) )
    out = g.memo( g.add( g.mul( 2.5, out ), g.mul( -1.5, lastSampleMaster.out ) ) )
    
    lastSampleMaster.in( g.sub( osc1, osc2 ) )

  }else{
     // offset and normalize
    osc1 = g.add( g.mul( 2.5, osc1 ), g.mul( -1.5, lastSample.out ) )
    osc1 = g.add( osc1, DC )
 
    out = osc1
  }

  return g.mul( out, norm )
}

module.exports = feedbackOsc

},{"genish.js":114}],64:[function(require,module,exports){
const g = require( 'genish.js' ),
      ugen = require( '../ugen.js' )(),
      feedbackOsc = require( './fmfeedbackosc.js' ),
      polyBlep = require( './polyblep.dsp.js' )

//  __makeOscillator__( type, frequency, antialias ) {
    
module.exports = function( Gibberish ) {
  let Oscillators = {
    export( obj ) {
      for( let key in Oscillators ) {
        if( key !== 'export' ) {
          obj[ key ] = Oscillators[ key ]
        }
      }
    },

    genish: {
      Brown: require( './brownnoise.dsp.js' ),
      Pink:  require( './pinknoise.dsp.js'  )
    },

    Wavetable: require( './wavetable.js' )( Gibberish ),
    
    Square( inputProps ) {
      const sqr   = Object.create( ugen ) 
      const props = Object.assign({ antialias:false }, Oscillators.defaults, inputProps )
      const osc   = Oscillators.factory( 'square', g.in( 'frequency' ), props.antialias )
      const graph = g.mul( osc, g.in('gain' ) )

      const out = Gibberish.factory( sqr, graph, ['oscillators','square'], props )

      return out
    },

    Triangle( inputProps ) {
      const tri= Object.create( ugen ) 
      const props = Object.assign({ antialias:false }, Oscillators.defaults, inputProps )
      const osc   = Oscillators.factory( 'triangle', g.in( 'frequency' ), props.antialias )
      const graph = g.mul( osc, g.in('gain' ) )

      const out = Gibberish.factory( tri, graph, ['oscillators','triangle'], props )

      return out
    },

    PWM( inputProps ) {
      const pwm   = Object.create( ugen ) 
      const props = Object.assign({ antialias:false, pulsewidth:.25 }, Oscillators.defaults, inputProps )
      const osc   = Oscillators.factory( 'pwm', g.in( 'frequency' ), props.antialias )
      const graph = g.mul( osc, g.in('gain' ) )

      const out = Gibberish.factory( pwm, graph, ['oscillators','PWM'], props )

      return out
    },

    Sine( inputProps ) {
      const sine  = Object.create( ugen )
      const props = Object.assign({}, Oscillators.defaults, inputProps )
      const graph = g.mul( g.cycle( g.in('frequency') ), g.in('gain') )

      const out = Gibberish.factory( sine, graph, ['oscillators','sine'], props )
      
      return out
    },

    Noise( inputProps ) {
      const noise = Object.create( ugen )
      const props = Object.assign( {}, { gain: 1, color:'white' }, inputProps )
      let graph 

      switch( props.color ) {
        case 'brown':
          graph = g.mul( Oscillators.genish.Brown(), g.in('gain') )
          break;
        case 'pink':
          graph = g.mul( Oscillators.genish.Pink(), g.in('gain') )
          break;
        default:
          graph = g.mul( g.noise(), g.in('gain') )
          break;
      }

      const out = Gibberish.factory( noise, graph, ['oscillators','noise'], props )

      return out
    },

    Saw( inputProps ) {
      const saw   = Object.create( ugen ) 
      const props = Object.assign({ antialias:false }, Oscillators.defaults, inputProps )
      const osc   = Oscillators.factory( 'saw', g.in( 'frequency' ), props.antialias )
      const graph = g.mul( osc, g.in('gain' ) )

      const out = Gibberish.factory( saw, graph, ['oscillators','saw'], props )

      return out
    },

    ReverseSaw( inputProps ) {
      const saw   = Object.create( ugen ) 
      const props = Object.assign({ antialias:false }, Oscillators.defaults, inputProps )
      const osc   = g.sub( 1, Oscillators.factory( 'saw', g.in( 'frequency' ), props.antialias ) )
      const graph = g.mul( osc, g.in( 'gain' ) )

      const out = Gibberish.factory( saw, graph, ['oscillators','ReverseSaw'], props )
      
      return out
    },

    factory( type, frequency, antialias=false ) {
      let osc

      switch( type ) {
        case 'pwm':
          let pulsewidth = g.in('pulsewidth')
          if( antialias == true ) {
            osc = feedbackOsc( frequency, 1, pulsewidth, { type:1 })
          }else{
            let phase = g.phasor( frequency, 0, { min:0 } )
            osc = g.lt( phase, pulsewidth )
          }
          break;
        case 'saw':
          if( antialias == false ) {
            osc = g.phasor( frequency )
          }else{
            osc = polyBlep( frequency, { type })
          }
          break;
        case 'sine':
          osc = g.cycle( frequency )
          break;
        case 'square':
          if( antialias == true ) {
            //osc = feedbackOsc( frequency, 1, .5, { type:1 })
            osc = polyBlep( frequency, { type })
          }else{
            osc = g.wavetable( frequency, { buffer:Oscillators.Square.buffer, name:'square' } )
          }
          break;
        case 'triangle':
          if( antialias == true ) {
            osc = polyBlep( frequency, { type })
          }else{
            osc = g.wavetable( frequency, { buffer:Oscillators.Triangle.buffer, name:'triangle' } )
          }
          break;
        case 'noise':
          osc = g.noise()
          break;
      }

      return osc
    }
  }

  Oscillators.Square.buffer = new Float32Array( 1024 )

  for( let i = 1023; i >= 0; i-- ) { 
    Oscillators.Square.buffer [ i ] = i / 1024 > .5 ? 1 : -1
  }

  Oscillators.Triangle.buffer = new Float32Array( 1024 )

  
  for( let i = 1024; i--; i = i ) { Oscillators.Triangle.buffer[i] = 1 - 4 * Math.abs(( (i / 1024) + 0.25) % 1 - 0.5); }

  Oscillators.defaults = {
    frequency: 440,
    gain: 1
  }

  return Oscillators

}

},{"../ugen.js":72,"./brownnoise.dsp.js":62,"./fmfeedbackosc.js":63,"./pinknoise.dsp.js":65,"./polyblep.dsp.js":66,"./wavetable.js":67,"genish.js":114}],65:[function(require,module,exports){
const genish = require( 'genish.js' ),
      ssd = genish.history,
      data = genish.data,
      noise = genish.noise

module.exports = function() {
  "use jsdsp"

  const b = data( 8, 1, { meta: true })
  const white = noise() * 2 - 1

  b[0] = ( .99886 * b[0] ) + ( white * .0555179 )
  b[1] = ( .99332 * b[1] ) + ( white * .0750579 )
  b[2] = ( .96900 * b[2] ) + ( white * .1538520 )
  b[3] = ( .88650 * b[3] ) + ( white * .3104856 )
  b[4] = ( .55000 * b[4] ) + ( white * .5329522 )
  b[5] = ( -.7616 * b[5] ) - ( white * .0168980 )
 
  const out = ( b[0] + b[1] + b[2] + b[3] + b[4] + b[5] + b[6] + white * .5362 ) * .11

  b[6] = white * .115926

  return out

}

},{"genish.js":114}],66:[function(require,module,exports){
const genish = require( 'genish.js' )
const g = genish

// based on http://www.martin-finke.de/blog/articles/audio-plugins-018-polyblep-oscillator/
const polyBlep = function( __frequency, argumentProps ) {
  'use jsdsp'
  if( argumentProps === undefined ) argumentProps = { type: 'saw' }
  
  const mem = g.history(0)
  const type = argumentProps.type
  const frequency = __frequency === undefined ? 220 : __frequency
  const dt = frequency / g.gen.samplerate
  
  const t = g.accum( dt, 0, { min:0 })
  let osc

  // triangle waves are integrated square waves, so the below case accomodates both types
  if( type === 'triangle' || type === 'square' ) {
    // lt NOT gt to get correct phase
    osc = (2 * g.lt(t,.5) ) - 1
  }else{
    osc = 2 * t - 1
  }
  const case1 = g.lt(t,dt)
  const case2 = g.gt(t,1-dt)
  const adjustedT = g.switch( case1, t/dt, g.switch( case2, (t-1)/dt, t ) )
  
  // if/elseif/else with nested ternary operators
  const blep = g.switch(
    case1,
    adjustedT + adjustedT - adjustedT * adjustedT - 1,
    g.switch(
      case2,
      adjustedT * adjustedT + adjustedT + adjustedT + 1,
      // final else case is 0
      0
    )
  )
  
  // triangle waves are integrated square waves, so the below case accomodates both types
  if( type !== 'saw' ) {
    osc = osc + blep
    const t_2 = g.memo( g.mod( t + .5, 1 ) )
    const case1_2 = g.lt(t_2,dt)
    const case2_2 = g.gt(t_2,1-dt)
    const adjustedT_2 = g.switch( case1_2, t_2/dt, g.switch( case2_2, (t_2-1)/dt, t_2 ) )
 
    const blep2 = g.switch(
      case1_2,
      adjustedT_2 + adjustedT_2 - adjustedT_2 * adjustedT_2 - 1,
      g.switch(
        case2_2,
        adjustedT_2 * adjustedT_2 + adjustedT_2 + adjustedT_2 + 1,
        0
      )
    )
    osc = osc - blep2
    
    // leaky integrator to create triangle from square wave
    if( type === 'triangle' ) {
      osc = dt * osc + (1 - dt ) * mem.out
      mem.in( osc )
    }
  }else{
    osc = osc - blep
  }
  
  return osc
}

module.exports = polyBlep 

},{"genish.js":114}],67:[function(require,module,exports){
let g = require( 'genish.js' ),
    ugen = require( '../ugen.js' )()

module.exports = function( Gibberish ) {

  const Wavetable = function( inputProps ) {
    const wavetable = Object.create( ugen )
    const props  = Object.assign({}, Gibberish.oscillators.defaults, inputProps )
    const osc = g.wavetable( g.in('frequency'), props )
    const graph = g.mul( 
      osc, 
      g.in( 'gain' )
    )

    Gibberish.factory( wavetable, graph, 'wavetable', props )

    return wavetable
  }

  g.wavetable = function( frequency, props ) {
    let dataProps = { immutable:true }

    // use global references if applicable
    if( props.name !== undefined ) dataProps.global = props.name

    const buffer = g.data( props.buffer, 1, dataProps )

    return g.peek( buffer, g.phasor( frequency, 0, { min:0 } ) )
  }

  return Wavetable
}

},{"../ugen.js":72,"genish.js":114}],68:[function(require,module,exports){
const Queue = require( '../external/priorityqueue.js' )

let Gibberish = null

const Scheduler = {
  phase: 0,

  queue: new Queue( ( a, b ) => {
    if( a.time === b.time ) { 
      return a.priority < b.priority ? -1 : a.priority > b.priority ? 1 : 0;
    }else{
      return a.time - b.time //a.time.minus( b.time )
    }
  }),

  init( __Gibberish ) {
    Gibberish = __Gibberish
  },

  clear() {
    this.queue.data.length = 0
    this.queue.length = 0
    this.phase = 0
  },

  add( time, func, priority = 0 ) {
    time += this.phase

    this.queue.push({ time, func, priority })

    return this.phase
  },

  tick( usingSync = false ) {
    if( this.shouldSync === usingSync ) {
      if( this.queue.length ) {
        let next = this.queue.peek()

        if( isNaN( next.time ) ) {
          this.queue.pop()
        }
        
        while( this.phase >= next.time ) {
          next.func( next.priority )
          this.queue.pop()
          next = this.queue.peek()

          // XXX this happens when calling sequencer.stop()... why?
          if( next === undefined ) break
        }
      }

      this.phase++
    }

    return this.phase
  },

  advance( amt ) {
    this.phase += amt
    this.tick( true )
  }
}

let shouldSync = false
Object.defineProperty( Scheduler, 'shouldSync', {
  get() { return shouldSync },
  set(v){ 
    shouldSync = v
    if( Gibberish.mode === 'worklet' ) {
      Gibberish.worklet.port.postMessage({
        address:'eval',
        code:'Gibberish.scheduler.shouldSync = ' + v
      })
    }
  }
})

module.exports = Scheduler

},{"../external/priorityqueue.js":11}],69:[function(require,module,exports){
const g = require( 'genish.js' ),
      __proxy = require( '../workletProxy.js' ),
      ugen = require( '../ugen.js' )()

module.exports = function( Gibberish ) {
  const __proto__ = Object.create( ugen )

  const proxy = __proxy( Gibberish )

  Object.assign( __proto__, {
    start( delay=0 ) {
      if( delay !== 0 ) {
        Gibberish.scheduler.add( delay, ()=> {
          Gibberish.analyzers.push( this )
          Gibberish.dirty( Gibberish.analyzers )
        })
      }else{
        Gibberish.analyzers.push( this )
        Gibberish.dirty( Gibberish.analyzers )
      }
      return this
    },
    stop( delay=0 ) {
      const idx = Gibberish.analyzers.indexOf( this )
      if( delay === 0 ) {
        if( idx > -1 ) {
          Gibberish.analyzers.splice( idx, 1 )
          Gibberish.dirty( Gibberish.analyzers )
        }
        this.phase = 0
        this.nextTime = 0
      }else{
        Gibberish.scheduler.add( delay, ()=> {
          if( idx > -1 ) {
            Gibberish.analyzers.splice( idx, 1 )
            Gibberish.dirty( Gibberish.analyzers )
          }
          this.phase = 0
          this.nextTime = 0
        })
      }

      return this
    },
    fire(){
      let value  = typeof this.values  === 'function' ? this.values  : this.values[ this.__valuesPhase++  % this.values.length  ]
      if( typeof value === 'function' && this.target === undefined ) {
        value()
      }else if( typeof this.target[ this.key ] === 'function' ) {
        if( typeof value === 'function' ) {
          value = value()
        }
        if( value !== this.DNR ) {
          this.target[ this.key ]( value )
        }
      }else{
        if( typeof value === 'function' ) value = value()
        if( value !== this.DNR )
          this.target[ this.key ] = value
      }
    }
  })

  // XXX we need to implement priority, which will in turn determine the order
  // that the sequencers are added to the callback function.
  const Seq2 = { 
    create( inputProps ) {
      const seq = Object.create( __proto__ ),
            properties = Object.assign({}, Seq2.defaults, inputProps )

      seq.phase = 0
      seq.inputNames = [ 'rate', 'density' ]
      seq.inputs = [ 1, 1 ]
      seq.nextTime = 0
      seq.__valuesPhase = 0
      seq.__timingsPhase = 0
      seq.id = Gibberish.factory.getUID()
      seq.dirty = true
      seq.type = 'seq'
      seq.__addresses__ = {}
      seq.DNR = -987654321

      properties.id = Gibberish.factory.getUID()

      Object.assign( seq, properties ) 
      seq.__properties__ = properties

      // support for sequences that are triggered via other means,
      // in Gibber this is when you provide timing to one sequence
      // on an object and want to use that one pattern to trigger
      // multiple sequences.
      if( seq.timings === null ) { seq.nextTime = Infinity } 

      // XXX this needs to be optimized as much as humanly possible, since it's running at audio rate...
      seq.callback = function( rate, density ) {
        while( seq.phase >= seq.nextTime ) {
          let value  = typeof seq.values  === 'function' ? seq.values  : seq.values[ seq.__valuesPhase++  % seq.values.length  ],
              shouldRun = true
          
          let timing = null
          if( seq.timings !== null && seq.timings !== undefined ) { 
            timing = typeof seq.timings === 'function' ? seq.timings : seq.timings[ seq.__timingsPhase++ % seq.timings.length ]
            if( typeof timing === 'function' ) timing = timing()
          }
          
          let shouldIncreaseSpeed = density <= 1 ? false : true

          // XXX this supports an edge case in Gibber, where patterns like Euclid / Hex return
          // objects indicating both whether or not they should should trigger values as well
          // as the next time they should run. perhaps this could be made more generalizable?
          if( timing !== null && typeof timing === 'object' ) {
            if( timing.shouldExecute === 1 ) {
              shouldRun = true
            }else{
              shouldRun = false
            }
            timing = timing.time 
          }else if( timing !== null ) {
            if( Math.random() >= density ) shouldRun = false
          }

          if( shouldRun ) {
            if( seq.mainthreadonly !== undefined ) {
              if( typeof value === 'function' ) {
                value = value()
              }
              Gibberish.processor.messages.push( seq.mainthreadonly, seq.key, value )
            }else if( typeof value === 'function' && seq.target === undefined ) {
              value()
            }else if( typeof seq.target[ seq.key ] === 'function' ) {
              if( typeof value === 'function' ) {
                value = value()
              }
              if( value !== seq.DNR ) {
                seq.target[ seq.key ]( value )
              }
            }else{
              if( typeof value === 'function' ) value = value()
              if( value !== seq.DNR )
                seq.target[ seq.key ] = value
            }
          }

          if( timing === null ) return

          seq.phase -= seq.nextTime

          if( shouldIncreaseSpeed ) {
            timing = Math.random() > (2 - density) ? timing / 2 : timing
          }
          seq.nextTime = timing
        }

        seq.phase += rate

        return 0
      }

      seq.ugenName = seq.callback.ugenName = 'seq_' + seq.id

      // since we're not passing our sequencer through the ugen template, we need
      // to grab a memory address for its rate so it can be sequenced and define
      // a property that manipulates that memory address.
      const idx = Gibberish.memory.alloc( 1 )
      Gibberish.memory.heap[ idx ] = seq.rate
      seq.__addresses__.rate = idx

      let value = seq.rate
      Object.defineProperty( seq, 'rate', {
        get() { return value },
        set( v ) {
          if( value !== v ) {
            if( typeof v === 'number' ) Gibberish.memory.heap[ idx ] = v

            Gibberish.dirty( Gibberish.analyzers )
            value = v
          }
        }
      })

      const didx = Gibberish.memory.alloc( 1 )
      Gibberish.memory.heap[ didx ] = seq.density
      seq.__addresses__.density = didx

      let dvalue = seq.density
      Object.defineProperty( seq, 'density', {
        get() { return dvalue },
        set( v ) {
          if( dvalue !== v ) {
            if( typeof v === 'number' ) Gibberish.memory.heap[ didx ] = v

            Gibberish.dirty( Gibberish.analyzers )
            dvalue = v
          }
        }
      })

      if( Gibberish.mode === 'worklet' ) {
        Gibberish.utilities.createPubSub( seq )
      }

      return proxy( ['Sequencer2'], properties, seq ) 
    }
  }

  Seq2.defaults = { rate: 1, density:1, priority:0, phase:0 }
  Seq2.create.DO_NOT_OUTPUT = -987654321

  return Seq2.create

}


},{"../ugen.js":72,"../workletProxy.js":74,"genish.js":114}],70:[function(require,module,exports){
(function (global){
const __proxy = require( '../workletProxy.js' )

module.exports = function( Gibberish ) {

const renderFnc = function( pattern ) {
  const keys = Object.keys( pattern.dict )
  const objs = Object.values( pattern.dict )
    .map( v => typeof v === 'object' && !Array.isArray( v )
    ? Gibberish.processor.ugens.get(v.id) 
    : v 
    )

  // we create a new inner function using the function constructor,
  // where every argument is codegen'd as an upvalue to the
  // returned function. after codegen we call the functon
  // to get the inner function with the upvalues andd
  // return that. Store references to globals as upvalues as well.
  let code = 'let Gibberish = __Gibberish, global = __global;\n'
  keys.forEach( k => {
    let line = `let ${k} = `
    const value = pattern.dict[ k ]
    const getter = typeof value === 'object' 
      ? Array.isArray( value )
      ? `[${value.toString()}]`
      : `Gibberish.processor.ugens.get(${ value.id })`
      : value
    line += getter 
    code += line + '\n'

  })  
  code +=`return function() { ${ pattern.fncstr } }` 

  // pass in globals to be used as upvalues in final function
  const fnc = new Function( '__Gibberish', '__global', code )( Gibberish, global )

  return fnc 
}

const proxy = __proxy( Gibberish )

const Sequencer = props => {
  let __seq
  let floatError = 0

  const seq = {
    type:'seq',
    __isRunning:false,
    __valuesPhase:  0,
    __timingsPhase: 0,
    __onlyRunsOnce: false,
    __repeatCount: null,
    DNR : -987654321,

    tick( priority ) {
      let value  = typeof seq.values  === 'function' 
          ? seq.values  
          : seq.values[  seq.__valuesPhase++  % seq.values.length  ],

        timing = typeof seq.timings === 'function' 
          ? seq.timings 
          : seq.timings !== null
            ? seq.timings[ seq.__timingsPhase++ % seq.timings.length ]
            : null,

        shouldRun = true
      
      if( seq.__onlyRunsOnce === true ) {
        if( seq.__valuesPhase === seq.values.length ) {
          seq.stop()
        }
      }else if( seq.__repeatCount !== null ) {
        if( seq.__valuesPhase % seq.values.length === 0 ) {
          seq.__repeatCount--
          if( seq.__repeatCount === 0 ) {
            seq.stop()
            seq.__repeatCount = null
          }
        }
      }

      if( typeof timing === 'function' ) timing = timing()

      // XXX this supports an edge case in Gibber, where patterns like Euclid / Hex return
      // objects indicating both whether or not they should should trigger values as well
      // as the next time they should run. perhaps this could be made more generalizable?
      if( timing !== null ) {
        if( typeof timing === 'object' ) {
          if( timing.shouldExecute === 1 ) {
            shouldRun = true
          }else{
            shouldRun = false
          }
          timing = timing.time 
        }

        timing *= seq.rate
      }else{
        shouldRun = false 
      }

      if( value === Sequencer.DO_NOT_OUTPUT ) shouldRun = false

      if( shouldRun ) {
        try{
          if( seq.mainthreadonly !== undefined ) {
            if( typeof value === 'function' ) {
              value = value()
            }
            //console.log( 'main thread only' )
            Gibberish.processor.messages.push( seq.mainthreadonly, seq.key, value )
          }else if( typeof value === 'function' && seq.target === undefined ) {
            value()
          }else if( typeof seq.target[ seq.key ] === 'function' ) {
            //console.log( seq.key, seq.target )
            if( typeof value === 'function' ) value = value()
            if( value !== seq.DNR )
              seq.target[ seq.key ]( value )
          }else{
            if( typeof value === 'function' ) value = value()
            if( value !== seq.DNR )
              seq.target[ seq.key ] = value
          }

          if( seq.reportOutput === true ) {
            Gibberish.processor.port.postMessage({
              address:'__sequencer',
              id: seq.id,
              name:'output',
              value,
              phase: seq.__valuesPhase,
              length: seq.values.length
            })
          }
        } catch(e) {
          console.error( `A sequence targeting ${seq.target.ugenName}.${seq.key} contains an improper value and will be stopped.` )
          return
        }
      }
      
      if( Gibberish.mode === 'processor' ) {
        if( seq.__isRunning === true && !isNaN( timing ) && seq.autotrig === false ) {
          timing += floatError
          Gibberish.scheduler.add( timing, seq.tick, seq.priority )
          floatError = timing - Math.floor( timing )
        }
      }
    },
    fire(){
      let value  = typeof this.values  === 'function' ? this.values  : this.values[ this.__valuesPhase++  % this.values.length  ]
      if( typeof value === 'function' && this.target === undefined ) {
        value()
      }else if( typeof this.target[ this.key ] === 'function' ) {
        if( typeof value === 'function' ) {
          value = value()
        }
        if( value !== this.DNR ) {
          this.target[ this.key ]( value )
        }
      }else{
        if( typeof value === 'function' ) value = value()
        if( value !== this.DNR )
          this.target[ this.key ] = value
      }
    },

    start( delay = 0 ) {
      if( Gibberish.mode === 'processor' && seq.__isRunning === false ) {
        Gibberish.scheduler.add( 
          delay, 
          priority => {
            seq.tick( priority )
            Gibberish.processor.port.postMessage({
              address:'__sequencer',
              id: seq.id,
              name:'start'
            })
          }, 
          seq.priority 
        )
      }
      seq.__isRunning = true
      seq.__delay = delay
      return __seq
    },

    stop( delay = null ) {
      if( delay === null ) {
        seq.__isRunning = false

        if( Gibberish.mode === 'processor' ) {
          Gibberish.processor.port.postMessage({
            address:'__sequencer',
            id: seq.id,
            name:'stop'
          })
        }
      
      }else{
        Gibberish.scheduler.add( delay, seq.stop )
      }
      return __seq
    },

    once() {
      seq.__onlyRunsOnce = true
      return __seq
    },

    repeat( repeatCount = 2 ) {
      seq.__repeatCount = repeatCount
      return __seq
    }
  }

  props.id = Gibberish.factory.getUID()

  if( Gibberish.mode === 'worklet' ) {
    Gibberish.utilities.createPubSub( seq )
  }else{
    // need a separate reference to the properties for worklet meta-programming
    if( typeof props.values === 'object' && props.values.requiresRender === true ) {
      props.values = renderFnc( props.values )
    }
    if( props.timings !== null && typeof props.timings === 'object' && props.timings.requiresRender === true ) {
      props.timings = renderFnc( props.timings )
    }
  }

  const properties = Object.assign( {}, Sequencer.defaults, props )
  Object.assign( seq, properties ) 
  seq.__properties__ = properties

  __seq =  proxy( ['Sequencer'], properties, seq )

  return __seq
}

Sequencer.defaults = { priority:100, rate:1, reportOutput:false, autotrig:false }

Sequencer.make = function( values, timings, target, key, priority, reportOutput ) {
  return Sequencer({ values, timings, target, key, priority, reportOutput })
}

Sequencer.DO_NOT_OUTPUT = -987654321

return Sequencer

}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../workletProxy.js":74}],71:[function(require,module,exports){
const __proxy = require( '../workletProxy.js' )
//const { mini } = require( '../../node_modules/@strudel.cycles/mini/index.mjs' )
//const { mini } = req( 'https://cdn.skypack.dev/@strudel.cycles/mini' )
const mini = require( '../external/mini.js' )
//confetti();
//import { mini } from '@strudel.cycles/mini';

//const Pattern = require( 'tidal.pegjs' )

module.exports = function( Gibberish ) {

const proxy = __proxy( Gibberish )

const Sequencer = props => {
  let __seq
  const seq = {
    __isRunning:false,

    __phase:  0,
    __type:'seq',
    __pattern: mini.mini( props.pattern ),//Pattern( props.pattern, { addLocations:true, addUID:true, enclose:true }),
    __events: null,

    tick( priority ) {
      // running for first time, perform a query
      if( seq.__events === null || seq.__events.length === 0 ) {
        //seq.__events = seq.__pattern.query( seq.__phase++, 1 )
        seq.__events = seq.__pattern.queryArc( seq.__phase++, 1 )
      }

      // used when scheduling events that are very far apart
      if( seq.__events.length <= 0 ) {
        if( Gibberish.mode === 'processor' ) {
          if( seq.__isRunning === true  ) {
            Gibberish.scheduler.add( Gibberish.ctx.sampleRate / Sequencer.clock.cps, seq.tick, seq.priority )
          }

        }

        return
      }

      const startTime = seq.__events[ 0 ].whole.begin

      if( seq.key !== 'chord' ) {
        while( seq.__events.length > 0 && startTime.valueOf() === seq.__events[0].whole.begin.valueOf() ) {
          let event  = seq.__events.shift(),
              value  = event.value,
              uid    = event.uid

          // for bjorklund etc.
          if( typeof value === 'object' ) value = value.value

          if( seq.filters !== null ) value = seq.filters.reduce( (currentValue, filter) => filter( currentValue, seq, uid ), value )  
          if( seq.mainthreadonly !== undefined ) {
            if( typeof value === 'function' ) {
              value = value()
            }
            Gibberish.processor.messages.push( seq.mainthreadonly, seq.key, value )
          }else if( typeof seq.target[ seq.key ] === 'function' ) {
            seq.target[ seq.key ]( value )
          }else{
            seq.target[ seq.key ] = value
          }
        }
      }else{
        let value = seq.__events.filter( evt => startTime.valueOf() === evt.whole.begin.valueOf() ).map( evt => evt.value )
        let uid = seq.__events[0].uid

        const events = seq.__events.splice( 0, value.length )

        if( seq.filters !== null ) {
          if( value.length === 1 ) {
            value = seq.filters.reduce( (currentValue, filter) => filter( currentValue, seq, uid ), value )  
          }else{
            value.forEach( (v,i) => seq.filters.reduce( (currentValue, filter) => filter( currentValue, seq, events[ i ].uid ), v ) )
          }
        }

        if( typeof seq.target[ seq.key ] === 'function' ) {
          seq.target[ seq.key ]( value )
        }else{
          seq.target[ seq.key ] = value
        }
      }

      if( Gibberish.mode === 'processor' ) {
        let timing
        if( seq.__events.length <= 0 ) {
          let time = 0
          while( seq.__events.length <= 0 ) {
            //seq.__events = seq.__pattern.query( seq.__phase++, 1 )
            seq.__events = seq.__pattern.queryArc( seq.__phase++, 1 )
            time++
          }
          //seq.__events.forEach( evt => {
          //  evt.arc.start = evt.arc.start.add( 1 ).sub( startTime ) 
          //  evt.arc.end   = evt.arc.end.add( 1 ).sub( startTime )
          //})

          timing = time - startTime.valueOf() 
        }else{
          timing = seq.__events[0].whole.begin.sub( startTime ).valueOf() 
        }
        
        timing *= Math.ceil( Gibberish.ctx.sampleRate / Sequencer.clock.cps ) + 1 

        if( seq.__isRunning === true && !isNaN( timing ) && timing > 0 ) {
          // XXX this supports an edge case in Gibber, where patterns like Euclid / Hex return
          // objects indicating both whether or not they should should trigger values as well
          // as the next time they should run. perhaps this could be made more generalizable?
          
          //if( typeof timing === 'object' ) {
          //  if( timing.shouldExecute === 1 ) {
          //    shouldRun = true
          //  }else{
          //    shouldRun = false
          //  }
          //  timing = timing.time 
          //}

          //timing *= seq.rate

          Gibberish.scheduler.add( timing, seq.tick, seq.priority )
        }
      }


    },

    rotate( amt ) {
      seq.__phase += amt
      return __seq 
    },

    start( delay = 0 ) {
      seq.__isRunning = true
      Gibberish.scheduler.add( delay, seq.tick, seq.priority )
      return __seq
    },

    stop() {
      seq.__isRunning = false
      return __seq
    },

    set( patternString ) {
      seq.__pattern = Pattern( patternString, { addLocations:true, addUID:true, enclose:true })

    }
  }

  props.id = Gibberish.factory.getUID()

  // need a separate reference to the properties for worklet meta-programming
  const properties = Object.assign( {}, Sequencer.defaults, props )
  Object.assign( seq, properties ) 
  seq.__properties__ = properties

  __seq =  proxy( ['Tidal'], properties, seq )

  return __seq
}

Sequencer.defaults = { priority:100000, pattern:'', rate:1, filters:null }

Sequencer.make = function( values, timings, target, key, priority ) {
  return Sequencer({ values, timings, target, key, priority })
}

let __uid = 0
Sequencer.getUID = ()=> {
  return __uid++
}

Sequencer.Pattern = mini.mini

Sequencer.clock = { cps: 1 }

Sequencer.id = Gibberish.utilities.getUID()

if( Gibberish.mode === 'worklet' ) {
  Gibberish.worklet.port.postMessage({
    address:'eval',
    code:`Gibberish.Tidal.clock.id = ${Sequencer.id}; Gibberish.ugens.set( ${Sequencer.id}, Gibberish.Tidal.clock )`
  })
  
  let cps = 1
  Object.defineProperty( Sequencer, 'cps', {
    get() { return cps },
    set(v){ 
      cps = v
      if( Gibberish.mode === 'worklet' ) {
        Gibberish.worklet.port.postMessage({
          address:'set',
          object:Sequencer.id,
          name:'cps',
          value:cps 
        }) 
      }
    }
  })
}

return Sequencer

}

},{"../external/mini.js":10,"../workletProxy.js":74}],72:[function(require,module,exports){
let Gibberish = null

const __ugen = function( __Gibberish ) {
  if( __Gibberish !== undefined && Gibberish == null ) Gibberish = __Gibberish
 
  const replace = obj => {
    if( typeof obj === 'object' ) {
      if( obj.id !== undefined ) {
        return processor.ugens.get( obj.id )
      } 
    }

    return obj
  }

  const ugen = {
    __Gibberish:Gibberish,

    free:function() {
      Gibberish.genish.gen.free( this.graph )
    },

    print:function() {
      console.log( this.callback.toString() )
    },

    connect:function( target, level=1 ) {
      if( this.connected === undefined ) this.connected = []

      //let input = level === 1 ? this : Gibberish.binops.Mul( this, level )
      let input = this

      if( target === undefined || target === null ) target = Gibberish.output 


      // XXX I forgot, where is __addInput found? Can we control the
      // level of the input?
      if( typeof target.__addInput == 'function' ) {
        target.__addInput( input )
      } else if( target.sum && target.sum.inputs ) {
        target.sum.inputs.push( input )
      } else if( target.inputs ) {
        const idx = target.inputs.indexOf( input )

        // if no connection exists...
        if( idx === -1 ) {
          target.inputs.unshift( input, level, input.isStereo )
        }else{
          // ... otherwise update the connection's level, which is stored
          // one index higher in the input list.
          target.inputs[ idx + 1 ] = level
        }
      } else {
        target.input = input
        target.inputGain = level
      }

      Gibberish.dirty( target )

      this.connected.push([ target, input, level ])
      
      return this
    },

    disconnect:function( target ) {
      if( target === undefined ){
        if( Array.isArray( this.connected ) ) {
          for( let connection of this.connected ) {
            if( connection[0].disconnectUgen !== undefined ) {
              connection[0].disconnectUgen( connection[1] )
            }else if( connection[0].input === this ) {
              connection[0].input = 0
            }
          }
          this.connected.length = 0
        }
      }else{
        const connection = this.connected.find( v => v[0] === target )
        // if target is a bus...
        if( target.disconnectUgen !== undefined ) {
          if( connection !== undefined ) {
            target.disconnectUgen( connection[1] )
          }
        }else{
          // must be an effect, set input to 0
          target.input = 0
        }

        const targetIdx = this.connected.indexOf( connection )

        if( targetIdx !== -1 ) {
          this.connected.splice( targetIdx, 1 )
        }
      }
    },

    chain:function( target, level=1 ) {
      this.connect( target,level )

      return target
    },

    __redoGraph:function() {
      let isStereo = this.isStereo
      this.__createGraph()
      this.callback = Gibberish.genish.gen.createCallback( this.graph, Gibberish.memory, false, true )
      this.inputNames = new Set( Gibberish.genish.gen.parameters ) 
      this.callback.ugenName = this.ugenName
      Gibberish.dirty( this )

      // if channel count has changed after recompiling graph...
      if( isStereo !== this.isStereo ) {

        // check for any connections before iterating...
        if( this.connected === undefined ) return
        // loop through all busses the ugen is connected to
        for( let connection of this.connected ) {
          // set the dirty flag of the bus
          Gibberish.dirty( connection[ 0 ] )

          // check for inputs array, which indicates connection is to a bus
          if( connection[0].inputs !== undefined ) {
            // find the input in the busses 'inputs' array
            const inputIdx = connection[ 0 ].inputs.indexOf( connection[ 1 ] )

            // assumiing it is found...
            if( inputIdx !== -1 ) {
              // change stereo field
              connection[ 0 ].inputs[ inputIdx + 2 ] = this.isStereo
            }
          }else if( connection[0].input !== undefined ) {
            if( connection[0].__redoGraph !== undefined ) {
              connection[0].__redoGraph()
            }
          }
        }
      }
    },
  }

  return ugen

}

module.exports = __ugen

},{}],73:[function(require,module,exports){
const genish = require( 'genish.js' ),
      AWPF = require( './external/audioworklet-polyfill.js' )

module.exports = function( Gibberish ) {

let uid = 0
const utilities = {
  Make: function( props ){
    const name = props.name || 'Ugen' + (Math.floor( Math.random()*10000 ) )
    const type = props.type || 'Ugen'
    const properties = props.properties || {}
    const block = `
    const ugen = Object.create( Gibberish.prototypes[ '${type}' ] )
    const graphfnc = ${props.constructor.toString()}

    const proxy = Gibberish.factory( ugen, graphfnc(), '${name}', ${JSON.stringify(properties)} )
    if( typeof props === 'object' ) Object.assign( proxy, props )

    return proxy`

    Gibberish[ name ] = new Function( 'props', block )

    Gibberish.worklet.port.postMessage({
      name,
      address:'addConstructor',
      constructorString:`function( Gibberish ) {
      const fnc = ${Gibberish[ name ].toString()}

      return fnc
    }`
    })

    return Gibberish[ name ]
  },

  createContext( ctx, cb, resolve, bufferSize=2048 ) {
    let AC = typeof AudioContext === 'undefined' ? webkitAudioContext : AudioContext

    AWPF( window, bufferSize )

    const start = () => {
      if( typeof AC !== 'undefined' ) {
        this.ctx = Gibberish.ctx = ctx === undefined ? new AC({ latencyHint:.025 }) : ctx

        genish.gen.samplerate = this.ctx.sampleRate
        genish.utilities.ctx = this.ctx

        if( document && document.documentElement && 'ontouchstart' in document.documentElement ) {
          window.removeEventListener( 'touchstart', start )
        }else{
          window.removeEventListener( 'mousedown', start )
          window.removeEventListener( 'keydown', start )
        }

        const mySource = utilities.ctx.createBufferSource()
        mySource.connect( utilities.ctx.destination )
        mySource.start()
      }

      if( typeof cb === 'function' ) cb( resolve )
    }

    if( document && document.documentElement && 'ontouchstart' in document.documentElement ) {
      window.addEventListener( 'touchstart', start )
    }else{
      window.addEventListener( 'mousedown', start )
      window.addEventListener( 'keydown', start )
    }

    return Gibberish.ctx
  },
  
  createWorklet( resolve ) {
    Gibberish.ctx.audioWorklet.addModule( Gibberish.workletPath ).then( () => {
      Gibberish.worklet = new AudioWorkletNode( Gibberish.ctx, 'gibberish', { outputChannelCount:[2] } )

      Gibberish.worklet.connect( Gibberish.ctx.destination )
      Gibberish.worklet.port.onmessage = event => {
        const callback = Gibberish.utilities.workletHandlers[ event.data.address ]
        if( typeof callback === 'function' ) callback( event )     
      }
      Gibberish.worklet.ugens = new Map()

      resolve()
    })
  },

  future( fnc, time, dict ) {
    const keys = Object.keys( dict )
    const code = `
      const fnc = ${fnc.toString()}
      const args = [${keys.map( key => typeof dict[key] === 'object' ? dict[ key ].id : `'${dict[ key]}'` ).join(',')}]
      const objs = args.map( v => typeof v === 'number' ? Gibberish.processor.ugens.get(v) : v )
      Gibberish.scheduler.add( ${time}, ()=> fnc( ...objs ), 1 )
    ` 
    Gibberish.worklet.port.postMessage({ 
      address:'eval', 
      code
    })
  },

  workletHandlers: {
    phase( event ) {
      Gibberish.phase = event.data.value
      if( typeof Gibberish.onphaseupdate === 'function' ) {
        Gibberish.onphaseupdate( Gibberish.phase )
      }
    },
    __sequencer( event ) {
      const message = event.data
      const id = message.id
      const eventName = message.name
      const obj = Gibberish.worklet.ugens.get( id )
      if( obj !== undefined && obj.publish !== undefined )
        obj.publish( eventName, message )
    },
    callback( event ) {
      if( typeof Gibberish.oncallback === 'function' ) {
        Gibberish.oncallback( event.data.code )
      }
    },
    get( event ) {
      let name = event.data.name
      let value
      if( name[0] === 'Gibberish' ) {
        value = Gibberish
        name.shift()
      }
      for( let segment of name ) {
        value = value[ segment ]
      }

      Gibberish.worklet.port.postMessage({
        address:'set',
        name:'Gibberish.' + name.join('.'),
        value
      })
    },
    state( event ){
      const messages = event.data.messages
      if( messages.length === 0 ) return

      // XXX is preventProxy actually used?
      Gibberish.preventProxy = true
      Gibberish.proxyEnabled = false

      let i = 0
      while( i < messages.length ) {
        const id = messages[ i ] 
        const propName = messages[ i + 1 ]
        const valueL = messages[ i + 2 ]
        const valueR = messages[ i + 3 ]
        const value = valueL
        const obj = Gibberish.worklet.ugens.get( id )

        if( Gibberish.worklet.debug === true ) {
          if( propName !== 'output' ) console.log( propName, value, id )
        }

        if( typeof propName !== 'string' ) continue
        
        if( obj !== undefined && propName.indexOf('.') === -1 && propName !== 'id' ) { 
          if( obj[ propName ] !== undefined ) {
            if( typeof obj[ propName ] !== 'function' ) {
              if( propName === 'output' ) {
                obj[ propName ] = [ valueL, valueR ]
              }else{
                obj[ propName ] = value
              }
            }else{
              obj[ propName ]( value )
            }
          }else{
            obj[ propName ] = value
          }
        }else if( obj !== undefined ) {
          const propSplit = propName.split('.')
          if( obj[ propSplit[ 0 ] ] !== undefined ) {
            if( propSplit[1] !== undefined ) {
              if( typeof obj[ propSplit[ 0 ] ][ propSplit[ 1 ] ] !== 'function' ) {
                obj[ propSplit[ 0 ] ][ propSplit[ 1 ] ] = value
              }else{
                obj[ propSplit[ 0 ] ][ propSplit[ 1 ] ]( value )
              }
            }
          }else{
            //console.log( 'undefined split property!', id, propSplit[0], propSplit[1], value, obj )
          }
        }
        // XXX double check and make sure this isn't getting sent back to processornode...
        // console.log( propName, value, obj )
        i += propName === 'output' ? 4 : 3
      }
      Gibberish.preventProxy = false
      Gibberish.proxyEnabled = true
    }
  },

  createPubSub( obj ) {
    const events = {}
    obj.on = function( key, fcn ) {
      if( typeof events[ key ] === 'undefined' ) {
        events[ key ] = []
      }
      events[ key ].push( fcn )
      return obj
    }

    obj.off = function( key, fcn ) {
      if( typeof events[ key ] !== 'undefined' ) {
        const arr = events[ key ]

        arr.splice( arr.indexOf( fcn ), 1 )
      }
      return obj
    }

    obj.publish = function( key, data ) {
      if( typeof events[ key ] !== 'undefined' ) {
        const arr = events[ key ]

        arr.forEach( v => v( data ) )
      }
      return obj
    }
  },

  wrap( func, ...args ) {
    const out = {
      action:'wrap',
      value:func,
      // must return objects containing only the id number to avoid
      // creating circular JSON references that would result from passing actual ugens
      args: args.map( v => { return { id:v.id } })
    }
    return out
  },

  // for wrapping upvalues in a dictionary and passing function across thread
  // to be reconstructed.
  // ex; wrapped = fn( ()=> { return Math.random() * test }, { test:20 })
  // syn.note.seq( wrapped, 1/4 )
  fn( fnc, dict={}) {
    const fncstr = fnc.toString()
    const firstBracketIdx = fncstr.indexOf('{')
    const code = fncstr.slice(firstBracketIdx+1, -1 )
    const s = { requiresRender:true, filters:[], fncstr:code, args:[], dict, addFilter( f ) { this.filters.push(f) } }  
    return s
  },

  run( fnc ) { 
    const str = fnc.tostring()
    const idx = str.indexof('=>') + 2
    const code = str.slice( idx ).trim()
    Gibberish.worklet.port.postMessage({ 
      address:'eval',
      code
    })
  },

  export( obj ) {
    obj.wrap = this.wrap
    obj.future = this.future
    obj.Make = this.Make
  },

  getUID() { return uid++ },

  base64 : {
    _keyStr : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
    // will return a  Uint8Array type
    decodeArrayBuffer: function(input) {
        var bytes = (input.length/4) * 3;
        var ab = new ArrayBuffer(bytes);
        this.decode(input, ab);

        return ab;
    },
    decode: function(input, arrayBuffer) {
      //get last chars to see if are valid
      var lkey1 = this._keyStr.indexOf(input.charAt(input.length-1));		 
      var lkey2 = this._keyStr.indexOf(input.charAt(input.length-2));		 
      var bytes = (input.length/4) * 3;
      if (lkey1 == 64) bytes--; //padding chars, so skip
      if (lkey2 == 64) bytes--; //padding chars, so skip
      var uarray;
      var chr1, chr2, chr3;
      var enc1, enc2, enc3, enc4;
      var i = 0;
      var j = 0;
      if (arrayBuffer)
          uarray = new Uint8Array(arrayBuffer);
      else
          uarray = new Uint8Array(bytes);
      input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
      for (i=0; i<bytes; i+=3) {	
          //get the 3 octects in 4 ascii chars
          enc1 = this._keyStr.indexOf(input.charAt(j++));
          enc2 = this._keyStr.indexOf(input.charAt(j++));
          enc3 = this._keyStr.indexOf(input.charAt(j++));
          enc4 = this._keyStr.indexOf(input.charAt(j++));

          chr1 = (enc1 << 2) | (enc2 >> 4);
          chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
          chr3 = ((enc3 & 3) << 6) | enc4;

          uarray[i] = chr1;			
          if (enc3 != 64) uarray[i+1] = chr2;
          if (enc4 != 64) uarray[i+2] = chr3;
      }
      return uarray;	
    }
  }
}

return utilities

}

},{"./external/audioworklet-polyfill.js":9,"genish.js":114}],74:[function(require,module,exports){
const serialize = require('serialize-javascript')

module.exports = function( Gibberish ) {

const replaceObj = function( obj, shouldSerializeFunctions = true ) {
  if( typeof obj === 'object' && obj !== null && obj.id !== undefined ) {
    if( obj.__type !== 'seq' ) { // XXX why?
      return { id:obj.id, prop:obj.prop }
    }else{
      // shouldn't I be serializing most objects, not just seqs?
      return serialize( obj )
    }
  }else if( typeof obj === 'function' && shouldSerializeFunctions === true ) {
    return { isFunc:true, value:serialize( obj ) }
  }
  return obj
}

const makeAndSendObject = function( __name, values, obj ) {
  const properties = {}

  // object has already been sent through messageport...

  for( let key in values ) {
    const alreadyProcessed = (typeof values[ key ] === 'object' && values[ key ] !== null && values[ key ].__meta__ !== undefined) ||
      (typeof values[key] === 'function' && values[ key ].__meta__ !== undefined )

    if( alreadyProcessed ) { 
      properties[ key ] = { id:values[ key ].__meta__.id }
    }else if( Array.isArray( values[ key ] ) ) {
      const arr = []
      for( let i = 0; i < values[ key ].length; i++ ) {
        arr[ i ] = replaceObj( values[ key ][i], false  )
      }
      properties[ key ] = arr
    }else if( typeof values[key] === 'object' && values[key] !== null ){
      properties[ key ] = replaceObj( values[ key ], false )
    }else{
      properties[ key ] = values[ key ]
    }
  }

  let serializedProperties = serialize( properties )

  if( Array.isArray( __name ) ) {
    const oldName = __name[ __name.length - 1 ]
    __name[ __name.length - 1 ] = oldName[0].toUpperCase() + oldName.substring(1)
  }else{
    __name = [ __name[0].toUpperCase() + __name.substring(1) ]
  }

  obj.__meta__ = {
    address:'add',
    name:__name,
    properties:serializedProperties, 
    id:obj.id
  }

  Gibberish.worklet.ugens.set( obj.id, obj )

  Gibberish.worklet.port.postMessage( obj.__meta__ )
}

const doNotProxy = [ 'connected', 'input', 'wrap', 'callback', 'inputNames', 'on', 'off','publish' ]
   
const __proxy = function( __name, values, obj ) {

  if( Gibberish.mode === 'worklet' && Gibberish.preventProxy === false ) {
    makeAndSendObject( __name, values, obj )

    // proxy for all method calls to send to worklet
    const proxy = new Proxy( obj, {
      get( target, prop, receiver ) {
        if( typeof target[ prop ] === 'function' && prop.indexOf('__') === -1 && doNotProxy.indexOf( prop ) === -1 ) {
          const proxy = new Proxy( target[ prop ], {
            apply( __target, thisArg, args ) {

              if( Gibberish.proxyEnabled === true ) {
                const __args = args.map( __value => replaceObj( __value, true ) )

                Gibberish.worklet.port.postMessage({ 
                  address:'method', 
                  object:obj.id,
                  name:prop,
                  args:__args
                })
              }

              const temp = Gibberish.proxyEnabled
              Gibberish.proxyEnabled = false
              const out =  __target.apply( thisArg, args )
              Gibberish.proxyEnabled = temp
              return out
            }
          })
          
          return proxy
        }

        return target[ prop ]
      },
      set( target, prop, value, receiver ) {
        if( doNotProxy.indexOf( prop ) === -1 ) { 
          if( Gibberish.proxyEnabled === true ) {
            const __value = replaceObj( value )

            if( __value !== undefined ) {
              Gibberish.worklet.port.postMessage({ 
                address:'set', 
                object:obj.id,
                name:prop,
                value:__value
              })
            }
          }
        }

        target[ prop ] = value

        // must return true for any ES6 proxy setter
        return true
      }
    })

    // XXX XXX XXX XXX XXX XXX
    // REMEMBER THAT YOU MUST ASSIGN THE RETURNED VALUE TO YOUR UGEN,
    // YOU CANNOT USE THIS FUNCTION TO MODIFY A UGEN IN PLACE.
    // XXX XXX XXX XXX XXX XXX

    return proxy
  }else if( Gibberish.mode === 'processor' && Gibberish.preventProxy === false ) {

    const proxy = new Proxy( obj, {
      //get( target, prop, receiver ) { return target[ prop ] },
      set( target, prop, value, receiver ) {
        let valueType = typeof value
        if( prop.indexOf('__') === -1 && valueType !== 'function' && valueType !== 'object' ) {
          if( Gibberish.processor !== undefined ) { 
            Gibberish.processor.messages.push( obj.id, prop, value )
          }
        }
        target[ prop ] = value

        // must return true for any ES6 proxy setter
        return true
      }
    })

    return proxy
  }

  return obj
}

return __proxy

}

},{"serialize-javascript":154}],75:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var objectCreate = Object.create || objectCreatePolyfill
var objectKeys = Object.keys || objectKeysPolyfill
var bind = Function.prototype.bind || functionBindPolyfill

function EventEmitter() {
  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {
    this._events = objectCreate(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

var hasDefineProperty;
try {
  var o = {};
  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });
  hasDefineProperty = o.x === 0;
} catch (err) { hasDefineProperty = false }
if (hasDefineProperty) {
  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
    enumerable: true,
    get: function() {
      return defaultMaxListeners;
    },
    set: function(arg) {
      // check whether the input is a positive number (whose value is zero or
      // greater and not a NaN).
      if (typeof arg !== 'number' || arg < 0 || arg !== arg)
        throw new TypeError('"defaultMaxListeners" must be a positive number');
      defaultMaxListeners = arg;
    }
  });
} else {
  EventEmitter.defaultMaxListeners = defaultMaxListeners;
}

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || isNaN(n))
    throw new TypeError('"n" argument must be a positive number');
  this._maxListeners = n;
  return this;
};

function $getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return $getMaxListeners(this);
};

// These standalone emit* functions are used to optimize calling of event
// handlers for fast cases because emit() itself often has a variable number of
// arguments and can be deoptimized because of that. These functions always have
// the same number of arguments and thus do not get deoptimized, so the code
// inside them can execute faster.
function emitNone(handler, isFn, self) {
  if (isFn)
    handler.call(self);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self);
  }
}
function emitOne(handler, isFn, self, arg1) {
  if (isFn)
    handler.call(self, arg1);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1);
  }
}
function emitTwo(handler, isFn, self, arg1, arg2) {
  if (isFn)
    handler.call(self, arg1, arg2);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2);
  }
}
function emitThree(handler, isFn, self, arg1, arg2, arg3) {
  if (isFn)
    handler.call(self, arg1, arg2, arg3);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2, arg3);
  }
}

function emitMany(handler, isFn, self, args) {
  if (isFn)
    handler.apply(self, args);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].apply(self, args);
  }
}

EventEmitter.prototype.emit = function emit(type) {
  var er, handler, len, args, i, events;
  var doError = (type === 'error');

  events = this._events;
  if (events)
    doError = (doError && events.error == null);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    if (arguments.length > 1)
      er = arguments[1];
    if (er instanceof Error) {
      throw er; // Unhandled 'error' event
    } else {
      // At least give some kind of context to the user
      var err = new Error('Unhandled "error" event. (' + er + ')');
      err.context = er;
      throw err;
    }
    return false;
  }

  handler = events[type];

  if (!handler)
    return false;

  var isFn = typeof handler === 'function';
  len = arguments.length;
  switch (len) {
      // fast cases
    case 1:
      emitNone(handler, isFn, this);
      break;
    case 2:
      emitOne(handler, isFn, this, arguments[1]);
      break;
    case 3:
      emitTwo(handler, isFn, this, arguments[1], arguments[2]);
      break;
    case 4:
      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);
      break;
      // slower
    default:
      args = new Array(len - 1);
      for (i = 1; i < len; i++)
        args[i - 1] = arguments[i];
      emitMany(handler, isFn, this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');

  events = target._events;
  if (!events) {
    events = target._events = objectCreate(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener) {
      target.emit('newListener', type,
          listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (!existing) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
          prepend ? [listener, existing] : [existing, listener];
    } else {
      // If we've already got an array, just append.
      if (prepend) {
        existing.unshift(listener);
      } else {
        existing.push(listener);
      }
    }

    // Check for listener leak
    if (!existing.warned) {
      m = $getMaxListeners(target);
      if (m && m > 0 && existing.length > m) {
        existing.warned = true;
        var w = new Error('Possible EventEmitter memory leak detected. ' +
            existing.length + ' "' + String(type) + '" listeners ' +
            'added. Use emitter.setMaxListeners() to ' +
            'increase limit.');
        w.name = 'MaxListenersExceededWarning';
        w.emitter = target;
        w.type = type;
        w.count = existing.length;
        if (typeof console === 'object' && console.warn) {
          console.warn('%s: %s', w.name, w.message);
        }
      }
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    switch (arguments.length) {
      case 0:
        return this.listener.call(this.target);
      case 1:
        return this.listener.call(this.target, arguments[0]);
      case 2:
        return this.listener.call(this.target, arguments[0], arguments[1]);
      case 3:
        return this.listener.call(this.target, arguments[0], arguments[1],
            arguments[2]);
      default:
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; ++i)
          args[i] = arguments[i];
        this.listener.apply(this.target, args);
    }
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = bind.call(onceWrapper, state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');

      events = this._events;
      if (!events)
        return this;

      list = events[type];
      if (!list)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = objectCreate(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else
          spliceOne(list, position);

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (!events)
        return this;

      // not listening for removeListener, no need to emit
      if (!events.removeListener) {
        if (arguments.length === 0) {
          this._events = objectCreate(null);
          this._eventsCount = 0;
        } else if (events[type]) {
          if (--this._eventsCount === 0)
            this._events = objectCreate(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = objectKeys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = objectCreate(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (!events)
    return [];

  var evlistener = events[type];
  if (!evlistener)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
};

// About 1.5x faster than the two-arg version of Array#splice().
function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)
    list[i] = list[k];
  list.pop();
}

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function objectCreatePolyfill(proto) {
  var F = function() {};
  F.prototype = proto;
  return new F;
}
function objectKeysPolyfill(obj) {
  var keys = [];
  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {
    keys.push(k);
  }
  return k;
}
function functionBindPolyfill(context) {
  var fn = this;
  return function () {
    return fn.apply(context, arguments);
  };
}

},{}],76:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  name:'abs',

  gen() {
    let out,
        inputs = gen.getInputs( this )

    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet ? '' : 'gen.'

    if( isNaN( inputs[0] ) ) {
      gen.closures.add({ [ this.name ]: isWorklet ? 'Math.abs' : Math.abs })

      out = `${ref}abs( ${inputs[0]} )`

    } else {
      out = Math.abs( parseFloat( inputs[0] ) )
    }
    
    return out
  }
}

module.exports = x => {
  let abs = Object.create( proto )

  abs.inputs = [ x ]

  return abs
}

},{"./gen.js":107}],77:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  basename:'accum',

  gen() {
    let code,
        inputs = gen.getInputs( this ),
        genName = 'gen.' + this.name,
        functionBody

    gen.requestMemory( this.memory )

    gen.memory.heap[ this.memory.value.idx ] = this.initialValue

    functionBody = this.callback( genName, inputs[0], inputs[1], `memory[${this.memory.value.idx}]` )

    //gen.closures.add({ [ this.name ]: this }) 

    gen.memo[ this.name ] = this.name + '_value'
    
    return [ this.name + '_value', functionBody ]
  },

  callback( _name, _incr, _reset, valueRef ) {
    let diff = this.max - this.min,
        out = '',
        wrap = ''
    
    /* three different methods of wrapping, third is most expensive:
     *
     * 1: range {0,1}: y = x - (x | 0)
     * 2: log2(this.max) == integer: y = x & (this.max - 1)
     * 3: all others: if( x >= this.max ) y = this.max -x
     *
     */

    // must check for reset before storing value for output
    if( !(typeof this.inputs[1] === 'number' && this.inputs[1] < 1) ) { 
      if( this.resetValue !== this.min ) {

        out += `  if( ${_reset} >=1 ) ${valueRef} = ${this.resetValue}\n\n`
        //out += `  if( ${_reset} >=1 ) ${valueRef} = ${this.min}\n\n`
      }else{
        out += `  if( ${_reset} >=1 ) ${valueRef} = ${this.min}\n\n`
        //out += `  if( ${_reset} >=1 ) ${valueRef} = ${this.initialValue}\n\n`
      }
    }

    out += `  var ${this.name}_value = ${valueRef}\n`
    
    if( this.shouldWrap === false && this.shouldClamp === true ) {
      out += `  if( ${valueRef} < ${this.max } ) ${valueRef} += ${_incr}\n`
    }else{
      out += `  ${valueRef} += ${_incr}\n` // store output value before accumulating  
    }

    if( this.max !== Infinity  && this.shouldWrapMax ) wrap += `  if( ${valueRef} >= ${this.max} ) ${valueRef} -= ${diff}\n`
    if( this.min !== -Infinity && this.shouldWrapMin ) wrap += `  if( ${valueRef} < ${this.min} ) ${valueRef} += ${diff}\n`

    //if( this.min === 0 && this.max === 1 ) { 
    //  wrap =  `  ${valueRef} = ${valueRef} - (${valueRef} | 0)\n\n`
    //} else if( this.min === 0 && ( Math.log2( this.max ) | 0 ) === Math.log2( this.max ) ) {
    //  wrap =  `  ${valueRef} = ${valueRef} & (${this.max} - 1)\n\n`
    //} else if( this.max !== Infinity ){
    //  wrap = `  if( ${valueRef} >= ${this.max} ) ${valueRef} -= ${diff}\n\n`
    //}

    out = out + wrap + '\n'

    return out
  },

  defaults : { min:0, max:1, resetValue:0, initialValue:0, shouldWrap:true, shouldWrapMax: true, shouldWrapMin:true, shouldClamp:false }
}

module.exports = ( incr, reset=0, properties ) => {
  const ugen = Object.create( proto )
      
  Object.assign( ugen, 
    { 
      uid:    gen.getUID(),
      inputs: [ incr, reset ],
      memory: {
        value: { length:1, idx:null }
      }
    },
    proto.defaults,
    properties 
  )

  if( properties !== undefined && properties.shouldWrapMax === undefined && properties.shouldWrapMin === undefined ) {
    if( properties.shouldWrap !== undefined ) {
      ugen.shouldWrapMin = ugen.shouldWrapMax = properties.shouldWrap
    }
  }

  if( properties !== undefined && properties.resetValue === undefined ) {
    ugen.resetValue = ugen.min
  }

  if( ugen.initialValue === undefined ) ugen.initialValue = ugen.min

  Object.defineProperty( ugen, 'value', {
    get()  { 
      //console.log( 'gen:', gen, gen.memory )
      return gen.memory.heap[ this.memory.value.idx ] 
    },
    set(v) { gen.memory.heap[ this.memory.value.idx ] = v }
  })

  ugen.name = `${ugen.basename}${ugen.uid}`

  return ugen
}

},{"./gen.js":107}],78:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  basename:'acos',

  gen() {
    let out,
        inputs = gen.getInputs( this )
    

    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet ? '' : 'gen.'

    if( isNaN( inputs[0] ) ) {
      gen.closures.add({ 'acos': isWorklet ? 'Math.acos' :Math.acos })

      out = `${ref}acos( ${inputs[0]} )` 

    } else {
      out = Math.acos( parseFloat( inputs[0] ) )
    }
    
    return out
  }
}

module.exports = x => {
  let acos = Object.create( proto )

  acos.inputs = [ x ]
  acos.id = gen.getUID()
  acos.name = `${acos.basename}{acos.id}`

  return acos
}

},{"./gen.js":107}],79:[function(require,module,exports){
'use strict'

let gen      = require( './gen.js' ),
    mul      = require( './mul.js' ),
    sub      = require( './sub.js' ),
    div      = require( './div.js' ),
    data     = require( './data.js' ),
    peek     = require( './peek.js' ),
    accum    = require( './accum.js' ),
    ifelse   = require( './ifelseif.js' ),
    lt       = require( './lt.js' ),
    bang     = require( './bang.js' ),
    env      = require( './env.js' ),
    add      = require( './add.js' ),
    poke     = require( './poke.js' ),
    neq      = require( './neq.js' ),
    and      = require( './and.js' ),
    gte      = require( './gte.js' ),
    memo     = require( './memo.js' ),
    utilities= require( './utilities.js' )

module.exports = ( attackTime = 44100, decayTime = 44100, _props ) => {
  const props = Object.assign({}, { shape:'exponential', alpha:5, trigger:null }, _props )
  const _bang = props.trigger !== null ? props.trigger : bang(),
        phase = accum( 1, _bang, { min:0, max: Infinity, initialValue:-Infinity, shouldWrap:false })
      
  let bufferData, bufferDataReverse, decayData, out, buffer

  //console.log( 'shape:', props.shape, 'attack time:', attackTime, 'decay time:', decayTime )
  let completeFlag = data( [0] )
  
  // slightly more efficient to use existing phase accumulator for linear envelopes
  if( props.shape === 'linear' ) {
    out = ifelse( 
      and( gte( phase, 0), lt( phase, attackTime )),
      div( phase, attackTime ),

      and( gte( phase, 0),  lt( phase, add( attackTime, decayTime ) ) ),
      sub( 1, div( sub( phase, attackTime ), decayTime ) ),
      
      neq( phase, -Infinity),
      poke( completeFlag, 1, 0, { inline:0 }),

      0 
    )
  } else {
    bufferData = env({ length:1024, type:props.shape, alpha:props.alpha })
    bufferDataReverse = env({ length:1024, type:props.shape, alpha:props.alpha, reverse:true })

    out = ifelse( 
      and( gte( phase, 0), lt( phase, attackTime ) ), 
      peek( bufferData, div( phase, attackTime ), { boundmode:'clamp' } ), 

      and( gte(phase,0), lt( phase, add( attackTime, decayTime ) ) ), 
      peek( bufferDataReverse, div( sub( phase, attackTime ), decayTime ), { boundmode:'clamp' }),

      neq( phase, -Infinity ),
      poke( completeFlag, 1, 0, { inline:0 }),

      0
    )
  }

  const usingWorklet = gen.mode === 'worklet'
  if( usingWorklet === true ) {
    out.node = null
    utilities.register( out )
  }

  // needed for gibberish... getting this to work right with worklets
  // via promises will probably be tricky
  out.isComplete = ()=> {
    if( usingWorklet === true && out.node !== null ) {
      const p = new Promise( resolve => {
        out.node.getMemoryValue( completeFlag.memory.values.idx, resolve )
      })

      return p
    }else{
      return gen.memory.heap[ completeFlag.memory.values.idx ]
    }
  }

  out.trigger = ()=> {
    if( usingWorklet === true && out.node !== null ) {
      out.node.port.postMessage({ key:'set', idx:completeFlag.memory.values.idx, value:0 })
    }else{
      gen.memory.heap[ completeFlag.memory.values.idx ] = 0
    }
    _bang.trigger()
  }

  return out 
}

},{"./accum.js":77,"./add.js":80,"./and.js":82,"./bang.js":86,"./data.js":93,"./div.js":98,"./env.js":99,"./gen.js":107,"./gte.js":109,"./ifelseif.js":112,"./lt.js":115,"./memo.js":119,"./mul.js":125,"./neq.js":126,"./peek.js":131,"./poke.js":133,"./sub.js":144,"./utilities.js":150}],80:[function(require,module,exports){
'use strict'

const gen = require('./gen.js')

const proto = { 
  basename:'add',
  gen() {
    let inputs = gen.getInputs( this ),
        out='',
        sum = 0, numCount = 0, adderAtEnd = false, alreadyFullSummed = true

    if( inputs.length === 0 ) return 0

    out = `  var ${this.name} = `

    inputs.forEach( (v,i) => {
      if( isNaN( v ) ) {
        out += v
        if( i < inputs.length -1 ) {
          adderAtEnd = true
          out += ' + '
        }
        alreadyFullSummed = false
      }else{
        sum += parseFloat( v )
        numCount++
      }
    })

    if( numCount > 0 ) {
      out += adderAtEnd || alreadyFullSummed ? sum : ' + ' + sum
    }

    out += '\n'

    gen.memo[ this.name ] = this.name

    return [ this.name, out ]
  }
}

module.exports = ( ...args ) => {
  const add = Object.create( proto )
  add.id = gen.getUID()
  add.name = add.basename + add.id
  add.inputs = args

  return add
}

},{"./gen.js":107}],81:[function(require,module,exports){
'use strict'

let gen      = require( './gen.js' ),
    mul      = require( './mul.js' ),
    sub      = require( './sub.js' ),
    div      = require( './div.js' ),
    data     = require( './data.js' ),
    peek     = require( './peek.js' ),
    accum    = require( './accum.js' ),
    ifelse   = require( './ifelseif.js' ),
    lt       = require( './lt.js' ),
    bang     = require( './bang.js' ),
    env      = require( './env.js' ),
    param    = require( './param.js' ),
    add      = require( './add.js' ),
    gtp      = require( './gtp.js' ),
    not      = require( './not.js' ),
    and      = require( './and.js' ),
    neq      = require( './neq.js' ),
    poke     = require( './poke.js' )

module.exports = ( attackTime=44, decayTime=22050, sustainTime=44100, sustainLevel=.6, releaseTime=44100, _props ) => {
  let envTrigger = bang(),
      phase = accum( 1, envTrigger, { max: Infinity, shouldWrap:false, initialValue:Infinity }),
      shouldSustain = param( 1 ),
      defaults = {
         shape: 'exponential',
         alpha: 5,
         triggerRelease: false,
      },
      props = Object.assign({}, defaults, _props ),
      bufferData, decayData, out, buffer, sustainCondition, releaseAccum, releaseCondition


  const completeFlag = data( [0] )

  bufferData = env({ length:1024, alpha:props.alpha, shift:0, type:props.shape })

  sustainCondition = props.triggerRelease 
    ? shouldSustain
    : lt( phase, add( attackTime, decayTime, sustainTime ) )

  releaseAccum = props.triggerRelease
    ? gtp( sub( sustainLevel, accum( div( sustainLevel, releaseTime ) , 0, { shouldWrap:false }) ), 0 )
    : sub( sustainLevel, mul( div( sub( phase, add( attackTime, decayTime, sustainTime ) ), releaseTime ), sustainLevel ) ), 

  releaseCondition = props.triggerRelease
    ? not( shouldSustain )
    : lt( phase, add( attackTime, decayTime, sustainTime, releaseTime ) )

  out = ifelse(
    // attack 
    lt( phase,  attackTime ), 
    peek( bufferData, div( phase, attackTime ), { boundmode:'clamp' } ), 

    // decay
    lt( phase, add( attackTime, decayTime ) ), 
    peek( bufferData, sub( 1, mul( div( sub( phase,  attackTime ),  decayTime ), sub( 1,  sustainLevel ) ) ), { boundmode:'clamp' }),

    // sustain
    and( sustainCondition, neq( phase, Infinity ) ),
    peek( bufferData,  sustainLevel ),

    // release
    releaseCondition, //lt( phase,  attackTime +  decayTime +  sustainTime +  releaseTime ),
    peek( 
      bufferData,
      releaseAccum, 
      //sub(  sustainLevel, mul( div( sub( phase,  attackTime +  decayTime +  sustainTime),  releaseTime ),  sustainLevel ) ), 
      { boundmode:'clamp' }
    ),

    neq( phase, Infinity ),
    poke( completeFlag, 1, 0, { inline:0 }),

    0
  )
   
  const usingWorklet = gen.mode === 'worklet'
  if( usingWorklet === true ) {
    out.node = null
    utilities.register( out )
  }

  out.trigger = ()=> {
    shouldSustain.value = 1
    envTrigger.trigger()
  }
 
  // needed for gibberish... getting this to work right with worklets
  // via promises will probably be tricky
  out.isComplete = ()=> {
    if( usingWorklet === true && out.node !== null ) {
      const p = new Promise( resolve => {
        out.node.getMemoryValue( completeFlag.memory.values.idx, resolve )
      })

      return p
    }else{
      return gen.memory.heap[ completeFlag.memory.values.idx ]
    }
  }


  out.release = ()=> {
    shouldSustain.value = 0
    // XXX pretty nasty... grabs accum inside of gtp and resets value manually
    // unfortunately envTrigger won't work as it's back to 0 by the time the release block is triggered...
    if( usingWorklet && out.node !== null ) {
      out.node.port.postMessage({ key:'set', idx:releaseAccum.inputs[0].inputs[1].memory.value.idx, value:0 })
    }else{
      gen.memory.heap[ releaseAccum.inputs[0].inputs[1].memory.value.idx ] = 0
    }
  }

  return out 
}

},{"./accum.js":77,"./add.js":80,"./and.js":82,"./bang.js":86,"./data.js":93,"./div.js":98,"./env.js":99,"./gen.js":107,"./gtp.js":110,"./ifelseif.js":112,"./lt.js":115,"./mul.js":125,"./neq.js":126,"./not.js":128,"./param.js":130,"./peek.js":131,"./poke.js":133,"./sub.js":144}],82:[function(require,module,exports){
'use strict'

let gen = require( './gen.js' )

let proto = {
  basename:'and',

  gen() {
    let inputs = gen.getInputs( this ), out

    out = `  var ${this.name} = (${inputs[0]} !== 0 && ${inputs[1]} !== 0) | 0\n\n`

    gen.memo[ this.name ] = `${this.name}`

    return [ `${this.name}`, out ]
  },

}

module.exports = ( in1, in2 ) => {
  let ugen = Object.create( proto )
  Object.assign( ugen, {
    uid:     gen.getUID(),
    inputs:  [ in1, in2 ],
  })
  
  ugen.name = `${ugen.basename}${ugen.uid}`

  return ugen
}

},{"./gen.js":107}],83:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  basename:'asin',

  gen() {
    let out,
        inputs = gen.getInputs( this )
    
    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet ? '' : 'gen.'

    if( isNaN( inputs[0] ) ) {
      gen.closures.add({ 'asin': isWorklet ? 'Math.sin' : Math.asin })

      out = `${ref}asin( ${inputs[0]} )` 

    } else {
      out = Math.asin( parseFloat( inputs[0] ) )
    }
    
    return out
  }
}

module.exports = x => {
  let asin = Object.create( proto )

  asin.inputs = [ x ]
  asin.id = gen.getUID()
  asin.name = `${asin.basename}{asin.id}`

  return asin
}

},{"./gen.js":107}],84:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  basename:'atan',

  gen() {
    let out,
        inputs = gen.getInputs( this )
    
    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet ? '' : 'gen.'

    if( isNaN( inputs[0] ) ) {
      gen.closures.add({ 'atan': isWorklet ? 'Math.atan' : Math.atan })

      out = `${ref}atan( ${inputs[0]} )` 

    } else {
      out = Math.atan( parseFloat( inputs[0] ) )
    }
    
    return out
  }
}

module.exports = x => {
  let atan = Object.create( proto )

  atan.inputs = [ x ]
  atan.id = gen.getUID()
  atan.name = `${atan.basename}{atan.id}`

  return atan
}

},{"./gen.js":107}],85:[function(require,module,exports){
'use strict'

let gen     = require( './gen.js' ),
    history = require( './history.js' ),
    mul     = require( './mul.js' ),
    sub     = require( './sub.js' )

module.exports = ( decayTime = 44100 ) => {
  let ssd = history ( 1 ),
      t60 = Math.exp( -6.907755278921 / decayTime )

  ssd.in( mul( ssd.out, t60 ) )

  ssd.out.trigger = ()=> {
    ssd.value = 1
  }

  return sub( 1, ssd.out )
}

},{"./gen.js":107,"./history.js":111,"./mul.js":125,"./sub.js":144}],86:[function(require,module,exports){
'use strict'

let gen = require('./gen.js')

let proto = {
  gen() {
    gen.requestMemory( this.memory )
    
    let out = 
`  var ${this.name} = memory[${this.memory.value.idx}]
  if( ${this.name} === 1 ) memory[${this.memory.value.idx}] = 0      
      
`
    gen.memo[ this.name ] = this.name

    return [ this.name, out ]
  } 
}

module.exports = ( _props ) => {
  let ugen = Object.create( proto ),
      props = Object.assign({}, { min:0, max:1 }, _props )

  ugen.name = 'bang' + gen.getUID()

  ugen.min = props.min
  ugen.max = props.max

  const usingWorklet = gen.mode === 'worklet'
  if( usingWorklet === true ) {
    ugen.node = null
    utilities.register( ugen )
  }

  ugen.trigger = () => {
    if( usingWorklet === true && ugen.node !== null ) {
      ugen.node.port.postMessage({ key:'set', idx:ugen.memory.value.idx, value:ugen.max })
    }else{
      gen.memory.heap[ ugen.memory.value.idx ] = ugen.max 
    }
  }

  ugen.memory = {
    value: { length:1, idx:null }
  }

  return ugen
}

},{"./gen.js":107}],87:[function(require,module,exports){
'use strict'

let gen = require( './gen.js' )

let proto = {
  basename:'bool',

  gen() {
    let inputs = gen.getInputs( this ), out

    out = `${inputs[0]} === 0 ? 0 : 1`
    
    //gen.memo[ this.name ] = `gen.data.${this.name}`

    //return [ `gen.data.${this.name}`, ' ' +out ]
    return out
  }
}

module.exports = ( in1 ) => {
  let ugen = Object.create( proto )

  Object.assign( ugen, { 
    uid:        gen.getUID(),
    inputs:     [ in1 ],
  })
  
  ugen.name = `${ugen.basename}${ugen.uid}`

  return ugen
}


},{"./gen.js":107}],88:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  name:'ceil',

  gen() {
    let out,
        inputs = gen.getInputs( this )

    
    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet ? '' : 'gen.'

    if( isNaN( inputs[0] ) ) {
      gen.closures.add({ [ this.name ]: isWorklet ? 'Math.ceil' : Math.ceil })

      out = `${ref}ceil( ${inputs[0]} )`

    } else {
      out = Math.ceil( parseFloat( inputs[0] ) )
    }
    
    return out
  }
}

module.exports = x => {
  let ceil = Object.create( proto )

  ceil.inputs = [ x ]

  return ceil
}

},{"./gen.js":107}],89:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js'),
    floor= require('./floor.js'),
    sub  = require('./sub.js'),
    memo = require('./memo.js')

let proto = {
  basename:'clip',

  gen() {
    let code,
        inputs = gen.getInputs( this ),
        out

    out =

` var ${this.name} = ${inputs[0]}
  if( ${this.name} > ${inputs[2]} ) ${this.name} = ${inputs[2]}
  else if( ${this.name} < ${inputs[1]} ) ${this.name} = ${inputs[1]}
`
    out = ' ' + out
    
    gen.memo[ this.name ] = this.name

    return [ this.name, out ]
  },
}

module.exports = ( in1, min=-1, max=1 ) => {
  let ugen = Object.create( proto )

  Object.assign( ugen, { 
    min, 
    max,
    uid:    gen.getUID(),
    inputs: [ in1, min, max ],
  })
  
  ugen.name = `${ugen.basename}${ugen.uid}`

  return ugen
}

},{"./floor.js":104,"./gen.js":107,"./memo.js":119,"./sub.js":144}],90:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  basename:'cos',

  gen() {
    let out,
        inputs = gen.getInputs( this )
    
    
    const isWorklet = gen.mode === 'worklet'

    const ref = isWorklet ? '' : 'gen.'

    if( isNaN( inputs[0] ) ) {
      gen.closures.add({ 'cos': isWorklet ? 'Math.cos' : Math.cos })

      out = `${ref}cos( ${inputs[0]} )` 

    } else {
      out = Math.cos( parseFloat( inputs[0] ) )
    }
    
    return out
  }
}

module.exports = x => {
  let cos = Object.create( proto )

  cos.inputs = [ x ]
  cos.id = gen.getUID()
  cos.name = `${cos.basename}{cos.id}`

  return cos
}

},{"./gen.js":107}],91:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  basename:'counter',

  gen() {
    let code,
        inputs = gen.getInputs( this ),
        genName = 'gen.' + this.name,
        functionBody
       
    if( this.memory.value.idx === null ) gen.requestMemory( this.memory )
    gen.memory.heap[ this.memory.value.idx ] = this.initialValue
    
    functionBody  = this.callback( genName, inputs[0], inputs[1], inputs[2], inputs[3], inputs[4],  `memory[${this.memory.value.idx}]`, `memory[${this.memory.wrap.idx}]`  )

    gen.memo[ this.name ] = this.name + '_value'
   
    if( gen.memo[ this.wrap.name ] === undefined ) this.wrap.gen()

    return [ this.name + '_value', functionBody ]
  },

  callback( _name, _incr, _min, _max, _reset, loops, valueRef, wrapRef ) {
    let diff = this.max - this.min,
        out = '',
        wrap = ''
    // must check for reset before storing value for output
    if( !(typeof this.inputs[3] === 'number' && this.inputs[3] < 1) ) { 
      out += `  if( ${_reset} >= 1 ) ${valueRef} = ${_min}\n`
    }

    out += `  var ${this.name}_value = ${valueRef};\n  ${valueRef} += ${_incr}\n` // store output value before accumulating  
    
    if( typeof this.max === 'number' && this.max !== Infinity && typeof this.min !== 'number' ) {
      wrap = 
`  if( ${valueRef} >= ${this.max} &&  ${loops} > 0) {
    ${valueRef} -= ${diff}
    ${wrapRef} = 1
  }else{
    ${wrapRef} = 0
  }\n`
    }else if( this.max !== Infinity && this.min !== Infinity ) {
      wrap = 
`  if( ${valueRef} >= ${_max} &&  ${loops} > 0) {
    ${valueRef} -= ${_max} - ${_min}
    ${wrapRef} = 1
  }else if( ${valueRef} < ${_min} &&  ${loops} > 0) {
    ${valueRef} += ${_max} - ${_min}
    ${wrapRef} = 1
  }else{
    ${wrapRef} = 0
  }\n`
    }else{
      out += '\n'
    }

    out = out + wrap

    return out
  }
}

module.exports = ( incr=1, min=0, max=Infinity, reset=0, loops=1,  properties ) => {
  let ugen = Object.create( proto ),
      defaults = Object.assign( { initialValue: 0, shouldWrap:true }, properties )

  Object.assign( ugen, { 
    min:    min, 
    max:    max,
    initialValue: defaults.initialValue,
    value:  defaults.initialValue,
    uid:    gen.getUID(),
    inputs: [ incr, min, max, reset, loops ],
    memory: {
      value: { length:1, idx: null },
      wrap:  { length:1, idx: null } 
    },
    wrap : {
      gen() { 
        if( ugen.memory.wrap.idx === null ) {
          gen.requestMemory( ugen.memory )
        }
        gen.getInputs( this )
        gen.memo[ this.name ] = `memory[ ${ugen.memory.wrap.idx} ]`
        return `memory[ ${ugen.memory.wrap.idx} ]` 
      }
    }
  },
  defaults )
 
  Object.defineProperty( ugen, 'value', {
    get() {
      if( this.memory.value.idx !== null ) {
        return gen.memory.heap[ this.memory.value.idx ]
      }
    },
    set( v ) {
      if( this.memory.value.idx !== null ) {
        gen.memory.heap[ this.memory.value.idx ] = v 
      }
    }
  })
  
  ugen.wrap.inputs = [ ugen ]
  ugen.name = `${ugen.basename}${ugen.uid}`
  ugen.wrap.name = ugen.name + '_wrap'
  return ugen
} 

},{"./gen.js":107}],92:[function(require,module,exports){
'use strict'

let gen  = require( './gen.js' ),
    accum= require( './phasor.js' ),
    data = require( './data.js' ),
    peek = require( './peek.js' ),
    mul  = require( './mul.js' ),
    phasor=require( './phasor.js')

let proto = {
  basename:'cycle',

  initTable() {    
    let buffer = new Float32Array( 1024 )

    for( let i = 0, l = buffer.length; i < l; i++ ) {
      buffer[ i ] = Math.sin( ( i / l ) * ( Math.PI * 2 ) )
    }

    gen.globals.cycle = data( buffer, 1, { immutable:true } )
  }

}

module.exports = ( frequency=1, reset=0, _props ) => {
  if( typeof gen.globals.cycle === 'undefined' ) proto.initTable() 
  const props = Object.assign({}, { min:0 }, _props )

  const ugen = peek( gen.globals.cycle, phasor( frequency, reset, props ))
  ugen.name = 'cycle' + gen.getUID()

  return ugen
}

},{"./data.js":93,"./gen.js":107,"./mul.js":125,"./peek.js":131,"./phasor.js":132}],93:[function(require,module,exports){
'use strict'

const gen  = require('./gen.js'),
      utilities = require( './utilities.js' ),
      peek = require('./peek.js'),
      poke = require('./poke.js')

const proto = {
  basename:'data',
  globals: {},
  memo:{},

  gen() {
    let idx
    //console.log( 'data name:', this.name, proto.memo )
    //debugger
    if( gen.memo[ this.name ] === undefined ) {
      let ugen = this
      gen.requestMemory( this.memory, this.immutable ) 
      idx = this.memory.values.idx
      if( this.buffer !== undefined ) {
        try {
          gen.memory.heap.set( this.buffer, idx )
        }catch( e ) {
          console.log( e )
          throw Error( 'error with request. asking for ' + this.buffer.length +'. current index: ' + gen.memoryIndex + ' of ' + gen.memory.heap.length )
        }
      }
      //gen.data[ this.name ] = this
      //return 'gen.memory' + this.name + '.buffer'
      if( this.name.indexOf('data') === -1 ) {
        proto.memo[ this.name ] = idx
      }else{
        gen.memo[ this.name ] = idx
      }
    }else{
      //console.log( 'using gen data memo', proto.memo[ this.name ] )
      idx = gen.memo[ this.name ]
    }
    return idx
  },
}

module.exports = ( x, y=1, properties ) => {
  let ugen, buffer, shouldLoad = false
  
  if( properties !== undefined && properties.global !== undefined ) {
    if( gen.globals[ properties.global ] ) {
      return gen.globals[ properties.global ]
    }
  }

  if( typeof x === 'number' ) {
    if( y !== 1 ) {
      buffer = []
      for( let i = 0; i < y; i++ ) {
        buffer[ i ] = new Float32Array( x )
      }
    }else{
      buffer = new Float32Array( x )
    }
  }else if( Array.isArray( x ) ) { //! (x instanceof Float32Array ) ) {
    let size = x.length
    buffer = new Float32Array( size )
    for( let i = 0; i < x.length; i++ ) {
      buffer[ i ] = x[ i ]
    }
  }else if( typeof x === 'string' ) {
    //buffer = { length: y > 1 ? y : gen.samplerate * 60 } // XXX what???
    //if( proto.memo[ x ] === undefined ) {
      buffer = { length: y > 1 ? y : 1 } // XXX what???
      shouldLoad = true
    //}else{
      //buffer = proto.memo[ x ]
    //}
  }else if( x instanceof Float32Array ) {
    buffer = x
  }
  
  ugen = Object.create( proto ) 

  Object.assign( ugen, 
  { 
    buffer,
    name: proto.basename + gen.getUID(),
    dim:  buffer !== undefined ? buffer.length : 1, // XXX how do we dynamically allocate this?
    channels : 1,
    onload: null,
    //then( fnc ) {
    //  ugen.onload = fnc
    //  return ugen
    //},
    immutable: properties !== undefined && properties.immutable === true ? true : false,
    load( filename, __resolve ) {
      let promise = utilities.loadSample( filename, ugen )
      promise.then( _buffer => { 
        proto.memo[ x ] = _buffer
        ugen.name = filename
        ugen.memory.values.length = ugen.dim = _buffer.length

        gen.requestMemory( ugen.memory, ugen.immutable ) 
        gen.memory.heap.set( _buffer, ugen.memory.values.idx )
        if( typeof ugen.onload === 'function' ) ugen.onload( _buffer ) 
        __resolve( ugen )
      })
    },
    memory : {
      values: { length:buffer !== undefined ? buffer.length : 1, idx:null }
    }
  },
  properties
  )

  
  if( properties !== undefined ) {
    if( properties.global !== undefined ) {
      gen.globals[ properties.global ] = ugen
    }
    if( properties.meta === true ) {
      for( let i = 0, length = ugen.buffer.length; i < length; i++ ) {
        Object.defineProperty( ugen, i, {
          get () {
            return peek( ugen, i, { mode:'simple', interp:'none' } )
          },
          set( v ) {
            return poke( ugen, v, i )
          }
        })
      }
    }
  }

  let returnValue
  if( shouldLoad === true ) {
    returnValue = new Promise( (resolve,reject) => {
      //ugen.load( x, resolve )
      let promise = utilities.loadSample( x, ugen )
      promise.then( _buffer => { 
        proto.memo[ x ] = _buffer
        ugen.memory.values.length = ugen.dim = _buffer.length

        ugen.buffer = _buffer
        //gen.once( 'memory init', ()=> {
        //  console.log( "CALLED", ugen.memory )
        //  gen.requestMemory( ugen.memory, ugen.immutable ) 
        //  gen.memory.heap.set( _buffer, ugen.memory.values.idx )
        //  if( typeof ugen.onload === 'function' ) ugen.onload( _buffer ) 
        //})
        
        resolve( ugen )
      })     
    })
  }else if( proto.memo[ x ] !== undefined ) {

    gen.once( 'memory init', ()=> {
      gen.requestMemory( ugen.memory, ugen.immutable ) 
      gen.memory.heap.set( ugen.buffer, ugen.memory.values.idx )
      if( typeof ugen.onload === 'function' ) ugen.onload( ugen.buffer ) 
    })

    returnValue = ugen
  }else{
    returnValue = ugen
  }

  return returnValue 
}


},{"./gen.js":107,"./peek.js":131,"./poke.js":133,"./utilities.js":150}],94:[function(require,module,exports){
'use strict'

let gen     = require( './gen.js' ),
    history = require( './history.js' ),
    sub     = require( './sub.js' ),
    add     = require( './add.js' ),
    mul     = require( './mul.js' ),
    memo    = require( './memo.js' )

module.exports = ( in1 ) => {
  let x1 = history(),
      y1 = history(),
      filter

  //History x1, y1; y = in1 - x1 + y1*0.9997; x1 = in1; y1 = y; out1 = y;
  filter = memo( add( sub( in1, x1.out ), mul( y1.out, .9997 ) ) )
  x1.in( in1 )
  y1.in( filter )

  return filter
}

},{"./add.js":80,"./gen.js":107,"./history.js":111,"./memo.js":119,"./mul.js":125,"./sub.js":144}],95:[function(require,module,exports){
'use strict'

let gen     = require( './gen.js' ),
    history = require( './history.js' ),
    mul     = require( './mul.js' ),
    t60     = require( './t60.js' )

module.exports = ( decayTime = 44100, props ) => {
  let properties = Object.assign({}, { initValue:1 }, props ),
      ssd = history ( properties.initValue )

  ssd.in( mul( ssd.out, t60( decayTime ) ) )

  ssd.out.trigger = ()=> {
    ssd.value = 1
  }

  return ssd.out 
}

},{"./gen.js":107,"./history.js":111,"./mul.js":125,"./t60.js":146}],96:[function(require,module,exports){
'use strict'

const gen  = require( './gen.js'  ),
      data = require( './data.js' ),
      poke = require( './poke.js' ),
      peek = require( './peek.js' ),
      sub  = require( './sub.js'  ),
      wrap = require( './wrap.js' ),
      accum= require( './accum.js'),
      memo = require( './memo.js' )

const proto = {
  basename:'delay',

  gen() {
    let inputs = gen.getInputs( this )
    
    gen.memo[ this.name ] = inputs[0]
    
    return inputs[0]
  },
}

const defaults = { size: 512, interp:'none' }

module.exports = ( in1, taps, properties ) => {
  const ugen = Object.create( proto )
  let writeIdx, readIdx, delaydata

  if( Array.isArray( taps ) === false ) taps = [ taps ]
  
  const props = Object.assign( {}, defaults, properties )

  const maxTapSize = Math.max( ...taps )
  if( props.size < maxTapSize ) props.size = maxTapSize

  delaydata = data( props.size )
  
  ugen.inputs = []

  writeIdx = accum( 1, 0, { max:props.size, min:0 })
  
  for( let i = 0; i < taps.length; i++ ) {
    ugen.inputs[ i ] = peek( delaydata, wrap( sub( writeIdx, taps[i] ), 0, props.size ),{ mode:'samples', interp:props.interp })
  }
  
  ugen.outputs = ugen.inputs // XXX ugh, Ugh, UGH! but i guess it works.

  poke( delaydata, in1, writeIdx )

  ugen.name = `${ugen.basename}${gen.getUID()}`

  return ugen
}

},{"./accum.js":77,"./data.js":93,"./gen.js":107,"./memo.js":119,"./peek.js":131,"./poke.js":133,"./sub.js":144,"./wrap.js":152}],97:[function(require,module,exports){
'use strict'

let gen     = require( './gen.js' ),
    history = require( './history.js' ),
    sub     = require( './sub.js' )

module.exports = ( in1 ) => {
  let n1 = history()
    
  n1.in( in1 )

  let ugen = sub( in1, n1.out )
  ugen.name = 'delta'+gen.getUID()

  return ugen
}

},{"./gen.js":107,"./history.js":111,"./sub.js":144}],98:[function(require,module,exports){
'use strict'

let gen = require('./gen.js')

const proto = {
  basename:'div',
  gen() {
    let inputs = gen.getInputs( this ),
        out=`  var ${this.name} = `,
        diff = 0, 
        numCount = 0,
        lastNumber = inputs[ 0 ],
        lastNumberIsUgen = isNaN( lastNumber ), 
        divAtEnd = false

    inputs.forEach( (v,i) => {
      if( i === 0 ) return

      let isNumberUgen = isNaN( v ),
        isFinalIdx   = i === inputs.length - 1

      if( !lastNumberIsUgen && !isNumberUgen ) {
        lastNumber = lastNumber / v
        out += lastNumber
      }else{
        out += `${lastNumber} / ${v}`
      }

      if( !isFinalIdx ) out += ' / ' 
    })

    out += '\n'

    gen.memo[ this.name ] = this.name

    return [ this.name, out ]
  }
}

module.exports = (...args) => {
  const div = Object.create( proto )
  
  Object.assign( div, {
    id:     gen.getUID(),
    inputs: args,
  })

  div.name = div.basename + div.id
  
  return div
}

},{"./gen.js":107}],99:[function(require,module,exports){
'use strict'

let gen     = require( './gen' ),
    windows = require( './windows' ),
    data    = require( './data' ),
    peek    = require( './peek' ),
    phasor  = require( './phasor' ),
    defaults = {
      type:'triangular', length:1024, alpha:.15, shift:0, reverse:false 
    }

module.exports = props => {
  
  let properties = Object.assign( {}, defaults, props )
  let buffer = new Float32Array( properties.length )

  let name = properties.type + '_' + properties.length + '_' + properties.shift + '_' + properties.reverse + '_' + properties.alpha
  if( typeof gen.globals.windows[ name ] === 'undefined' ) { 

    for( let i = 0; i < properties.length; i++ ) {
      buffer[ i ] = windows[ properties.type ]( properties.length, i, properties.alpha, properties.shift )
    }

    if( properties.reverse === true ) { 
      buffer.reverse()
    }
    gen.globals.windows[ name ] = data( buffer )
  }

  let ugen = gen.globals.windows[ name ] 
  ugen.name = 'env' + gen.getUID()

  return ugen
}

},{"./data":93,"./gen":107,"./peek":131,"./phasor":132,"./windows":151}],100:[function(require,module,exports){
'use strict'

let gen = require( './gen.js' )

let proto = {
  basename:'eq',

  gen() {
    let inputs = gen.getInputs( this ), out

    out = this.inputs[0] === this.inputs[1] ? 1 : `  var ${this.name} = (${inputs[0]} === ${inputs[1]}) | 0\n\n`

    gen.memo[ this.name ] = `${this.name}`

    return [ `${this.name}`, out ]
  },

}

module.exports = ( in1, in2 ) => {
  let ugen = Object.create( proto )
  Object.assign( ugen, {
    uid:     gen.getUID(),
    inputs:  [ in1, in2 ],
  })
  
  ugen.name = `${ugen.basename}${ugen.uid}`

  return ugen
}

},{"./gen.js":107}],101:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  name:'exp',

  gen() {
    let out,
        inputs = gen.getInputs( this )

    
    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet? '' : 'gen.'

    if( isNaN( inputs[0] ) ) {
      gen.closures.add({ [ this.name ]: isWorklet ? 'Math.exp' : Math.exp })

      out = `${ref}exp( ${inputs[0]} )`

    } else {
      out = Math.exp( parseFloat( inputs[0] ) )
    }
    
    return out
  }
}

module.exports = x => {
  let exp = Object.create( proto )

  exp.inputs = [ x ]

  return exp
}

},{"./gen.js":107}],102:[function(require,module,exports){
arguments[4][9][0].apply(exports,arguments)
},{"./realm.js":103,"dup":9}],103:[function(require,module,exports){
/**
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

module.exports = function Realm (scope, parentElement) {
  const frame = document.createElement('iframe');
  frame.style.cssText = 'position:absolute;left:0;top:-999px;width:1px;height:1px;';
  parentElement.appendChild(frame);
  const win = frame.contentWindow;
  const doc = win.document;
  let vars = 'var window,$hook';
  for (const i in win) {
    if (!(i in scope) && i !== 'eval') {
      vars += ',';
      vars += i;
    }
  }
  for (const i in scope) {
    vars += ',';
    vars += i;
    vars += '=self.';
    vars += i;
  }
  const script = doc.createElement('script');
  script.appendChild(doc.createTextNode(
    `function $hook(self,console) {"use strict";
        ${vars};return function() {return eval(arguments[0])}}`
  ));
  doc.body.appendChild(script);
  this.exec = win.$hook.call(scope, scope, console);
}

},{}],104:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  name:'floor',

  gen() {
    let out,
        inputs = gen.getInputs( this )

    if( isNaN( inputs[0] ) ) {
      //gen.closures.add({ [ this.name ]: Math.floor })

      out = `( ${inputs[0]} | 0 )`

    } else {
      out = inputs[0] | 0
    }
    
    return out
  }
}

module.exports = x => {
  let floor = Object.create( proto )

  floor.inputs = [ x ]

  return floor
}

},{"./gen.js":107}],105:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  basename:'fold',

  gen() {
    let code,
        inputs = gen.getInputs( this ),
        out

    out = this.createCallback( inputs[0], this.min, this.max ) 

    gen.memo[ this.name ] = this.name + '_value'

    return [ this.name + '_value', out ]
  },

  createCallback( v, lo, hi ) {
    let out =
` var ${this.name}_value = ${v},
      ${this.name}_range = ${hi} - ${lo},
      ${this.name}_numWraps = 0

  if(${this.name}_value >= ${hi}){
    ${this.name}_value -= ${this.name}_range
    if(${this.name}_value >= ${hi}){
      ${this.name}_numWraps = ((${this.name}_value - ${lo}) / ${this.name}_range) | 0
      ${this.name}_value -= ${this.name}_range * ${this.name}_numWraps
    }
    ${this.name}_numWraps++
  } else if(${this.name}_value < ${lo}){
    ${this.name}_value += ${this.name}_range
    if(${this.name}_value < ${lo}){
      ${this.name}_numWraps = ((${this.name}_value - ${lo}) / ${this.name}_range- 1) | 0
      ${this.name}_value -= ${this.name}_range * ${this.name}_numWraps
    }
    ${this.name}_numWraps--
  }
  if(${this.name}_numWraps & 1) ${this.name}_value = ${hi} + ${lo} - ${this.name}_value
`
    return ' ' + out
  }
}

module.exports = ( in1, min=0, max=1 ) => {
  let ugen = Object.create( proto )

  Object.assign( ugen, { 
    min, 
    max,
    uid:    gen.getUID(),
    inputs: [ in1 ],
  })
  
  ugen.name = `${ugen.basename}${ugen.uid}`

  return ugen
}

},{"./gen.js":107}],106:[function(require,module,exports){
'use strict'

let gen = require( './gen.js' )

let proto = {
  basename:'gate',
  controlString:null, // insert into output codegen for determining indexing
  gen() {
    let inputs = gen.getInputs( this ), out
    
    gen.requestMemory( this.memory )
    
    let lastInputMemoryIdx = 'memory[ ' + this.memory.lastInput.idx + ' ]',
        outputMemoryStartIdx = this.memory.lastInput.idx + 1,
        inputSignal = inputs[0],
        controlSignal = inputs[1]
    
    /* 
     * we check to see if the current control inputs equals our last input
     * if so, we store the signal input in the memory associated with the currently
     * selected index. If not, we put 0 in the memory associated with the last selected index,
     * change the selected index, and then store the signal in put in the memery assoicated
     * with the newly selected index
     */
    
    out =

` if( ${controlSignal} !== ${lastInputMemoryIdx} ) {
    memory[ ${lastInputMemoryIdx} + ${outputMemoryStartIdx}  ] = 0 
    ${lastInputMemoryIdx} = ${controlSignal}
  }
  memory[ ${outputMemoryStartIdx} + ${controlSignal} ] = ${inputSignal}

`
    this.controlString = inputs[1]
    this.initialized = true

    gen.memo[ this.name ] = this.name

    this.outputs.forEach( v => v.gen() )

    return [ null, ' ' + out ]
  },

  childgen() {
    if( this.parent.initialized === false ) {
      gen.getInputs( this ) // parent gate is only input of a gate output, should only be gen'd once.
    }

    if( gen.memo[ this.name ] === undefined ) {
      gen.requestMemory( this.memory )

      gen.memo[ this.name ] = `memory[ ${this.memory.value.idx} ]`
    }
    
    return  `memory[ ${this.memory.value.idx} ]`
  }
}

module.exports = ( control, in1, properties ) => {
  let ugen = Object.create( proto ),
      defaults = { count: 2 }

  if( typeof properties !== undefined ) Object.assign( defaults, properties )

  Object.assign( ugen, {
    outputs: [],
    uid:     gen.getUID(),
    inputs:  [ in1, control ],
    memory: {
      lastInput: { length:1, idx:null }
    },
    initialized:false
  },
  defaults )
  
  ugen.name = `${ugen.basename}${gen.getUID()}`

  for( let i = 0; i < ugen.count; i++ ) {
    ugen.outputs.push({
      index:i,
      gen: proto.childgen,
      parent:ugen,
      inputs: [ ugen ],
      memory: {
        value: { length:1, idx:null }
      },
      initialized:false,
      name: `${ugen.name}_out${gen.getUID()}`
    })
  }

  return ugen
}

},{"./gen.js":107}],107:[function(require,module,exports){
'use strict'

/* gen.js
 *
 * low-level code generation for unit generators
 *
 */
const MemoryHelper = require( 'memory-helper' )
const EE = require( 'events' ).EventEmitter

const gen = {

  accum:0,
  getUID() { return this.accum++ },
  debug:false,
  samplerate: 44100, // change on audiocontext creation
  shouldLocalize: false,
  graph:null,
  globals:{
    windows: {},
  },
  mode:'worklet',
  
  /* closures
   *
   * Functions that are included as arguments to master callback. Examples: Math.abs, Math.random etc.
   * XXX Should probably be renamed callbackProperties or something similar... closures are no longer used.
   */

  closures: new Set(),
  params:   new Set(),
  inputs:   new Set(),

  parameters: new Set(),
  endBlock: new Set(),
  histories: new Map(),

  memo: {},

  //data: {},
  
  /* export
   *
   * place gen functions into another object for easier reference
   */

  export( obj ) {},

  addToEndBlock( v ) {
    this.endBlock.add( '  ' + v )
  },
  
  requestMemory( memorySpec, immutable=false ) {
    for( let key in memorySpec ) {
      let request = memorySpec[ key ]

      //console.log( 'requesting ' + key + ':' , JSON.stringify( request ) )

      if( request.length === undefined ) {
        console.log( 'undefined length for:', key )

        continue
      }

      request.idx = gen.memory.alloc( request.length, immutable )
    }
  },

  createMemory( amount=4096, type ) {
    const mem = MemoryHelper.create( amount, type )
    return mem
  },

  createCallback( ugen, mem, debug = false, shouldInlineMemory=false, memType = Float64Array ) {
    let isStereo = Array.isArray( ugen ) && ugen.length > 1,
        callback, 
        channel1, channel2

    if( typeof mem === 'number' || mem === undefined ) {
      this.memory = this.createMemory( mem, memType )
    }else{
      this.memory = mem
    }
    
    this.outputIdx = this.memory.alloc( 2, true )
    this.emit( 'memory init' )

    //console.log( 'cb memory:', mem )
    this.graph = ugen
    this.memo = {} 
    this.endBlock.clear()
    this.closures.clear()
    this.inputs.clear()
    this.params.clear()
    this.globals = { windows:{} }
    
    this.parameters.clear()
    
    this.functionBody = "  'use strict'\n"
    if( shouldInlineMemory===false ) {
      this.functionBody += this.mode === 'worklet' ? 
        "  var memory = this.memory\n\n" :
        "  var memory = gen.memory\n\n"
    }

    // call .gen() on the head of the graph we are generating the callback for
    //console.log( 'HEAD', ugen )
    for( let i = 0; i < 1 + isStereo; i++ ) {
      if( typeof ugen[i] === 'number' ) continue

      //let channel = isStereo ? ugen[i].gen() : ugen.gen(),
      let channel = isStereo ? this.getInput( ugen[i] ) : this.getInput( ugen ), 
          body = ''

      // if .gen() returns array, add ugen callback (graphOutput[1]) to our output functions body
      // and then return name of ugen. If .gen() only generates a number (for really simple graphs)
      // just return that number (graphOutput[0]).
      body += Array.isArray( channel ) ? channel[1] + '\n' + channel[0] : channel

      // split body to inject return keyword on last line
      body = body.split('\n')
     
      //if( debug ) console.log( 'functionBody length', body )
      
      // next line is to accommodate memo as graph head
      if( body[ body.length -1 ].trim().indexOf('let') > -1 ) { body.push( '\n' ) } 

      // get index of last line
      let lastidx = body.length - 1

      // insert return keyword
      body[ lastidx ] = '  memory[' + (this.outputIdx + i) + ']  = ' + body[ lastidx ] + '\n'

      this.functionBody += body.join('\n')
    }
    
    this.histories.forEach( value => {
      if( value !== null )
        value.gen()      
    })

    const returnStatement = isStereo ? `  return [ memory[${this.outputIdx}], memory[${this.outputIdx + 1}] ]` : `  return memory[${this.outputIdx}]`
    
    this.functionBody = this.functionBody.split('\n')

    if( this.endBlock.size ) { 
      this.functionBody = this.functionBody.concat( Array.from( this.endBlock ) )
      this.functionBody.push( returnStatement )
    }else{
      this.functionBody.push( returnStatement )
    }
    // reassemble function body
    this.functionBody = this.functionBody.join('\n')

    // we can only dynamically create a named function by dynamically creating another function
    // to construct the named function! sheesh...
    //
    if( shouldInlineMemory === true ) {
      this.parameters.add( 'memory' )
    }

    let paramString = ''
    if( this.mode === 'worklet' ) {
      for( let name of this.parameters.values() ) {
        paramString += name + ','
      }
      paramString = paramString.slice(0,-1)
    }

    const separator = this.parameters.size !== 0 && this.inputs.size > 0 ? ', ' : ''

    let inputString = ''
    if( this.mode === 'worklet' ) {
      for( let ugen of this.inputs.values() ) {
        inputString += ugen.name + ','
      }
      inputString = inputString.slice(0,-1)
    }

    let buildString = this.mode === 'worklet'
      ? `return function( ${inputString} ${separator} ${paramString} ){ \n${ this.functionBody }\n}`
      : `return function gen( ${ [...this.parameters].join(',') } ){ \n${ this.functionBody }\n}`
    
    if( this.debug || debug ) console.log( buildString ) 

    callback = new Function( buildString )()

    // assign properties to named function
    for( let dict of this.closures.values() ) {
      let name = Object.keys( dict )[0],
          value = dict[ name ]

      callback[ name ] = value
    }

    for( let dict of this.params.values() ) {
      let name = Object.keys( dict )[0],
          ugen = dict[ name ]
      
      Object.defineProperty( callback, name, {
        configurable: true,
        get() { return ugen.value },
        set(v){ ugen.value = v }
      })
      //callback[ name ] = value
    }

    callback.members = this.closures
    callback.data = this.data
    callback.params = this.params
    callback.inputs = this.inputs
    callback.parameters = this.parameters//.slice( 0 )
    callback.out = this.memory.heap.subarray( this.outputIdx, this.outputIdx + 2 )
    callback.isStereo = isStereo

    //if( MemoryHelper.isPrototypeOf( this.memory ) ) 
    callback.memory = this.memory.heap

    this.histories.clear()

    return callback
  },
  
  /* getInputs
   *
   * Called by each individual ugen when their .gen() method is called to resolve their various inputs.
   * If an input is a number, return the number. If
   * it is an ugen, call .gen() on the ugen, memoize the result and return the result. If the
   * ugen has previously been memoized return the memoized value.
   *
   */
  getInputs( ugen ) {
    return ugen.inputs.map( gen.getInput ) 
  },

  getInput( input ) {
    let isObject = typeof input === 'object',
        processedInput

    if( isObject ) { // if input is a ugen... 
      //console.log( input.name, gen.memo[ input.name ] )
      if( gen.memo[ input.name ] ) { // if it has been memoized...
        processedInput = gen.memo[ input.name ]
      }else if( Array.isArray( input ) ) {
        gen.getInput( input[0] )
        gen.getInput( input[1] )
      }else{ // if not memoized generate code  
        if( typeof input.gen !== 'function' ) {
          console.log( 'no gen found:', input, input.gen )
          input = input.graph
        }
        let code = input.gen()
        //if( code.indexOf( 'Object' ) > -1 ) console.log( 'bad input:', input, code )
        
        if( Array.isArray( code ) ) {
          if( !gen.shouldLocalize ) {
            gen.functionBody += code[1]
          }else{
            gen.codeName = code[0]
            gen.localizedCode.push( code[1] )
          }
          //console.log( 'after GEN' , this.functionBody )
          processedInput = code[0]
        }else{
          processedInput = code
        }
      }
    }else{ // it input is a number
      processedInput = input
    }

    return processedInput
  },

  startLocalize() {
    this.localizedCode = []
    this.shouldLocalize = true
  },
  endLocalize() {
    this.shouldLocalize = false

    return [ this.codeName, this.localizedCode.slice(0) ]
  },

  free( graph ) {
    if( Array.isArray( graph ) ) { // stereo ugen
      for( let channel of graph ) {
        this.free( channel )
      }
    } else {
      if( typeof graph === 'object' ) {
        if( graph.memory !== undefined ) {
          for( let memoryKey in graph.memory ) {
            this.memory.free( graph.memory[ memoryKey ].idx )
          }
        }
        if( Array.isArray( graph.inputs ) ) {
          for( let ugen of graph.inputs ) {
            this.free( ugen )
          }
        }
      }
    }
  }
}

gen.__proto__ = new EE()

module.exports = gen

},{"events":75,"memory-helper":153}],108:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  basename:'gt',

  gen() {
    let out,
        inputs = gen.getInputs( this )
    
    out = `  var ${this.name} = `  

    if( isNaN( this.inputs[0] ) || isNaN( this.inputs[1] ) ) {
      out += `(( ${inputs[0]} > ${inputs[1]}) | 0 )`
    } else {
      out += inputs[0] > inputs[1] ? 1 : 0 
    }
    out += '\n\n'

    gen.memo[ this.name ] = this.name

    return [this.name, out]
  }
}

module.exports = (x,y) => {
  let gt = Object.create( proto )

  gt.inputs = [ x,y ]
  gt.name = gt.basename + gen.getUID()

  return gt
}

},{"./gen.js":107}],109:[function(require,module,exports){
'use strict'

let gen = require('./gen.js')

let proto = {
  name:'gte',

  gen() {
    let out,
        inputs = gen.getInputs( this )
    
    out = `  var ${this.name} = `  

    if( isNaN( this.inputs[0] ) || isNaN( this.inputs[1] ) ) {
      out += `( ${inputs[0]} >= ${inputs[1]} | 0 )`
    } else {
      out += inputs[0] >= inputs[1] ? 1 : 0 
    }
    out += '\n\n'

    gen.memo[ this.name ] = this.name

    return [this.name, out]
  }
}

module.exports = (x,y) => {
  let gt = Object.create( proto )

  gt.inputs = [ x,y ]
  gt.name = 'gte' + gen.getUID()

  return gt
}

},{"./gen.js":107}],110:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  name:'gtp',

  gen() {
    let out,
        inputs = gen.getInputs( this )

    if( isNaN( this.inputs[0] ) || isNaN( this.inputs[1] ) ) {
      out = `(${inputs[ 0 ]} * ( ( ${inputs[0]} > ${inputs[1]} ) | 0 ) )` 
    } else {
      out = inputs[0] * ( ( inputs[0] > inputs[1] ) | 0 )
    }
    
    return out
  }
}

module.exports = (x,y) => {
  let gtp = Object.create( proto )

  gtp.inputs = [ x,y ]

  return gtp
}

},{"./gen.js":107}],111:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

module.exports = ( in1=0 ) => {
  let ugen = {
    inputs: [ in1 ],
    memory: { value: { length:1, idx: null } },
    recorder: null,

    in( v ) {
      if( gen.histories.has( v ) ){
        let memoHistory = gen.histories.get( v )
        ugen.name = memoHistory.name
        return memoHistory
      }

      let obj = {
        gen() {
          let inputs = gen.getInputs( ugen )

          if( ugen.memory.value.idx === null ) {
            gen.requestMemory( ugen.memory )
            gen.memory.heap[ ugen.memory.value.idx ] = in1
          }

          let idx = ugen.memory.value.idx
          
          gen.addToEndBlock( 'memory[ ' + idx + ' ] = ' + inputs[ 0 ] )
          
          // return ugen that is being recorded instead of ssd.
          // this effectively makes a call to ssd.record() transparent to the graph.
          // recording is triggered by prior call to gen.addToEndBlock.
          gen.histories.set( v, obj )

          return inputs[ 0 ]
        },
        name: ugen.name + '_in'+gen.getUID(),
        memory: ugen.memory
      }

      this.inputs[ 0 ] = v
      
      ugen.recorder = obj

      return obj
    },
    
    out: {
            
      gen() {
        if( ugen.memory.value.idx === null ) {
          if( gen.histories.get( ugen.inputs[0] ) === undefined ) {
            gen.histories.set( ugen.inputs[0], ugen.recorder )
          }
          gen.requestMemory( ugen.memory )
          gen.memory.heap[ ugen.memory.value.idx ] = parseFloat( in1 )
        }
        let idx = ugen.memory.value.idx
         
        return 'memory[ ' + idx + ' ] '
      },
    },

    uid: gen.getUID(),
  }
  
  ugen.out.memory = ugen.memory 

  ugen.name = 'history' + ugen.uid
  ugen.out.name = ugen.name + '_out'
  ugen.in._name  = ugen.name = '_in'

  Object.defineProperty( ugen, 'value', {
    get() {
      if( this.memory.value.idx !== null ) {
        return gen.memory.heap[ this.memory.value.idx ]
      }
    },
    set( v ) {
      if( this.memory.value.idx !== null ) {
        gen.memory.heap[ this.memory.value.idx ] = v 
      }
    }
  })

  return ugen
}

},{"./gen.js":107}],112:[function(require,module,exports){
'use strict'

let gen = require( './gen.js' )

let proto = {
  basename:'ifelse',

  gen() {
    let conditionals = this.inputs[0],
        defaultValue = gen.getInput( conditionals[ conditionals.length - 1] ),
        out = `  var ${this.name}_out = ${defaultValue}\n` 

    //console.log( 'conditionals:', this.name, conditionals )

    //console.log( 'defaultValue:', defaultValue )

    for( let i = 0; i < conditionals.length - 2; i+= 2 ) {
      let isEndBlock = i === conditionals.length - 3,
          cond  = gen.getInput( conditionals[ i ] ),
          preblock = conditionals[ i+1 ],
          block, blockName, output

      //console.log( 'pb', preblock )

      if( typeof preblock === 'number' ){
        block = preblock
        blockName = null
      }else{
        if( gen.memo[ preblock.name ] === undefined ) {
          // used to place all code dependencies in appropriate blocks
          gen.startLocalize()

          gen.getInput( preblock )

          block = gen.endLocalize()
          blockName = block[0]
          block = block[ 1 ].join('')
          block = '  ' + block.replace( /\n/gi, '\n  ' )
        }else{
          block = ''
          blockName = gen.memo[ preblock.name ]
        }
      }

      output = blockName === null ? 
        `  ${this.name}_out = ${block}` :
        `${block}  ${this.name}_out = ${blockName}`
      
      if( i===0 ) out += ' '
      out += 
` if( ${cond} === 1 ) {
${output}
  }`

      if( !isEndBlock ) {
        out += ` else`
      }else{
        out += `\n`
      }
    }

    gen.memo[ this.name ] = `${this.name}_out`

    return [ `${this.name}_out`, out ]
  }
}

module.exports = ( ...args  ) => {
  let ugen = Object.create( proto ),
      conditions = Array.isArray( args[0] ) ? args[0] : args

  Object.assign( ugen, {
    uid:     gen.getUID(),
    inputs:  [ conditions ],
  })
  
  ugen.name = `${ugen.basename}${ugen.uid}`

  return ugen
}

},{"./gen.js":107}],113:[function(require,module,exports){
'use strict'

let gen = require('./gen.js')

let proto = {
  basename:'in',

  gen() {
    const isWorklet = gen.mode === 'worklet'

    if( isWorklet ) {
      gen.inputs.add( this )
    }else{
      gen.parameters.add( this.name )
    }

    gen.memo[ this.name ] = isWorklet === true ? this.name + '[i]' : this.name

    return gen.memo[ this.name ]
  } 
}

module.exports = ( name, inputNumber=0, channelNumber=0, defaultValue=0, min=0, max=1 ) => {
  let input = Object.create( proto )

  input.id   = gen.getUID()
  input.name = name !== undefined ? name : `${input.basename}${input.id}`
  Object.assign( input, { defaultValue, min, max, inputNumber, channelNumber })

  input[0] = {
    gen() {
      if( ! gen.parameters.has( input.name ) ) gen.parameters.add( input.name )
      return input.name + '[0]'
    }
  }
  input[1] = {
    gen() {
      if( ! gen.parameters.has( input.name ) ) gen.parameters.add( input.name )
      return input.name + '[1]'
    }
  }


  return input
}

},{"./gen.js":107}],114:[function(require,module,exports){
'use strict'

const library = {
  export( destination ) {
    if( destination === window ) {
      destination.ssd = library.history    // history is window object property, so use ssd as alias
      destination.input = library.in       // in is a keyword in javascript
      destination.ternary = library.switch // switch is a keyword in javascript

      delete library.history
      delete library.in
      delete library.switch
    }

    Object.assign( destination, library )

    Object.defineProperty( library, 'samplerate', {
      get() { return library.gen.samplerate },
      set(v) {}
    })

    library.in = destination.input
    library.history = destination.ssd
    library.switch = destination.ternary

    destination.clip = library.clamp
  },

  gen:      require( './gen.js' ),
  
  abs:      require( './abs.js' ),
  round:    require( './round.js' ),
  param:    require( './param.js' ),
  add:      require( './add.js' ),
  sub:      require( './sub.js' ),
  mul:      require( './mul.js' ),
  div:      require( './div.js' ),
  accum:    require( './accum.js' ),
  counter:  require( './counter.js' ),
  sin:      require( './sin.js' ),
  cos:      require( './cos.js' ),
  tan:      require( './tan.js' ),
  tanh:     require( './tanh.js' ),
  asin:     require( './asin.js' ),
  acos:     require( './acos.js' ),
  atan:     require( './atan.js' ),  
  phasor:   require( './phasor.js' ),
  data:     require( './data.js' ),
  peek:     require( './peek.js' ),
  cycle:    require( './cycle.js' ),
  history:  require( './history.js' ),
  delta:    require( './delta.js' ),
  floor:    require( './floor.js' ),
  ceil:     require( './ceil.js' ),
  min:      require( './min.js' ),
  max:      require( './max.js' ),
  sign:     require( './sign.js' ),
  dcblock:  require( './dcblock.js' ),
  memo:     require( './memo.js' ),
  rate:     require( './rate.js' ),
  wrap:     require( './wrap.js' ),
  mix:      require( './mix.js' ),
  clamp:    require( './clamp.js' ),
  poke:     require( './poke.js' ),
  delay:    require( './delay.js' ),
  fold:     require( './fold.js' ),
  mod :     require( './mod.js' ),
  sah :     require( './sah.js' ),
  noise:    require( './noise.js' ),
  not:      require( './not.js' ),
  gt:       require( './gt.js' ),
  gte:      require( './gte.js' ),
  lt:       require( './lt.js' ), 
  lte:      require( './lte.js' ), 
  bool:     require( './bool.js' ),
  gate:     require( './gate.js' ),
  train:    require( './train.js' ),
  slide:    require( './slide.js' ),
  in:       require( './in.js' ),
  t60:      require( './t60.js'),
  mtof:     require( './mtof.js'),
  ltp:      require( './ltp.js'),        // TODO: test
  gtp:      require( './gtp.js'),        // TODO: test
  switch:   require( './switch.js' ),
  mstosamps:require( './mstosamps.js' ), // TODO: needs test,
  selector: require( './selector.js' ),
  utilities:require( './utilities.js' ),
  pow:      require( './pow.js' ),
  attack:   require( './attack.js' ),
  decay:    require( './decay.js' ),
  windows:  require( './windows.js' ),
  env:      require( './env.js' ),
  ad:       require( './ad.js'  ),
  adsr:     require( './adsr.js' ),
  ifelse:   require( './ifelseif.js' ),
  bang:     require( './bang.js' ),
  and:      require( './and.js' ),
  pan:      require( './pan.js' ),
  eq:       require( './eq.js' ),
  neq:      require( './neq.js' ),
  exp:      require( './exp.js' ),
  process:  require( './process.js' ),
  seq:      require( './seq.js' )
}

library.gen.lib = library

module.exports = library

},{"./abs.js":76,"./accum.js":77,"./acos.js":78,"./ad.js":79,"./add.js":80,"./adsr.js":81,"./and.js":82,"./asin.js":83,"./atan.js":84,"./attack.js":85,"./bang.js":86,"./bool.js":87,"./ceil.js":88,"./clamp.js":89,"./cos.js":90,"./counter.js":91,"./cycle.js":92,"./data.js":93,"./dcblock.js":94,"./decay.js":95,"./delay.js":96,"./delta.js":97,"./div.js":98,"./env.js":99,"./eq.js":100,"./exp.js":101,"./floor.js":104,"./fold.js":105,"./gate.js":106,"./gen.js":107,"./gt.js":108,"./gte.js":109,"./gtp.js":110,"./history.js":111,"./ifelseif.js":112,"./in.js":113,"./lt.js":115,"./lte.js":116,"./ltp.js":117,"./max.js":118,"./memo.js":119,"./min.js":120,"./mix.js":121,"./mod.js":122,"./mstosamps.js":123,"./mtof.js":124,"./mul.js":125,"./neq.js":126,"./noise.js":127,"./not.js":128,"./pan.js":129,"./param.js":130,"./peek.js":131,"./phasor.js":132,"./poke.js":133,"./pow.js":134,"./process.js":135,"./rate.js":136,"./round.js":137,"./sah.js":138,"./selector.js":139,"./seq.js":140,"./sign.js":141,"./sin.js":142,"./slide.js":143,"./sub.js":144,"./switch.js":145,"./t60.js":146,"./tan.js":147,"./tanh.js":148,"./train.js":149,"./utilities.js":150,"./windows.js":151,"./wrap.js":152}],115:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  basename:'lt',

  gen() {
    let out,
        inputs = gen.getInputs( this )

    out = `  var ${this.name} = `  

    if( isNaN( this.inputs[0] ) || isNaN( this.inputs[1] ) ) {
      out += `(( ${inputs[0]} < ${inputs[1]}) | 0  )`
    } else {
      out += inputs[0] < inputs[1] ? 1 : 0 
    }
    out += '\n'

    gen.memo[ this.name ] = this.name

    return [this.name, out]
    
    return out
  }
}

module.exports = (x,y) => {
  let lt = Object.create( proto )

  lt.inputs = [ x,y ]
  lt.name = lt.basename + gen.getUID()

  return lt
}

},{"./gen.js":107}],116:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  name:'lte',

  gen() {
    let out,
        inputs = gen.getInputs( this )

    out = `  var ${this.name} = `  

    if( isNaN( this.inputs[0] ) || isNaN( this.inputs[1] ) ) {
      out += `( ${inputs[0]} <= ${inputs[1]} | 0  )`
    } else {
      out += inputs[0] <= inputs[1] ? 1 : 0 
    }
    out += '\n'

    gen.memo[ this.name ] = this.name

    return [this.name, out]
    
    return out
  }
}

module.exports = (x,y) => {
  let lt = Object.create( proto )

  lt.inputs = [ x,y ]
  lt.name = 'lte' + gen.getUID()

  return lt
}

},{"./gen.js":107}],117:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  name:'ltp',

  gen() {
    let out,
        inputs = gen.getInputs( this )

    if( isNaN( this.inputs[0] ) || isNaN( this.inputs[1] ) ) {
      out = `(${inputs[ 0 ]} * (( ${inputs[0]} < ${inputs[1]} ) | 0 ) )` 
    } else {
      out = inputs[0] * (( inputs[0] < inputs[1] ) | 0 )
    }
    
    return out
  }
}

module.exports = (x,y) => {
  let ltp = Object.create( proto )

  ltp.inputs = [ x,y ]

  return ltp
}

},{"./gen.js":107}],118:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  name:'max',

  gen() {
    let out,
        inputs = gen.getInputs( this )

    
    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet? '' : 'gen.'

    if( isNaN( inputs[0] ) || isNaN( inputs[1] ) ) {
      gen.closures.add({ [ this.name ]: isWorklet ? 'Math.max' : Math.max })

      out = `${ref}max( ${inputs[0]}, ${inputs[1]} )`

    } else {
      out = Math.max( parseFloat( inputs[0] ), parseFloat( inputs[1] ) )
    }
    
    return out
  }
}

module.exports = (x,y) => {
  let max = Object.create( proto )

  max.inputs = [ x,y ]

  return max
}

},{"./gen.js":107}],119:[function(require,module,exports){
'use strict'

let gen = require('./gen.js')

let proto = {
  basename:'memo',

  gen() {
    let out,
        inputs = gen.getInputs( this )
    
    out = `  var ${this.name} = ${inputs[0]}\n`

    gen.memo[ this.name ] = this.name

    return [ this.name, out ]
  } 
}

module.exports = (in1,memoName) => {
  let memo = Object.create( proto )
  
  memo.inputs = [ in1 ]
  memo.id   = gen.getUID()
  memo.name = memoName !== undefined ? memoName + '_' + gen.getUID() : `${memo.basename}${memo.id}`

  return memo
}

},{"./gen.js":107}],120:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  name:'min',

  gen() {
    let out,
        inputs = gen.getInputs( this )

    
    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet? '' : 'gen.'

    if( isNaN( inputs[0] ) || isNaN( inputs[1] ) ) {
      gen.closures.add({ [ this.name ]: isWorklet ? 'Math.min' : Math.min })

      out = `${ref}min( ${inputs[0]}, ${inputs[1]} )`

    } else {
      out = Math.min( parseFloat( inputs[0] ), parseFloat( inputs[1] ) )
    }
    
    return out
  }
}

module.exports = (x,y) => {
  let min = Object.create( proto )

  min.inputs = [ x,y ]

  return min
}

},{"./gen.js":107}],121:[function(require,module,exports){
'use strict'

let gen = require('./gen.js'),
    add = require('./add.js'),
    mul = require('./mul.js'),
    sub = require('./sub.js'),
    memo= require('./memo.js')

module.exports = ( in1, in2, t=.5 ) => {
  let ugen = memo( add( mul(in1, sub(1,t ) ), mul( in2, t ) ) )
  ugen.name = 'mix' + gen.getUID()

  return ugen
}

},{"./add.js":80,"./gen.js":107,"./memo.js":119,"./mul.js":125,"./sub.js":144}],122:[function(require,module,exports){
'use strict'

let gen = require('./gen.js')

module.exports = (...args) => {
  let mod = {
    id:     gen.getUID(),
    inputs: args,

    gen() {
      let inputs = gen.getInputs( this ),
          out='(',
          diff = 0, 
          numCount = 0,
          lastNumber = inputs[ 0 ],
          lastNumberIsUgen = isNaN( lastNumber ), 
          modAtEnd = false

      inputs.forEach( (v,i) => {
        if( i === 0 ) return

        let isNumberUgen = isNaN( v ),
            isFinalIdx   = i === inputs.length - 1

        if( !lastNumberIsUgen && !isNumberUgen ) {
          lastNumber = lastNumber % v
          out += lastNumber
        }else{
          out += `${lastNumber} % ${v}`
        }

        if( !isFinalIdx ) out += ' % ' 
      })

      out += ')'

      return out
    }
  }
  
  return mod
}

},{"./gen.js":107}],123:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  basename:'mstosamps',

  gen() {
    let out,
        inputs = gen.getInputs( this ),
        returnValue

    if( isNaN( inputs[0] ) ) {
      out = `  var ${this.name } = ${gen.samplerate} / 1000 * ${inputs[0]} \n\n`
     
      gen.memo[ this.name ] = out
      
      returnValue = [ this.name, out ]
    } else {
      out = gen.samplerate / 1000 * this.inputs[0]

      returnValue = out
    }    

    return returnValue
  }
}

module.exports = x => {
  let mstosamps = Object.create( proto )

  mstosamps.inputs = [ x ]
  mstosamps.name = proto.basename + gen.getUID()

  return mstosamps
}

},{"./gen.js":107}],124:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  name:'mtof',

  gen() {
    let out,
        inputs = gen.getInputs( this )

    if( isNaN( inputs[0] ) ) {
      gen.closures.add({ [ this.name ]: Math.exp })

      out = `( ${this.tuning} * gen.exp( .057762265 * (${inputs[0]} - 69) ) )`

    } else {
      out = this.tuning * Math.exp( .057762265 * ( inputs[0] - 69) )
    }
    
    return out
  }
}

module.exports = ( x, props ) => {
  let ugen = Object.create( proto ),
      defaults = { tuning:440 }
  
  if( props !== undefined ) Object.assign( props.defaults )

  Object.assign( ugen, defaults )
  ugen.inputs = [ x ]
  

  return ugen
}

},{"./gen.js":107}],125:[function(require,module,exports){
'use strict'

const gen = require('./gen.js')

const proto = {
  basename: 'mul',

  gen() {
    let inputs = gen.getInputs( this ),
        out = `  var ${this.name} = `,
        sum = 1, numCount = 0, mulAtEnd = false, alreadyFullSummed = true

    inputs.forEach( (v,i) => {
      if( isNaN( v ) ) {
        out += v
        if( i < inputs.length -1 ) {
          mulAtEnd = true
          out += ' * '
        }
        alreadyFullSummed = false
      }else{
        if( i === 0 ) {
          sum = v
        }else{
          sum *= parseFloat( v )
        }
        numCount++
      }
    })

    if( numCount > 0 ) {
      out += mulAtEnd || alreadyFullSummed ? sum : ' * ' + sum
    }

    out += '\n'

    gen.memo[ this.name ] = this.name

    return [ this.name, out ]
  }
}

module.exports = ( ...args ) => {
  const mul = Object.create( proto )
  
  Object.assign( mul, {
      id:     gen.getUID(),
      inputs: args,
  })
  
  mul.name = mul.basename + mul.id

  return mul
}

},{"./gen.js":107}],126:[function(require,module,exports){
'use strict'

let gen = require( './gen.js' )

let proto = {
  basename:'neq',

  gen() {
    let inputs = gen.getInputs( this ), out

    out = /*this.inputs[0] !== this.inputs[1] ? 1 :*/ `  var ${this.name} = (${inputs[0]} !== ${inputs[1]}) | 0\n\n`

    gen.memo[ this.name ] = this.name

    return [ this.name, out ]
  },

}

module.exports = ( in1, in2 ) => {
  let ugen = Object.create( proto )
  Object.assign( ugen, {
    uid:     gen.getUID(),
    inputs:  [ in1, in2 ],
  })
  
  ugen.name = `${ugen.basename}${ugen.uid}`

  return ugen
}

},{"./gen.js":107}],127:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  name:'noise',

  gen() {
    let out

    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet? '' : 'gen.'

    gen.closures.add({ 'noise' : isWorklet ? 'Math.random' : Math.random })

    out = `  var ${this.name} = ${ref}noise()\n`
    
    gen.memo[ this.name ] = this.name

    return [ this.name, out ]
  }
}

module.exports = x => {
  let noise = Object.create( proto )
  noise.name = proto.name + gen.getUID()

  return noise
}

},{"./gen.js":107}],128:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  name:'not',

  gen() {
    let out,
        inputs = gen.getInputs( this )

    if( isNaN( this.inputs[0] ) ) {
      out = `( ${inputs[0]} === 0 ? 1 : 0 )`
    } else {
      out = !inputs[0] === 0 ? 1 : 0
    }
    
    return out
  }
}

module.exports = x => {
  let not = Object.create( proto )

  not.inputs = [ x ]

  return not
}

},{"./gen.js":107}],129:[function(require,module,exports){
'use strict'

let gen = require( './gen.js' ),
    data = require( './data.js' ),
    peek = require( './peek.js' ),
    mul  = require( './mul.js' )

let proto = {
  basename:'pan', 
  initTable() {    
    let bufferL = new Float32Array( 1024 ),
        bufferR = new Float32Array( 1024 )

    const angToRad = Math.PI / 180
    for( let i = 0; i < 1024; i++ ) { 
      let pan = i * ( 90 / 1024 )
      bufferL[i] = Math.cos( pan * angToRad ) 
      bufferR[i] = Math.sin( pan * angToRad )
    }

    gen.globals.panL = data( bufferL, 1, { immutable:true })
    gen.globals.panR = data( bufferR, 1, { immutable:true })
  }

}

module.exports = ( leftInput, rightInput, pan =.5, properties ) => {
  if( gen.globals.panL === undefined ) proto.initTable()

  let ugen = Object.create( proto )

  Object.assign( ugen, {
    uid:     gen.getUID(),
    inputs:  [ leftInput, rightInput ],
    left:    mul( leftInput, peek( gen.globals.panL, pan, { boundmode:'clamp' }) ),
    right:   mul( rightInput, peek( gen.globals.panR, pan, { boundmode:'clamp' }) )
  })
  
  ugen.name = `${ugen.basename}${ugen.uid}`

  return ugen
}

},{"./data.js":93,"./gen.js":107,"./mul.js":125,"./peek.js":131}],130:[function(require,module,exports){
'use strict'

let gen = require('./gen.js')

let proto = {
  basename: 'param',

  gen() {
    gen.requestMemory( this.memory )
    
    gen.params.add( this )

    const isWorklet = gen.mode === 'worklet'

    if( isWorklet ) gen.parameters.add( this.name )

    this.value = this.initialValue

    gen.memo[ this.name ] = isWorklet ? this.name : `memory[${this.memory.value.idx}]`

    return gen.memo[ this.name ]
  } 
}

module.exports = ( propName=0, value=0, min=0, max=1 ) => {
  let ugen = Object.create( proto )
  
  if( typeof propName !== 'string' ) {
    ugen.name = ugen.basename + gen.getUID()
    ugen.initialValue = propName
  }else{
    ugen.name = propName
    ugen.initialValue = value
  }

  ugen.min = min
  ugen.max = max
  ugen.defaultValue = ugen.initialValue

  // for storing worklet nodes once they're instantiated
  ugen.waapi = null

  ugen.isWorklet = gen.mode === 'worklet'

  Object.defineProperty( ugen, 'value', {
    get() {
      if( this.memory.value.idx !== null ) {
        return gen.memory.heap[ this.memory.value.idx ]
      }else{
        return this.initialValue
      }
    },
    set( v ) {
      if( this.memory.value.idx !== null ) {
        if( this.isWorklet && this.waapi !== null ) {
          this.waapi.value = v
        }else{
          gen.memory.heap[ this.memory.value.idx ] = v
        } 
      }
    }
  })

  ugen.memory = {
    value: { length:1, idx:null }
  }

  return ugen
}

},{"./gen.js":107}],131:[function(require,module,exports){

const gen  = require('./gen.js'),
      dataUgen = require('./data.js')

let proto = {
  basename:'peek',

  gen() {
    let genName = 'gen.' + this.name,
        inputs = gen.getInputs( this ),
        out, functionBody, next, lengthIsLog2, idx
    
    idx = inputs[1]
    lengthIsLog2 = (Math.log2( this.data.buffer.length ) | 0)  === Math.log2( this.data.buffer.length )

    if( this.mode !== 'simple' ) {

    functionBody = `  var ${this.name}_dataIdx  = ${idx}, 
      ${this.name}_phase = ${this.mode === 'samples' ? inputs[0] : inputs[0] + ' * ' + (this.data.buffer.length) }, 
      ${this.name}_index = ${this.name}_phase | 0,\n`

    if( this.boundmode === 'wrap' ) {
      next = lengthIsLog2 ?
      `( ${this.name}_index + 1 ) & (${this.data.buffer.length} - 1)` :
      `${this.name}_index + 1 >= ${this.data.buffer.length} ? ${this.name}_index + 1 - ${this.data.buffer.length} : ${this.name}_index + 1`
    }else if( this.boundmode === 'clamp' ) {
      next = 
        `${this.name}_index + 1 >= ${this.data.buffer.length - 1} ? ${this.data.buffer.length - 1} : ${this.name}_index + 1`
    } else if( this.boundmode === 'fold' || this.boundmode === 'mirror' ) {
      next = 
        `${this.name}_index + 1 >= ${this.data.buffer.length - 1} ? ${this.name}_index - ${this.data.buffer.length - 1} : ${this.name}_index + 1`
    }else{
       next = 
      `${this.name}_index + 1`     
    }

    if( this.interp === 'linear' ) {      
    functionBody += `      ${this.name}_frac  = ${this.name}_phase - ${this.name}_index,
      ${this.name}_base  = memory[ ${this.name}_dataIdx +  ${this.name}_index ],
      ${this.name}_next  = ${next},`
      
      if( this.boundmode === 'ignore' ) {
        functionBody += `
      ${this.name}_out   = ${this.name}_index >= ${this.data.buffer.length - 1} || ${this.name}_index < 0 ? 0 : ${this.name}_base + ${this.name}_frac * ( memory[ ${this.name}_dataIdx + ${this.name}_next ] - ${this.name}_base )\n\n`
      }else{
        functionBody += `
      ${this.name}_out   = ${this.name}_base + ${this.name}_frac * ( memory[ ${this.name}_dataIdx + ${this.name}_next ] - ${this.name}_base )\n\n`
      }
    }else{
      functionBody += `      ${this.name}_out = memory[ ${this.name}_dataIdx + ${this.name}_index ]\n\n`
    }

    } else { // mode is simple
      functionBody = `memory[ ${idx} + ${ inputs[0] } ]`
      
      return functionBody
    }

    gen.memo[ this.name ] = this.name + '_out'

    return [ this.name+'_out', functionBody ]
  },

  defaults : { channels:1, mode:'phase', interp:'linear', boundmode:'wrap' }
}

module.exports = ( input_data, index=0, properties ) => {
  let ugen = Object.create( proto )

  //console.log( dataUgen, gen.data )

  // XXX why is dataUgen not the actual function? some type of browserify nonsense...
  const finalData = typeof input_data.basename === 'undefined' ? gen.lib.data( input_data ) : input_data

  Object.assign( ugen, 
    { 
      'data':     finalData,
      dataName:   finalData.name,
      uid:        gen.getUID(),
      inputs:     [ index, finalData ],
    },
    proto.defaults,
    properties 
  )
  
  ugen.name = ugen.basename + ugen.uid

  return ugen
}


},{"./data.js":93,"./gen.js":107}],132:[function(require,module,exports){
'use strict'

let gen   = require( './gen.js' ),
    accum = require( './accum.js' ),
    mul   = require( './mul.js' ),
    proto = { basename:'phasor' },
    div   = require( './div.js' )

const defaults = { min: -1, max: 1 }

module.exports = ( frequency = 1, reset = 0, _props ) => {
  const props = Object.assign( {}, defaults, _props )

  const range = props.max - props.min

  const ugen = typeof frequency === 'number' 
    ? accum( (frequency * range) / gen.samplerate, reset, props ) 
    : accum( 
        div( 
          mul( frequency, range ),
          gen.samplerate
        ), 
        reset, props 
    )

  ugen.name = proto.basename + gen.getUID()

  return ugen
}

},{"./accum.js":77,"./div.js":98,"./gen.js":107,"./mul.js":125}],133:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js'),
    mul  = require('./mul.js'),
    wrap = require('./wrap.js')

let proto = {
  basename:'poke',

  gen() {
    let dataName = 'memory',
        inputs = gen.getInputs( this ),
        idx, out, wrapped
    
    idx = this.data.gen()

    //gen.requestMemory( this.memory )
    //wrapped = wrap( this.inputs[1], 0, this.dataLength ).gen()
    //idx = wrapped[0]
    //gen.functionBody += wrapped[1]
    let outputStr = this.inputs[1] === 0 ?
      `  ${dataName}[ ${idx} ] = ${inputs[0]}\n` :
      `  ${dataName}[ ${idx} + ${inputs[1]} ] = ${inputs[0]}\n`

    if( this.inline === undefined ) {
      gen.functionBody += outputStr
    }else{
      return [ this.inline, outputStr ]
    }
  }
}
module.exports = ( data, value, index, properties ) => {
  let ugen = Object.create( proto ),
      defaults = { channels:1 } 

  if( properties !== undefined ) Object.assign( defaults, properties )

  Object.assign( ugen, { 
    data,
    dataName:   data.name,
    dataLength: data.buffer.length,
    uid:        gen.getUID(),
    inputs:     [ value, index ],
  },
  defaults )


  ugen.name = ugen.basename + ugen.uid
  
  gen.histories.set( ugen.name, ugen )

  return ugen
}

},{"./gen.js":107,"./mul.js":125,"./wrap.js":152}],134:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  basename:'pow',

  gen() {
    let out,
        inputs = gen.getInputs( this )
    
    
    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet? '' : 'gen.'

    if( isNaN( inputs[0] ) || isNaN( inputs[1] ) ) {
      gen.closures.add({ 'pow': isWorklet ? 'Math.pow' : Math.pow })

      out = `${ref}pow( ${inputs[0]}, ${inputs[1]} )` 

    } else {
      if( typeof inputs[0] === 'string' && inputs[0][0] === '(' ) {
        inputs[0] = inputs[0].slice(1,-1)
      }
      if( typeof inputs[1] === 'string' && inputs[1][0] === '(' ) {
        inputs[1] = inputs[1].slice(1,-1)
      }

      out = Math.pow( parseFloat( inputs[0] ), parseFloat( inputs[1]) )
    }
    
    return out
  }
}

module.exports = (x,y) => {
  let pow = Object.create( proto )

  pow.inputs = [ x,y ]
  pow.id = gen.getUID()
  pow.name = `${pow.basename}{pow.id}`

  return pow
}

},{"./gen.js":107}],135:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')
const proto = {
  basename:'process',

  gen() {
    let out,
        inputs = gen.getInputs( this )

    gen.closures.add({ [''+this.funcname] : this.func })

    out = `  var ${this.name} = gen['${this.funcname}'](`

    inputs.forEach( (v,i,arr ) => {
      out += arr[ i ]
      if( i < arr.length - 1 ) out += ','
    })

    out += ')\n'

    gen.memo[ this.name ] = this.name

    return [this.name, out]
    
    return out
  }
}

module.exports = (...args) => {
  const process = {}// Object.create( proto )
  const id = gen.getUID()
  process.name = 'process' + id 

  process.func = new Function( ...args )

  //gen.globals[ process.name ] = process.func

  process.call = function( ...args  ) {
    const output = Object.create( proto )
    output.funcname = process.name
    output.func = process.func
    output.name = 'process_out_' + id
    output.process = process

    output.inputs = args

    return output
  }

  return process 
}

},{"./gen.js":107}],136:[function(require,module,exports){
'use strict'

let gen     = require( './gen.js' ),
    history = require( './history.js' ),
    sub     = require( './sub.js' ),
    add     = require( './add.js' ),
    mul     = require( './mul.js' ),
    memo    = require( './memo.js' ),
    delta   = require( './delta.js' ),
    wrap    = require( './wrap.js' )

let proto = {
  basename:'rate',

  gen() {
    let inputs = gen.getInputs( this ),
        phase  = history(),
        inMinus1 = history(),
        genName = 'gen.' + this.name,
        filter, sum, out

    gen.closures.add({ [ this.name ]: this }) 

    out = 
` var ${this.name}_diff = ${inputs[0]} - ${genName}.lastSample
  if( ${this.name}_diff < -.5 ) ${this.name}_diff += 1
  ${genName}.phase += ${this.name}_diff * ${inputs[1]}
  if( ${genName}.phase > 1 ) ${genName}.phase -= 1
  ${genName}.lastSample = ${inputs[0]}
`
    out = ' ' + out

    return [ genName + '.phase', out ]
  }
}

module.exports = ( in1, rate ) => {
  let ugen = Object.create( proto )

  Object.assign( ugen, { 
    phase:      0,
    lastSample: 0,
    uid:        gen.getUID(),
    inputs:     [ in1, rate ],
  })
  
  ugen.name = `${ugen.basename}${ugen.uid}`

  return ugen
}

},{"./add.js":80,"./delta.js":97,"./gen.js":107,"./history.js":111,"./memo.js":119,"./mul.js":125,"./sub.js":144,"./wrap.js":152}],137:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  name:'round',

  gen() {
    let out,
        inputs = gen.getInputs( this )

    
    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet? '' : 'gen.'

    if( isNaN( inputs[0] ) ) {
      gen.closures.add({ [ this.name ]: isWorklet ? 'Math.round' : Math.round })

      out = `${ref}round( ${inputs[0]} )`

    } else {
      out = Math.round( parseFloat( inputs[0] ) )
    }
    
    return out
  }
}

module.exports = x => {
  let round = Object.create( proto )

  round.inputs = [ x ]

  return round
}

},{"./gen.js":107}],138:[function(require,module,exports){
'use strict'

let gen     = require( './gen.js' )

let proto = {
  basename:'sah',

  gen() {
    let inputs = gen.getInputs( this ), out

    //gen.data[ this.name ] = 0
    //gen.data[ this.name + '_control' ] = 0

    gen.requestMemory( this.memory )


    out = 
` var ${this.name}_control = memory[${this.memory.control.idx}],
      ${this.name}_trigger = ${inputs[1]} > ${inputs[2]} ? 1 : 0

  if( ${this.name}_trigger !== ${this.name}_control  ) {
    if( ${this.name}_trigger === 1 ) 
      memory[${this.memory.value.idx}] = ${inputs[0]}
    
    memory[${this.memory.control.idx}] = ${this.name}_trigger
  }
`
    
    gen.memo[ this.name ] = `memory[${this.memory.value.idx}]`//`gen.data.${this.name}`

    return [ `memory[${this.memory.value.idx}]`, ' ' +out ]
  }
}

module.exports = ( in1, control, threshold=0, properties ) => {
  let ugen = Object.create( proto ),
      defaults = { init:0 }

  if( properties !== undefined ) Object.assign( defaults, properties )

  Object.assign( ugen, { 
    lastSample: 0,
    uid:        gen.getUID(),
    inputs:     [ in1, control,threshold ],
    memory: {
      control: { idx:null, length:1 },
      value:   { idx:null, length:1 },
    }
  },
  defaults )
  
  ugen.name = `${ugen.basename}${ugen.uid}`

  return ugen
}

},{"./gen.js":107}],139:[function(require,module,exports){
'use strict'

let gen = require( './gen.js' )

let proto = {
  basename:'selector',

  gen() {
    let inputs = gen.getInputs( this ), out, returnValue = 0
    
    switch( inputs.length ) {
      case 2 :
        returnValue = inputs[1]
        break;
      case 3 :
        out = `  var ${this.name}_out = ${inputs[0]} === 1 ? ${inputs[1]} : ${inputs[2]}\n\n`;
        returnValue = [ this.name + '_out', out ]
        break;  
      default:
        out = 
` var ${this.name}_out = 0
  switch( ${inputs[0]} + 1 ) {\n`

        for( let i = 1; i < inputs.length; i++ ){
          out +=`    case ${i}: ${this.name}_out = ${inputs[i]}; break;\n` 
        }

        out += '  }\n\n'
        
        returnValue = [ this.name + '_out', ' ' + out ]
    }

    gen.memo[ this.name ] = this.name + '_out'

    return returnValue
  },
}

module.exports = ( ...inputs ) => {
  let ugen = Object.create( proto )
  
  Object.assign( ugen, {
    uid:     gen.getUID(),
    inputs
  })
  
  ugen.name = `${ugen.basename}${ugen.uid}`

  return ugen
}

},{"./gen.js":107}],140:[function(require,module,exports){
'use strict'

let gen   = require( './gen.js' ),
    accum = require( './accum.js' ),
    counter= require( './counter.js' ),
    peek  = require( './peek.js' ),
    ssd   = require( './history.js' ),
    data  = require( './data.js' ),
    proto = { basename:'seq' }

module.exports = ( durations = 11025, values = [0,1], phaseIncrement = 1) => {
  let clock
  
  if( Array.isArray( durations ) ) {
    // we want a counter that is using our current
    // rate value, but we want the rate value to be derived from
    // the counter. must insert a single-sample dealy to avoid
    // infinite loop.
    const clock2 = counter( 0, 0, durations.length )
    const __durations = peek( data( durations ), clock2, { mode:'simple' }) 
    clock = counter( phaseIncrement, 0, __durations )
    
    // add one sample delay to avoid codegen loop
    const s = ssd()
    s.in( clock.wrap )
    clock2.inputs[0] = s.out
  }else{
    // if the rate argument is a single value we don't need to
    // do anything tricky.
    clock = counter( phaseIncrement, 0, durations )
  }
  
  const stepper = accum( clock.wrap, 0, { min:0, max:values.length })
   
  const ugen = peek( data( values ), stepper, { mode:'simple' })

  ugen.name = proto.basename + gen.getUID()
  ugen.trigger = clock.wrap

  return ugen
}

},{"./accum.js":77,"./counter.js":91,"./data.js":93,"./gen.js":107,"./history.js":111,"./peek.js":131}],141:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  name:'sign',

  gen() {
    let out,
        inputs = gen.getInputs( this )

    
    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet? '' : 'gen.'

    if( isNaN( inputs[0] ) ) {
      gen.closures.add({ [ this.name ]: isWorklet ? 'Math.sign' : Math.sign })

      out = `${ref}sign( ${inputs[0]} )`

    } else {
      out = Math.sign( parseFloat( inputs[0] ) )
    }
    
    return out
  }
}

module.exports = x => {
  let sign = Object.create( proto )

  sign.inputs = [ x ]

  return sign
}

},{"./gen.js":107}],142:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  basename:'sin',

  gen() {
    let out,
        inputs = gen.getInputs( this )
    
    
    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet? '' : 'gen.'

    if( isNaN( inputs[0] ) ) {
      gen.closures.add({ 'sin': isWorklet ? 'Math.sin' : Math.sin })

      out = `${ref}sin( ${inputs[0]} )` 

    } else {
      out = Math.sin( parseFloat( inputs[0] ) )
    }
    
    return out
  }
}

module.exports = x => {
  let sin = Object.create( proto )

  sin.inputs = [ x ]
  sin.id = gen.getUID()
  sin.name = `${sin.basename}{sin.id}`

  return sin
}

},{"./gen.js":107}],143:[function(require,module,exports){
'use strict'

let gen     = require( './gen.js' ),
    history = require( './history.js' ),
    sub     = require( './sub.js' ),
    add     = require( './add.js' ),
    mul     = require( './mul.js' ),
    memo    = require( './memo.js' ),
    gt      = require( './gt.js' ),
    div     = require( './div.js' ),
    _switch = require( './switch.js' )

module.exports = ( in1, slideUp = 1, slideDown = 1 ) => {
  let y1 = history(0),
      filter, slideAmount

  //y (n) = y (n-1) + ((x (n) - y (n-1))/slide) 
  slideAmount = _switch( gt(in1,y1.out), slideUp, slideDown )

  filter = memo( add( y1.out, div( sub( in1, y1.out ), slideAmount ) ) )

  y1.in( filter )

  return filter
}

},{"./add.js":80,"./div.js":98,"./gen.js":107,"./gt.js":108,"./history.js":111,"./memo.js":119,"./mul.js":125,"./sub.js":144,"./switch.js":145}],144:[function(require,module,exports){
'use strict'

const gen = require('./gen.js')

const proto = {
  basename:'sub',
  gen() {
    let inputs = gen.getInputs( this ),
        out=0,
        diff = 0,
        needsParens = false, 
        numCount = 0,
        lastNumber = inputs[ 0 ],
        lastNumberIsUgen = isNaN( lastNumber ), 
        subAtEnd = false,
        hasUgens = false,
        returnValue = 0

    this.inputs.forEach( value => { if( isNaN( value ) ) hasUgens = true })

    out = '  var ' + this.name + ' = '

    inputs.forEach( (v,i) => {
      if( i === 0 ) return

      let isNumberUgen = isNaN( v ),
          isFinalIdx   = i === inputs.length - 1

      if( !lastNumberIsUgen && !isNumberUgen ) {
        lastNumber = lastNumber - v
        out += lastNumber
        return
      }else{
        needsParens = true
        out += `${lastNumber} - ${v}`
      }

      if( !isFinalIdx ) out += ' - ' 
    })

    out += '\n'

    returnValue = [ this.name, out ]

    gen.memo[ this.name ] = this.name

    return returnValue
  }

}

module.exports = ( ...args ) => {
  let sub = Object.create( proto )

  Object.assign( sub, {
    id:     gen.getUID(),
    inputs: args
  })
       
  sub.name = 'sub' + sub.id

  return sub
}

},{"./gen.js":107}],145:[function(require,module,exports){
'use strict'

let gen = require( './gen.js' )

let proto = {
  basename:'switch',

  gen() {
    let inputs = gen.getInputs( this ), out

    if( inputs[1] === inputs[2] ) return inputs[1] // if both potential outputs are the same just return one of them
    
    out = `  var ${this.name}_out = ${inputs[0]} === 1 ? ${inputs[1]} : ${inputs[2]}\n`

    gen.memo[ this.name ] = `${this.name}_out`

    return [ `${this.name}_out`, out ]
  },

}

module.exports = ( control, in1 = 1, in2 = 0 ) => {
  let ugen = Object.create( proto )
  Object.assign( ugen, {
    uid:     gen.getUID(),
    inputs:  [ control, in1, in2 ],
  })
  
  ugen.name = `${ugen.basename}${ugen.uid}`

  return ugen
}

},{"./gen.js":107}],146:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  basename:'t60',

  gen() {
    let out,
        inputs = gen.getInputs( this ),
        returnValue

    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet? '' : 'gen.'

    if( isNaN( inputs[0] ) ) {
      gen.closures.add({ [ 'exp' ]: isWorklet ? 'Math.exp' : Math.exp })

      out = `  var ${this.name} = ${ref}exp( -6.907755278921 / ${inputs[0]} )\n\n`
     
      gen.memo[ this.name ] = out
      
      returnValue = [ this.name, out ]
    } else {
      out = Math.exp( -6.907755278921 / inputs[0] )

      returnValue = out
    }    

    return returnValue
  }
}

module.exports = x => {
  let t60 = Object.create( proto )

  t60.inputs = [ x ]
  t60.name = proto.basename + gen.getUID()

  return t60
}

},{"./gen.js":107}],147:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  basename:'tan',

  gen() {
    let out,
        inputs = gen.getInputs( this )
    
    
    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet? '' : 'gen.'

    if( isNaN( inputs[0] ) ) {
      gen.closures.add({ 'tan': isWorklet ? 'Math.tan' : Math.tan })

      out = `${ref}tan( ${inputs[0]} )` 

    } else {
      out = Math.tan( parseFloat( inputs[0] ) )
    }
    
    return out
  }
}

module.exports = x => {
  let tan = Object.create( proto )

  tan.inputs = [ x ]
  tan.id = gen.getUID()
  tan.name = `${tan.basename}{tan.id}`

  return tan
}

},{"./gen.js":107}],148:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js')

let proto = {
  basename:'tanh',

  gen() {
    let out,
        inputs = gen.getInputs( this )
    
    
    const isWorklet = gen.mode === 'worklet'
    const ref = isWorklet? '' : 'gen.'

    if( isNaN( inputs[0] ) ) {
      gen.closures.add({ 'tanh': isWorklet ? 'Math.tan' : Math.tanh })

      out = `${ref}tanh( ${inputs[0]} )` 

    } else {
      out = Math.tanh( parseFloat( inputs[0] ) )
    }
    
    return out
  }
}

module.exports = x => {
  let tanh = Object.create( proto )

  tanh.inputs = [ x ]
  tanh.id = gen.getUID()
  tanh.name = `${tanh.basename}{tanh.id}`

  return tanh
}

},{"./gen.js":107}],149:[function(require,module,exports){
'use strict'

let gen     = require( './gen.js' ),
    lt      = require( './lt.js' ),
    accum   = require( './accum.js' ),
    div     = require( './div.js' )

module.exports = ( frequency=440, pulsewidth=.5 ) => {
  let graph = lt( accum( div( frequency, 44100 ) ), pulsewidth )

  graph.name = `train${gen.getUID()}`

  return graph
}


},{"./accum.js":77,"./div.js":98,"./gen.js":107,"./lt.js":115}],150:[function(require,module,exports){
'use strict'

const AWPF = require( './external/audioworklet-polyfill.js' ),
      gen  = require( './gen.js' ),
      data = require( './data.js' )

let isStereo = false

const utilities = {
  ctx: null,
  buffers: {},
  isStereo:false,

  clear() {
    if( this.workletNode !== undefined ) {
      this.workletNode.disconnect()
    }else{
      this.callback = () => 0
    }
    this.clear.callbacks.forEach( v => v() )
    this.clear.callbacks.length = 0

    this.isStereo = false

    if( gen.graph !== null ) gen.free( gen.graph )
  },

  createContext( bufferSize = 2048 ) {
    const AC = typeof AudioContext === 'undefined' ? webkitAudioContext : AudioContext
    
    // tell polyfill global object and buffersize
    AWPF( window, bufferSize )

    const start = () => {
      if( typeof AC !== 'undefined' ) {
        this.ctx = new AC({ latencyHint:.0125 })

        gen.samplerate = this.ctx.sampleRate

        if( document && document.documentElement && 'ontouchstart' in document.documentElement ) {
          window.removeEventListener( 'touchstart', start )
        }else{
          window.removeEventListener( 'mousedown', start )
          window.removeEventListener( 'keydown', start )
        }

        const mySource = utilities.ctx.createBufferSource()
        mySource.connect( utilities.ctx.destination )
        mySource.start()
      }
    }

    if( document && document.documentElement && 'ontouchstart' in document.documentElement ) {
      window.addEventListener( 'touchstart', start )
    }else{
      window.addEventListener( 'mousedown', start )
      window.addEventListener( 'keydown', start )
    }

    return this
  },

  createScriptProcessor() {
    this.node = this.ctx.createScriptProcessor( 1024, 0, 2 )
    this.clearFunction = function() { return 0 }
    if( typeof this.callback === 'undefined' ) this.callback = this.clearFunction

    this.node.onaudioprocess = function( audioProcessingEvent ) {
      var outputBuffer = audioProcessingEvent.outputBuffer;

      var left = outputBuffer.getChannelData( 0 ),
          right= outputBuffer.getChannelData( 1 ),
          isStereo = utilities.isStereo

     for( var sample = 0; sample < left.length; sample++ ) {
        var out = utilities.callback()

        if( isStereo === false ) {
          left[ sample ] = right[ sample ] = out 
        }else{
          left[ sample  ] = out[0]
          right[ sample ] = out[1]
        }
      }
    }

    this.node.connect( this.ctx.destination )

    return this
  },

  // remove starting stuff and add tabs
  prettyPrintCallback( cb ) {
    // get rid of "function gen" and start with parenthesis
    // const shortendCB = cb.toString().slice(9)
    const cbSplit = cb.toString().split('\n')
    const cbTrim = cbSplit.slice( 3, -2 )
    const cbTabbed = cbTrim.map( v => '      ' + v ) 
    
    return cbTabbed.join('\n')
  },

  createParameterDescriptors( cb ) {
    // [{name: 'amplitude', defaultValue: 0.25, minValue: 0, maxValue: 1}];
    let paramStr = ''

    //for( let ugen of cb.params.values() ) {
    //  paramStr += `{ name:'${ugen.name}', defaultValue:${ugen.value}, minValue:${ugen.min}, maxValue:${ugen.max} },\n      `
    //}
    for( let ugen of cb.params.values() ) {
      paramStr += `{ name:'${ugen.name}', automationRate:'k-rate', defaultValue:${ugen.defaultValue}, minValue:${ugen.min}, maxValue:${ugen.max} },\n      `
    }
    return paramStr
  },

  createParameterDereferences( cb ) {
    let str = cb.params.size > 0 ? '\n      ' : ''
    for( let ugen of cb.params.values() ) {
      str += `const ${ugen.name} = parameters.${ugen.name}[0]\n      `
    }

    return str
  },

  createParameterArguments( cb ) {
    let  paramList = ''
    for( let ugen of cb.params.values() ) {
      paramList += ugen.name + '[i],'
    }
    paramList = paramList.slice( 0, -1 )

    return paramList
  },

  createInputDereferences( cb ) {
    let str = cb.inputs.size > 0 ? '\n' : ''
    for( let input of  cb.inputs.values() ) {
      str += `const ${input.name} = inputs[ ${input.inputNumber} ][ ${input.channelNumber} ]\n      `
    }

    return str
  },


  createInputArguments( cb ) {
    let  paramList = ''
    for( let input of cb.inputs.values() ) {
      paramList += input.name + '[i],'
    }
    paramList = paramList.slice( 0, -1 )

    return paramList
  },
      
  createFunctionDereferences( cb ) {
    let memberString = cb.members.size > 0 ? '\n' : ''
    let memo = {}
    for( let dict of cb.members.values() ) {
      const name = Object.keys( dict )[0],
            value = dict[ name ]

      if( memo[ name ] !== undefined ) continue
      memo[ name ] = true

      memberString += `      const ${name} = ${value}\n`
    }

    return memberString
  },

  createWorkletProcessor( graph, name, debug, mem=44100*10 ) {
    //const mem = MemoryHelper.create( 4096, Float64Array )
    const cb = gen.createCallback( graph, mem, debug )
    const inputs = cb.inputs

    // get all inputs and create appropriate audioparam initializers
    const parameterDescriptors = this.createParameterDescriptors( cb )
    const parameterDereferences = this.createParameterDereferences( cb )
    const paramList = this.createParameterArguments( cb )
    const inputDereferences = this.createInputDereferences( cb )
    const inputList = this.createInputArguments( cb )   
    const memberString = this.createFunctionDereferences( cb )

    // change output based on number of channels.
    const genishOutputLine = cb.isStereo === false
      ? `left[ i ] = memory[0]`
      : `left[ i ] = memory[0];\n\t\tright[ i ] = memory[1]\n`

    const prettyCallback = this.prettyPrintCallback( cb )

    /***** begin callback code ****/
    // note that we have to check to see that memory has been passed
    // to the worker before running the callback function, otherwise
    // it can be passed too slowly and fail on occassion

    const workletCode = `
class ${name}Processor extends AudioWorkletProcessor {

  static get parameterDescriptors() {
    const params = [
      ${ parameterDescriptors }      
    ]
    return params
  }
 
  constructor( options ) {
    super( options )
    this.port.onmessage = this.handleMessage.bind( this )
    this.initialized = false
  }

  handleMessage( event ) {
    if( event.data.key === 'init' ) {
      this.memory = event.data.memory
      this.initialized = true
    }else if( event.data.key === 'set' ) {
      this.memory[ event.data.idx ] = event.data.value
    }else if( event.data.key === 'get' ) {
      this.port.postMessage({ key:'return', idx:event.data.idx, value:this.memory[event.data.idx] })     
    }
  }

  process( inputs, outputs, parameters ) {
    if( this.initialized === true ) {
      const output = outputs[0]
      const left   = output[ 0 ]
      const right  = output[ 1 ]
      const len    = left.length
      const memory = this.memory ${parameterDereferences}${inputDereferences}${memberString}

      for( let i = 0; i < len; ++i ) {
        ${prettyCallback}
        ${genishOutputLine}
      }
    }
    return true
  }
}
    
registerProcessor( '${name}', ${name}Processor)`

    
    /***** end callback code *****/


    if( debug === true ) console.log( workletCode )

    const url = window.URL.createObjectURL(
      new Blob(
        [ workletCode ], 
        { type: 'text/javascript' }
      )
    )

    return [ url, workletCode, inputs, cb.params, cb.isStereo ] 
  },

  registeredForNodeAssignment: [],
  register( ugen ) {
    if( this.registeredForNodeAssignment.indexOf( ugen ) === -1 ) {
      this.registeredForNodeAssignment.push( ugen )
    }
  },

  playWorklet( graph, name, debug=false, mem=44100 * 60 ) {
    utilities.clear()

    const [ url, codeString, inputs, params, isStereo ] = utilities.createWorkletProcessor( graph, name, debug, mem )

    const nodePromise = new Promise( (resolve,reject) => {
   
      utilities.ctx.audioWorklet.addModule( url ).then( ()=> {
        const workletNode = new AudioWorkletNode( utilities.ctx, name, { outputChannelCount:[ isStereo ? 2 : 1 ] })

        workletNode.callbacks = {}
        workletNode.onmessage = function( event ) {
          if( event.data.message === 'return' ) {
            workletNode.callbacks[ event.data.idx ]( event.data.value )
            delete workletNode.callbacks[ event.data.idx ]
          }
        }

        workletNode.getMemoryValue = function( idx, cb ) {
          this.workletCallbacks[ idx ] = cb
          this.workletNode.port.postMessage({ key:'get', idx: idx })
        }
        
        workletNode.port.postMessage({ key:'init', memory:gen.memory.heap })
        utilities.workletNode = workletNode

        utilities.registeredForNodeAssignment.forEach( ugen => ugen.node = workletNode )
        utilities.registeredForNodeAssignment.length = 0

        // assign all params as properties of node for easier reference 
        for( let dict of inputs.values() ) {
          const name = Object.keys( dict )[0]
          const param = workletNode.parameters.get( name )
      
          Object.defineProperty( workletNode, name, {
            set( v ) {
              param.value = v
            },
            get() {
              return param.value
            }
          })
        }

        for( let ugen of params.values() ) {
          const name = ugen.name
          const param = workletNode.parameters.get( name )
          ugen.waapi = param 
          // initialize?
          param.value = ugen.defaultValue

          Object.defineProperty( workletNode, name, {
            set( v ) {
              param.value = v
            },
            get() {
              return param.value
            }
          })
        }

        if( utilities.console ) utilities.console.setValue( codeString )

        workletNode.connect( utilities.ctx.destination )

        resolve( workletNode )
      })

    })

    return nodePromise
  },
  
  playGraph( graph, debug, mem=44100*10, memType=Float32Array ) {
    utilities.clear()
    if( debug === undefined ) debug = false
          
    this.isStereo = Array.isArray( graph )

    utilities.callback = gen.createCallback( graph, mem, debug, false, memType )
    
    if( utilities.console ) utilities.console.setValue( utilities.callback.toString() )

    return utilities.callback
  },

  loadSample( soundFilePath, data ) {
    const isLoaded = utilities.buffers[ soundFilePath ] !== undefined

    let req = new XMLHttpRequest()
    req.open( 'GET', soundFilePath, true )
    req.responseType = 'arraybuffer' 
    
    let promise = new Promise( (resolve,reject) => {
      if( !isLoaded ) {
        req.onload = function() {
          var audioData = req.response

          utilities.ctx.decodeAudioData( audioData, (buffer) => {
            data.buffer = buffer.getChannelData(0)
            utilities.buffers[ soundFilePath ] = data.buffer
            resolve( data.buffer )
          })
        }
      }else{
        setTimeout( ()=> resolve( utilities.buffers[ soundFilePath ] ), 0 )
      }
    })

    if( !isLoaded ) req.send()

    return promise
  }

}

utilities.clear.callbacks = []

module.exports = utilities

},{"./data.js":93,"./external/audioworklet-polyfill.js":102,"./gen.js":107}],151:[function(require,module,exports){
'use strict'

/*
 * many windows here adapted from https://github.com/corbanbrook/dsp.js/blob/master/dsp.js
 * starting at line 1427
 * taken 8/15/16
*/ 

const windows = module.exports = { 
  bartlett( length, index ) {
    return 2 / (length - 1) * ((length - 1) / 2 - Math.abs(index - (length - 1) / 2)) 
  },

  bartlettHann( length, index ) {
    return 0.62 - 0.48 * Math.abs(index / (length - 1) - 0.5) - 0.38 * Math.cos( 2 * Math.PI * index / (length - 1))
  },

  blackman( length, index, alpha ) {
    let a0 = (1 - alpha) / 2,
        a1 = 0.5,
        a2 = alpha / 2

    return a0 - a1 * Math.cos(2 * Math.PI * index / (length - 1)) + a2 * Math.cos(4 * Math.PI * index / (length - 1))
  },

  cosine( length, index ) {
    return Math.cos(Math.PI * index / (length - 1) - Math.PI / 2)
  },

  gauss( length, index, alpha ) {
    return Math.pow(Math.E, -0.5 * Math.pow((index - (length - 1) / 2) / (alpha * (length - 1) / 2), 2))
  },

  hamming( length, index ) {
    return 0.54 - 0.46 * Math.cos( Math.PI * 2 * index / (length - 1))
  },

  hann( length, index ) {
    return 0.5 * (1 - Math.cos( Math.PI * 2 * index / (length - 1)) )
  },

  lanczos( length, index ) {
    let x = 2 * index / (length - 1) - 1;
    return Math.sin(Math.PI * x) / (Math.PI * x)
  },

  rectangular( length, index ) {
    return 1
  },

  triangular( length, index ) {
    return 2 / length * (length / 2 - Math.abs(index - (length - 1) / 2))
  },

  // parabola
  welch( length, _index, ignore, shift=0 ) {
    //w[n] = 1 - Math.pow( ( n - ( (N-1) / 2 ) ) / (( N-1 ) / 2 ), 2 )
    const index = shift === 0 ? _index : (_index + Math.floor( shift * length )) % length
    const n_1_over2 = (length - 1) / 2 

    return 1 - Math.pow( ( index - n_1_over2 ) / n_1_over2, 2 )
  },
  inversewelch( length, _index, ignore, shift=0 ) {
    //w[n] = 1 - Math.pow( ( n - ( (N-1) / 2 ) ) / (( N-1 ) / 2 ), 2 )
    let index = shift === 0 ? _index : (_index + Math.floor( shift * length )) % length
    const n_1_over2 = (length - 1) / 2

    return Math.pow( ( index - n_1_over2 ) / n_1_over2, 2 )
  },

  parabola( length, index ) {
    if( index <= length / 2 ) {
      return windows.inversewelch( length / 2, index ) - 1
    }else{
      return 1 - windows.inversewelch( length / 2, index - length / 2 )
    }
  },

  exponential( length, index, alpha ) {
    return Math.pow( index / length, alpha )
  },

  linear( length, index ) {
    return index / length
  }
}

},{}],152:[function(require,module,exports){
'use strict'

let gen  = require('./gen.js'),
    floor= require('./floor.js'),
    sub  = require('./sub.js'),
    memo = require('./memo.js')

let proto = {
  basename:'wrap',

  gen() {
    let code,
        inputs = gen.getInputs( this ),
        signal = inputs[0], min = inputs[1], max = inputs[2],
        out, diff

    //out = `(((${inputs[0]} - ${this.min}) % ${diff}  + ${diff}) % ${diff} + ${this.min})`
    //const long numWraps = long((v-lo)/range) - (v < lo);
    //return v - range * double(numWraps);   
    
    if( this.min === 0 ) {
      diff = max
    }else if ( isNaN( max ) || isNaN( min ) ) {
      diff = `${max} - ${min}`
    }else{
      diff = max - min
    }

    out =
` var ${this.name} = ${inputs[0]}
  if( ${this.name} < ${this.min} ) ${this.name} += ${diff}
  else if( ${this.name} > ${this.max} ) ${this.name} -= ${diff}

`

    return [ this.name, ' ' + out ]
  },
}

module.exports = ( in1, min=0, max=1 ) => {
  let ugen = Object.create( proto )

  Object.assign( ugen, { 
    min, 
    max,
    uid:    gen.getUID(),
    inputs: [ in1, min, max ],
  })
  
  ugen.name = `${ugen.basename}${ugen.uid}`

  return ugen
}

},{"./floor.js":104,"./gen.js":107,"./memo.js":119,"./sub.js":144}],153:[function(require,module,exports){
'use strict';

var MemoryHelper = {
  create: function create() {
    var size = arguments.length <= 0 || arguments[0] === undefined ? 4096 : arguments[0];
    var memtype = arguments.length <= 1 || arguments[1] === undefined ? Float32Array : arguments[1];

    var helper = Object.create(this);

    Object.assign(helper, {
      heap: new memtype(size),
      list: {},
      freeList: {}
    });

    return helper;
  },
  alloc: function alloc(amount) {
    var idx = -1;

    if (amount > this.heap.length) {
      throw Error('Allocation request is larger than heap size of ' + this.heap.length);
    }

    for (var key in this.freeList) {
      var candidateSize = this.freeList[key];

      if (candidateSize >= amount) {
        idx = key;

        this.list[idx] = amount;

        if (candidateSize !== amount) {
          var newIndex = idx + amount,
              newFreeSize = void 0;

          for (var _key in this.list) {
            if (_key > newIndex) {
              newFreeSize = _key - newIndex;
              this.freeList[newIndex] = newFreeSize;
            }
          }
        }
        
        break;
      }
    }
    
    if( idx !== -1 ) delete this.freeList[ idx ]

    if (idx === -1) {
      var keys = Object.keys(this.list),
          lastIndex = void 0;

      if (keys.length) {
        // if not first allocation...
        lastIndex = parseInt(keys[keys.length - 1]);

        idx = lastIndex + this.list[lastIndex];
      } else {
        idx = 0;
      }

      this.list[idx] = amount;
    }

    if (idx + amount >= this.heap.length) {
      throw Error('No available blocks remain sufficient for allocation request.');
    }
    return idx;
  },
  free: function free(index) {
    if (typeof this.list[index] !== 'number') {
      throw Error('Calling free() on non-existing block.');
    }

    this.list[index] = 0;

    var size = 0;
    for (var key in this.list) {
      if (key > index) {
        size = key - index;
        break;
      }
    }

    this.freeList[index] = size;
  }
};

module.exports = MemoryHelper;

},{}],154:[function(require,module,exports){
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/

'use strict';

// Generate an internal UID to make the regexp pattern harder to guess.
var UID                 = Math.floor(Math.random() * 0x10000000000).toString(16);
var PLACE_HOLDER_REGEXP = new RegExp('"@__(F|R|D|M|S)-' + UID + '-(\\d+)__@"', 'g');

var IS_NATIVE_CODE_REGEXP = /\{\s*\[native code\]\s*\}/g;
var IS_PURE_FUNCTION = /function.*?\(/;
var IS_ARROW_FUNCTION = /.*?=>.*?/;
var UNSAFE_CHARS_REGEXP   = /[<>\/\u2028\u2029]/g;

var RESERVED_SYMBOLS = ['*', 'async'];

// Mapping of unsafe HTML and invalid JavaScript line terminator chars to their
// Unicode char counterparts which are safe to use in JavaScript strings.
var ESCAPED_CHARS = {
    '<'     : '\\u003C',
    '>'     : '\\u003E',
    '/'     : '\\u002F',
    '\u2028': '\\u2028',
    '\u2029': '\\u2029'
};

function escapeUnsafeChars(unsafeChar) {
    return ESCAPED_CHARS[unsafeChar];
}

module.exports = function serialize(obj, options) {
    options || (options = {});

    // Backwards-compatibility for `space` as the second argument.
    if (typeof options === 'number' || typeof options === 'string') {
        options = {space: options};
    }

    var functions = [];
    var regexps   = [];
    var dates     = [];
    var maps      = [];
    var sets      = [];

    // Returns placeholders for functions and regexps (identified by index)
    // which are later replaced by their string representation.
    function replacer(key, value) {
        if (!value) {
            return value;
        }

        // If the value is an object w/ a toJSON method, toJSON is called before
        // the replacer runs, so we use this[key] to get the non-toJSONed value.
        var origValue = this[key];
        var type = typeof origValue;

        if (type === 'object') {
            if(origValue instanceof RegExp) {
                return '@__R-' + UID + '-' + (regexps.push(origValue) - 1) + '__@';
            }

            if(origValue instanceof Date) {
                return '@__D-' + UID + '-' + (dates.push(origValue) - 1) + '__@';
            }

            if(origValue instanceof Map) {
                return '@__M-' + UID + '-' + (maps.push(origValue) - 1) + '__@';
            }

            if(origValue instanceof Set) {
                return '@__S-' + UID + '-' + (sets.push(origValue) - 1) + '__@';
            }
        }

        if (type === 'function') {
            return '@__F-' + UID + '-' + (functions.push(origValue) - 1) + '__@';
        }

        return value;
    }

    function serializeFunc(fn) {
      var serializedFn = fn.toString();
      if (IS_NATIVE_CODE_REGEXP.test(serializedFn)) {
          throw new TypeError('Serializing native function: ' + fn.name);
      }

      // pure functions, example: {key: function() {}}
      if(IS_PURE_FUNCTION.test(serializedFn)) {
          return serializedFn;
      }

      // arrow functions, example: arg1 => arg1+5
      if(IS_ARROW_FUNCTION.test(serializedFn)) {
          return serializedFn;
      }

      var argsStartsAt = serializedFn.indexOf('(');
      var def = serializedFn.substr(0, argsStartsAt)
        .trim()
        .split(' ')
        .filter(function(val) { return val.length > 0 });

      var nonReservedSymbols = def.filter(function(val) {
        return RESERVED_SYMBOLS.indexOf(val) === -1
      });

      // enhanced literal objects, example: {key() {}}
      if(nonReservedSymbols.length > 0) {
          return (def.indexOf('async') > -1 ? 'async ' : '') + 'function'
            + (def.join('').indexOf('*') > -1 ? '*' : '')
            + serializedFn.substr(argsStartsAt);
      }

      // arrow functions
      return serializedFn;
    }

    var str;

    // Creates a JSON string representation of the value.
    // NOTE: Node 0.12 goes into slow mode with extra JSON.stringify() args.
    if (options.isJSON && !options.space) {
        str = JSON.stringify(obj);
    } else {
        str = JSON.stringify(obj, options.isJSON ? null : replacer, options.space);
    }

    // Protects against `JSON.stringify()` returning `undefined`, by serializing
    // to the literal string: "undefined".
    if (typeof str !== 'string') {
        return String(str);
    }

    // Replace unsafe HTML and invalid JavaScript line terminator chars with
    // their safe Unicode char counterpart. This _must_ happen before the
    // regexps and functions are serialized and added back to the string.
    if (options.unsafe !== true) {
        str = str.replace(UNSAFE_CHARS_REGEXP, escapeUnsafeChars);
    }

    if (functions.length === 0 && regexps.length === 0 && dates.length === 0 && maps.length === 0 && sets.length === 0) {
        return str;
    }

    // Replaces all occurrences of function, regexp, date, map and set placeholders in the
    // JSON string with their string representations. If the original value can
    // not be found, then `undefined` is used.
    return str.replace(PLACE_HOLDER_REGEXP, function (match, type, valueIndex) {
        if (type === 'D') {
            return "new Date(\"" + dates[valueIndex].toISOString() + "\")";
        }

        if (type === 'R') {
            return regexps[valueIndex].toString();
        }

        if (type === 'M') {
            return "new Map(" + serialize(Array.from(maps[valueIndex].entries()), options) + ")";
        }

        if (type === 'S') {
            return "new Set(" + serialize(Array.from(sets[valueIndex].values()), options) + ")";
        }

        var fn = functions[valueIndex];

        return serializeFunc(fn);
    });
}

},{}]},{},[36])(36)
});

class GibberishProcessor extends AudioWorkletProcessor {
  static get parameterDescriptors() {}

  constructor( options ) {
    super( options )

    Gibberish = global.Gibberish
    Gibberish.ctx = { sampleRate }
    Gibberish.genish.hasWorklet = false
    Gibberish.preventProxy = true
    
    // TODO: need to figure out how to read memory amount
    // perhaps attach initialization to a message instead?
    // then we could easily re-init...
    Gibberish.init( undefined, undefined, 'processor' )
    Gibberish.preventProxy = false
    Gibberish.debug = false 
    Gibberish.processor = this
    Gibberish.time = 0

    this.port.onmessage = this.handleMessage.bind( this )
    this.queue = []
    Gibberish.ugens = this.ugens = new Map()

    // XXX ridiculous hack to get around processor not having a worklet property
    Gibberish.worklet = { ugens: this.ugens, port:this.port }
    Gibberish.genish.gen.samplerate = sampleRate

    this.ugens.set( Gibberish.id, Gibberish )

    this.messages = []
  }

  replaceProperties( obj ) {
    if( Array.isArray( obj ) ) {
      const out = []
      for( let i = 0; i < obj.length; i++ ){
        const prop = obj[ i ]
        if( prop === null ) continue
        //console.log( 'PROP:', prop )
        if( typeof prop === 'object' && prop.id !== undefined ) {
          let objCheck = this.ugens.get( prop.id )

          if( objCheck !== undefined ) {
            out[ i ] = prop.prop !== undefined ? objCheck[ prop.prop ] : objCheck

            if( prop.prop !== undefined ) console.log( 'got a ssd.out', prop, objCheck )
          }else{
            out[ i ]= prop
          }
        }else{
          if( prop === null ) continue

          if( typeof prop === 'object' && prop.action === 'wrap' ) {
            out[ i  ] = prop.value.bind( null, ...this.replaceProperties( prop.args ) )
          }else if( Array.isArray( prop ) ) {
            out[ i ] = this.replaceProperties( prop )
          }else{
            out[ i ] = prop
          }
        }
      }

      return out
    }else{
      const properties = obj
      for( let key in properties) {
        let prop = properties[ key ]
        if( typeof prop === 'object' && prop !== null && prop.id !== undefined ) {
          let objCheck = this.ugens.get( prop.id )
          if( objCheck !== undefined ) {
            properties[ key ] = objCheck
          } 
        }else if( Array.isArray( prop ) ) {
          properties[ key ] = this.replaceProperties( prop )
        }else{
          if( typeof prop === 'object' && prop !== null && prop.action === 'wrap' ) {
            properties[ key ] = prop.value()
          }
        }
      } 
      return properties
    }
    return obj
  }

  // playback delayed messages and clear the queue
  playQueue() {
    // must set delay property to false!!! otherwise the message
    // will be delayed continually...
    this.queue.forEach( m => { 
      m.data.delay = false; 
      try {
        this.handleMessage( m ) 
      }catch( e ) {
        console.error( e )
      }
    })
    this.queue.length = 0
  }

  handleMessage( event ) {
    if( event.data.delay === true ) {
      // we want to delay this message for some time in the future,
      // for example, when forcing code to execute at the start of the next
      // measure. playQueue will trigger all messages in the queue
      this.queue.push( event )

      return
    }

    if( event.data.address === 'add' ) {
      const rep = event.data
      let constructor = Gibberish

      let properties = this.replaceProperties(  eval( '(' + rep.properties + ')' ) )
      //console.log( 'properties:', properties )

      let ugen

      // if object is not a gibberish ugen...
      if( properties.nogibberish ) {
        ugen = properties
      }else{
        for( let i = 0; i < rep.name.length; i++ ) { constructor = constructor[ rep.name[ i ] ] }

        properties.id = rep.id
        
        ugen = properties.isop === true || properties.isPattern === true 
          ? constructor( ...properties.inputs ) 
          : constructor( properties )

        if( properties.isPattern ) {
          for( let key in properties ) {
            if( key !== 'input' && key !== 'isPattern' ) {
              ugen[ key ] = properties[ key ]
            }
          }
        }
      }
      
      if( rep.post ) {
        ugen[ rep.post ]()
      }

      //console.log( 'adding ugen:', ugen.id, ugen, rep )
      this.ugens.set( rep.id, ugen )

      ugen.id = rep.id
      initialized = true

    }else if( event.data.address === 'method' ) {
      //if( event.data.name === 'clear' )
        //console.log( event.data.address, event.data.name, event.data.args, this.ugens )

      const dict = event.data
      const obj  = this.ugens.get( dict.object )

      if( obj === undefined || typeof obj[ dict.name ] !== 'function' ) return
      // for edge case when serialized functions are being passed to method calls
      if( dict.functions === true ) {
        obj[ dict.name ]( eval( '(' + dict.args + ')' ) ) 
      }else{
        obj[ dict.name ]( ...dict.args.map( Gibberish.proxyReplace ) ) 
      }
    }else if( event.data.address === 'property' ) {
      // XXX this is the exact same as the 'set' key... ugh.
      const dict = event.data
      const obj  = this.ugens.get( dict.object )
      let value = dict.value
      if( typeof dict.value === 'object' && dict.value !== null && dict.value.id !== undefined ) {
        value = this.ugens.get( dict.value.id )
      }
      obj[ dict.name ] = value

    }else if( event.data.address === 'print' ) {
      const dict = event.data
      const obj  = this.ugens.get( dict.object ) 
      console.log( 'printing:', dict.object, obj )
    }else if( event.data.address === 'printProperty' ) {
      const dict = event.data
      const obj  = this.ugens.get( dict.object )
      console.log( 'printing:', obj[ dict.name ] )    
    }else if( event.data.address === 'set' ) {
      const dict = event.data
      const obj = this.ugens.get( dict.object )
      let value = dict.value
      if( typeof dict.value === 'object' && dict.value !== null && dict.value.id !== undefined ) {
        value = this.ugens.get( dict.value.id )
      }
      obj[ dict.name ] = value
    }else if( event.data.address === 'copy' ) {
      const target = this.ugens.get( event.data.id )

      if( target === undefined ) {
        // this should only occur when a buffer is loaded prior to a delayed instantiation. for example,
        // if gibber starts downloading a file, on beat two and is finished by beat three, the next measure
        // will not have occurred yet, meaning a delayed sampler instantiation will not yet have occurred.
        // in this case, we wait until the next measure boundary.
        this.queue.push( event )
      }else{
        target.data.onload( event.data.buffer )
      }
    }else if( event.data.address === 'copy_multi' ) {
      const target = this.ugens.get( event.data.id )

      if( target === undefined ) {
        // this should only occur when a buffer is loaded prior to a delayed instantiation. for example,
        // if gibber starts downloading a file, on beat two and is finished by beat three, the next measure
        // will not have occurred yet, meaning a delayed sampler instantiation will not yet have occurred.
        // in this case, we wait until the next measure boundary.
        this.queue.push( event )
      }else{
        const sampler = target.samplers[ event.data.filename ]
        if( sampler !== undefined ) 
          sampler.data.onload( event.data.buffer )
        else
          target.loadSample( event.data.filename, null, event.data.buffer )
      }
    }else if( event.data.address === 'callback' ) {
      console.log( Gibberish.callback.toString() )
    }else if( event.data.address === 'addConstructor' ) {
      const wrapper = eval( '(' + event.data.constructorString + ')' )
      Gibberish[ event.data.name ] = wrapper( Gibberish, Gibberish.genish )
    }else if( event.data.address === 'addMethod' ) {
      const target = this.ugens.get( event.data.id )

      if( target[ event.data.key ] === undefined ) {
        target[ event.data.key ] = eval( '(' + event.data.function + ')' )
        //console.log( 'adding method:', target, event.data.key )
      }
    }else if( event.data.address === 'monkeyPatch' ) {
      const target = this.ugens.get( event.data.id )
      if( target['___'+event.data.key] === undefined ) {
        target[ '___' + event.data.key ] = target[ event.data.key ]
        target[ event.data.key ] = eval( '(' + event.data.function + ')' )
        //console.log( 'monkey patch:', target, event.data.key )
      }
    }else if( event.data.address === 'dirty' ) {
      const obj = this.ugens.get( event.data.id )
      Gibberish.dirty( obj )
    }else if( event.data.address === 'initialize' ) {
      initialized = true
    }else if( event.data.address === 'addToProperty' ) {
      const dict = event.data
      const obj  = this.ugens.get( dict.object )
      obj[ dict.name ][ dict.key ] = dict.value
    }else if( event.data.address === 'addObjectToProperty' ) {
      const dict = event.data
      const obj  = this.ugens.get( dict.object )
      obj[ dict.name ][ dict.key ] = this.ugens.get( dict.value )
    }else if( event.data.address === 'messages' ) {
      console.log( 'messages:', this.messages )
    }else if( event.data.address === 'eval' ) {
      eval( event.data.code )
    }
  }

  process(inputs, outputs, parameters) {
    if( initialized === true ) {
      const gibberish = Gibberish
      const scheduler = gibberish.scheduler
      let   callback  = this.callback
      let   ugens     = gibberish.callbackUgens 
      Gibberish.outputs = outputs

      this.messages.length = 0
      // XXX is there some way to optimize this out?
      //if( callback === undefined && gibberish.graphIsDirty === false ) return true

      let callbacklength = gibberish.blockCallbacks.length

      if( callbacklength !== 0 ) {
        for( let i=0; i< callbacklength; i++ ) {
          gibberish.blockCallbacks[ i ]()
        }

        // can't just set length to 0 as callbacks might be added during for loop,
        // so splice pre-existing functions
        gibberish.blockCallbacks.splice( 0, callbacklength )
      }

      const output = outputs[ 0 ]
      const len = outputs[0][0].length
      let phase = 0

      for (let i = 0; i < len; ++i) {
        // run sequencers, catch errors and remove from queue
        try {
          phase = scheduler.tick()
        } catch(e) {
          console.error( e )
          scheduler.queue.pop()
          phase++ 
          //continue
        }

        // if sequencing triggers codegen...
        if( gibberish.graphIsDirty ) {
          const oldCallback = callback
          const oldUgens = ugens.slice(0)
          const oldNames = gibberish.callbackNames.slice(0)

          // generate callback and try to catch errors...
          let cb
          try{
            cb = gibberish.generateCallback()
          } catch(e) {
            console.log( 'callback error:', e )

            // restore callback 
            // XXX should some type of notification be sent to the main thread?
            cb = oldCallback
            gibberish.callbackUgens = oldUgens
            gibberish.callbackNames = oldNames
            gibberish.dirtyUgens.length = 0
            gibberish.graphIsDirty = false
          } finally {
            ugens = gibberish.callbackUgens
            this.callback = callback = cb
            // tell main thread that new callback has been created
            // in case it wants to display it / do something else
            this.port.postMessage({ address:'callback', code:cb.toString() }) 
          } 
        }

        //XXX sub real samplerate sheesh
        time += 1/sampleRate

        if( callback !== undefined ) {
          const out = callback.apply( null, ugens )

          output[0][ i ] = out[0]
          output[1][ i ] = out[1] 
        }
      }
      if( ugens.length > 1 ) {
        for( let i = 1; i < ugens.length - 1; i++ ) {
          const ugen = ugens[ i ]
          if( ugen.out !== undefined ) {
            //console.log( ugen.ugenName, ugen.out[0], ugen.out[1] )
            //this.messages.push( ugen.id, 'output', ugen.out.length === 1 ? ugen.out[ 0 ] : ugen.out )
            this.messages.push( ugen.id, 'output', ugen.out[0], ugen.out[1] )
          }
        }
      }     
      if( this.messages.length > 0 ) {
        try{ 
          this.port.postMessage({ 
            address:'state', 
            messages:this.messages 
          })
        } catch( e ) {
          console.groupCollapsed( 'There was an error passing state from the audio thread to the main thread.' )
          console.error( e )
          console.groupEnd()
        }
      }
      this.port.postMessage({
        address:'phase',
        value: phase
      })
    }
   
    // make sure this is always returned or the callback ceases!!!
    return true
  }
}

global.Gibberish.workletProcessor = GibberishProcessor 
registerProcessor( 'gibberish', global.Gibberish.workletProcessor );
